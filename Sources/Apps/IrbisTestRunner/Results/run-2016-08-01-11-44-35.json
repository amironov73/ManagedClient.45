[
  {
    "duration": "00:00:00.1150002",
    "Failed": false,
    "finish": "2016-08-01T11:44:28.8665629+09:00",
    "name": "TestConnectionFailure",
    "start": "2016-08-01T11:44:28.7515627+09:00",
    "output": "bad"
  },
  {
    "duration": "00:00:00.1170025",
    "Failed": false,
    "finish": "2016-08-01T11:44:29.4865665+09:00",
    "name": "TestFormatVerbatim",
    "start": "2016-08-01T11:44:29.369564+09:00",
    "output": "Привет, мир!"
  },
  {
    "duration": "00:00:00.0100000",
    "Failed": false,
    "finish": "2016-08-01T11:44:30.0005705+09:00",
    "name": "TestFormatOneRecord",
    "start": "2016-08-01T11:44:29.9905705+09:00",
    "output": ""
  },
  {
    "duration": "00:00:00.0500001",
    "Failed": false,
    "finish": "2016-08-01T11:44:30.5535737+09:00",
    "name": "TestFormatVirtualRecord",
    "start": "2016-08-01T11:44:30.5035736+09:00",
    "output": ""
  },
  {
    "duration": "00:00:00.0850001",
    "Failed": false,
    "finish": "2016-08-01T11:44:31.141578+09:00",
    "name": "TestFormatThreeRecords",
    "start": "2016-08-01T11:44:31.0565779+09:00",
    "output": ""
  },
  {
    "duration": "00:00:00.4420033",
    "Failed": false,
    "finish": "2016-08-01T11:44:32.0835851+09:00",
    "name": "TestFormatOptimized",
    "start": "2016-08-01T11:44:31.6415818+09:00",
    "output": ""
  },
  {
    "duration": "00:00:00.3180028",
    "Failed": true,
    "finish": "2016-08-01T11:44:32.9045896+09:00",
    "name": "TestReadRecord",
    "start": "2016-08-01T11:44:32.5865868+09:00",
    "output": "AM.VerificationException: Value\r\n   в AM.Verifier`1.Throw(String message) в c:\\Projects\\ManagedClient.45\\AM.Core\\AM\\Verifier.cs:строка 271\r\n   в AM.Verifier`1._Throw(String message) в c:\\Projects\\ManagedClient.45\\AM.Core\\AM\\Verifier.cs:строка 107\r\n   в AM.Verifier`1.Assert(Boolean condition, String message) в c:\\Projects\\ManagedClient.45\\AM.Core\\AM\\Verifier.cs:строка 170\r\n   в ManagedIrbis.SubField.Verify(Boolean throwOnError) в c:\\Projects\\ManagedClient.45\\ManagedIrbis\\SubField.cs:строка 380\r\n   в ManagedIrbis.RecordField.Verify(Boolean throwOnError) в c:\\Projects\\ManagedClient.45\\ManagedIrbis\\RecordField.cs:строка 874\r\n   в ManagedIrbis.MarcRecord.Verify(Boolean throwOnError) в c:\\Projects\\ManagedClient.45\\ManagedIrbis\\MarcRecord.cs:строка 558\r\n   в ManagedIrbis.Network.Commands.ReadRecordCommand.Execute(ClientQuery query) в c:\\Projects\\ManagedClient.45\\ManagedIrbis\\Network\\Commands\\ReadRecordCommand.cs:строка 137\r\n   в ManagedIrbis.IrbisConnection.ExecuteCommand(AbstractCommand command) в c:\\Projects\\ManagedClient.45\\ManagedIrbis\\IrbisConnection.cs:строка 557\r\n   в ManagedIrbis.IrbisConnection.ReadRecord(String database, Int32 mfn, Boolean lockFlag, String format) в c:\\Projects\\ManagedClient.45\\ManagedIrbis\\IrbisConnection.cs:строка 1211\r\n   в ManagedIrbis.IrbisConnectionUtility.ReadRecord(IrbisConnection connection, Int32 mfn) в c:\\Projects\\ManagedClient.45\\ManagedIrbis\\IrbisConnectionUtility.cs:строка 249\r\n   в IrbisTestRunner.Tests.ReadRecordTest.TestReadRecord()\r\n   в IrbisTestRunner.TestRunner.RunTests(AbstractTest testObject, MethodInfo method) в c:\\Projects\\ManagedClient.45\\ManagedIrbis\\Testing\\TestRunner.cs:строка 537\r\n"
  },
  {
    "duration": "00:00:00.0050000",
    "Failed": true,
    "finish": "2016-08-01T11:44:33.412591+09:00",
    "name": "TestReadAndFormatRecord",
    "start": "2016-08-01T11:44:33.407591+09:00",
    "output": "AM.VerificationException: Value\r\n   в AM.Verifier`1.Throw(String message) в c:\\Projects\\ManagedClient.45\\AM.Core\\AM\\Verifier.cs:строка 271\r\n   в AM.Verifier`1._Throw(String message) в c:\\Projects\\ManagedClient.45\\AM.Core\\AM\\Verifier.cs:строка 107\r\n   в AM.Verifier`1.Assert(Boolean condition, String message) в c:\\Projects\\ManagedClient.45\\AM.Core\\AM\\Verifier.cs:строка 170\r\n   в ManagedIrbis.SubField.Verify(Boolean throwOnError) в c:\\Projects\\ManagedClient.45\\ManagedIrbis\\SubField.cs:строка 380\r\n   в ManagedIrbis.RecordField.Verify(Boolean throwOnError) в c:\\Projects\\ManagedClient.45\\ManagedIrbis\\RecordField.cs:строка 874\r\n   в ManagedIrbis.MarcRecord.Verify(Boolean throwOnError) в c:\\Projects\\ManagedClient.45\\ManagedIrbis\\MarcRecord.cs:строка 558\r\n   в ManagedIrbis.Network.Commands.ReadRecordCommand.Execute(ClientQuery query) в c:\\Projects\\ManagedClient.45\\ManagedIrbis\\Network\\Commands\\ReadRecordCommand.cs:строка 137\r\n   в ManagedIrbis.IrbisConnection.ExecuteCommand(AbstractCommand command) в c:\\Projects\\ManagedClient.45\\ManagedIrbis\\IrbisConnection.cs:строка 557\r\n   в ManagedIrbis.IrbisConnection.ReadRecord(String database, Int32 mfn, Boolean lockFlag, String format) в c:\\Projects\\ManagedClient.45\\ManagedIrbis\\IrbisConnection.cs:строка 1211\r\n   в IrbisTestRunner.Tests.ReadRecordTest.TestReadAndFormatRecord()\r\n   в IrbisTestRunner.TestRunner.RunTests(AbstractTest testObject, MethodInfo method) в c:\\Projects\\ManagedClient.45\\ManagedIrbis\\Testing\\TestRunner.cs:строка 537\r\n"
  },
  {
    "duration": "00:00:00.0780002",
    "Failed": false,
    "finish": "2016-08-01T11:44:33.9925921+09:00",
    "name": "TestReadMultipleRecords",
    "start": "2016-08-01T11:44:33.9145919+09:00",
    "output": ""
  },
  {
    "duration": "00:00:00.0050000",
    "Failed": false,
    "finish": "2016-08-01T11:44:34.500593+09:00",
    "name": "TestVersion",
    "start": "2016-08-01T11:44:34.495593+09:00",
    "output": "Version: 0, MaxClients: 0, ConnectedClients: 0, Organization: "
  }
]