<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ManagedIrbis</name>
    </assembly>
    <members>
        <member name="T:ManagedIrbis.Batch.BatchAccessor">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchAccessor.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchAccessor.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchAccessor.ReadRecords(System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Read multiple records.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Batch.BatchRecordFormatter">
            <summary>
            Batch formatter for <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Batch.BatchRecordFormatter.BatchRead">
            <summary>
            Raised on batch reading.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Batch.BatchRecordFormatter.Exception">
            <summary>
            Raised when exception occurs.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordFormatter.BatchSize">
            <summary>
            Batch size.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordFormatter.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordFormatter.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordFormatter.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordFormatter.RecordsFormatted">
            <summary>
            Total number of records formatted.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordFormatter.TotalRecords">
            <summary>
            Number of records to format.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordFormatter.#ctor(ManagedIrbis.IrbisConnection,System.String,System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordFormatter.Interval(ManagedIrbis.IrbisConnection,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Read interval of records
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordFormatter.FormatAll">
            <summary>
            Считывает все записи сразу.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordFormatter.Search(ManagedIrbis.IrbisConnection,System.String,System.String,System.String,System.Int32)">
            <summary>
            Search and format records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordFormatter.WholeDatabase(ManagedIrbis.IrbisConnection,System.String,System.String,System.Int32)">
            <summary>
            Format whole database
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordFormatter.GetEnumerator">
            <summary>
            Get enumrator.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Batch.BatchRecordReader">
            <summary>
            Batch reader for <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Batch.BatchRecordReader.BatchRead">
            <summary>
            Raised on batch reading.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Batch.BatchRecordReader.Exception">
            <summary>
            Raised when exception occurs.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordReader.BatchSize">
            <summary>
            Batch size.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordReader.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordReader.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordReader.RecordsRead">
            <summary>
            Total number of records read.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordReader.TotalRecords">
            <summary>
            Number of records to read.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.#ctor(ManagedIrbis.IrbisConnection,System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.Interval(ManagedIrbis.IrbisConnection,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Read interval of records
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.ReadAll">
            <summary>
            Считывает все записи сразу.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.Search(ManagedIrbis.IrbisConnection,System.String,System.String,System.Int32)">
            <summary>
            Search and read records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.WholeDatabase(ManagedIrbis.IrbisConnection,System.String,System.Int32)">
            <summary>
            Read whole database
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.GetEnumerator">
            <summary>
            Get enumerator.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Batch.BatchRecordWriter">
            <summary>
            Batch writer for <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Batch.BatchRecordWriter.BatchWrite">
            <summary>
            Raised on batch write.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordWriter.Actualize">
            <summary>
            Actualize records when writing.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordWriter.Capacity">
            <summary>
            Capacity.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordWriter.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordWriter.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordWriter.RecordsWritten">
            <summary>
            Total number of records written.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordWriter.#ctor(ManagedIrbis.IrbisConnection,System.String,System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordWriter.AddRange(System.Collections.Generic.IEnumerable{ManagedIrbis.MarcRecord})">
            <summary>
            Add many records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordWriter.Append(ManagedIrbis.MarcRecord)">
            <summary>
            Append one record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordWriter.Flush">
            <summary>
            Flush the buffer.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordWriter.Dispose">
            <summary>
            Dispose the batch writer.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Caching.IrbisCache">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Caching.MenuCache">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Caching.MenuCache.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Caching.MenuCache.RequestCount">
            <summary>
            Request count.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Caching.MenuCache.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Caching.RecordCache">
            <summary>
            Cache of <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Caching.RecordCache.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Caching.RecordCache.RequestCount">
            <summary>
            Request count.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Caching.RecordCache.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Caching.TextCache">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Caching.TextCache.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Caching.TextCache.RequestCount">
            <summary>
            Request count.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Caching.TextCache.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ClientInfo">
            <summary>
            Информация о клиенте, подключенном к серверу ИРБИС
            (не обязательно о текущем).
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.Number">
            <summary>
            Номер
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.IPAddress">
            <summary>
            Адрес клиента
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.Port">
            <summary>
            Порт клиента
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.Name">
            <summary>
            Логин
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.ID">
            <summary>
            Идентификатор клиентской программы
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.Workstation">
            <summary>
            Клиентский АРМ
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.Registered">
            <summary>
            Время подключения к серверу
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.Acknowledged">
            <summary>
            Последнее подтверждение
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.LastCommand">
            <summary>
            Последняя команда
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.CommandNumber">
            <summary>
            Номер последней команды
            </summary>
        </member>
        <member name="M:ManagedIrbis.ClientInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Client.LocalCatalogerIniFile">
            <summary>
            INI-file for cataloger.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Client.LocalCatalogerIniFile.Main">
            <summary>
            Main section.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.LocalCatalogerIniFile.Ini">
            <summary>
            INI-file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.LocalCatalogerIniFile.MainSection">
            <summary>
            Main section.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.LocalCatalogerIniFile.Organization">
            <summary>
            Организация, на которую куплен ИРБИС.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.LocalCatalogerIniFile.ServerIP">
            <summary>
            IP адрес ИРБИС сервера.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.LocalCatalogerIniFile.ServerPort">
            <summary>
            Номер порта ИРБИС сервера.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.LocalCatalogerIniFile.#ctor(AM.IO.IniFile)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.LocalCatalogerIniFile.GetValue(System.String,System.String,System.String)">
            <summary>
            Get value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.LocalCatalogerIniFile.Load(System.String)">
            <summary>
            Load from specified file.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.RemoteCatalogerIniFile">
            <summary>
            INI-file for cataloger.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Client.RemoteCatalogerIniFile.Display">
            <summary>
            Display section name.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Client.RemoteCatalogerIniFile.Entry">
            <summary>
            Entry section name.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Client.RemoteCatalogerIniFile.Main">
            <summary>
            Main section name.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Client.RemoteCatalogerIniFile.Private">
            <summary>
            Private section name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.AutoinFile">
            <summary>
            Имя файла пакетного задания для АВТОВВОДА.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.AutoMerge">
            <summary>
            Разрешает (значение 1) или запрещает (значение 0) 
            автоматическое слияние двух версий записи при корректировке 
            (при получении сообщения о несовпадении версий – в ситуации, 
            когда одну запись пытаются одновременно откорректировать 
            два и более пользователей) Автоматическое слияние проводится 
            по формальному алгоритму: неповторяющиеся поля заменяются, 
            а оригинальные значения повторяющихся полей суммируются
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.BriefPft">
            <summary>
            Имя краткого (строкa) формата показа.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.ClientTimeLive">
            <summary>
            Интервал в мин., по истечении которого клиент посылает 
            на сервер уведомление о том, что он «жив».
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.CopyMnu">
            <summary>
            Имя файла-справочника со списком ТВП переформатирования 
            для копирования.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.CountTag">
            <summary>
            Метка поля «количество выдач» в БД ЭК.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.DatabaseList">
            <summary>
            Имя файла списка БД для АРМа Каталогизатора/Комплектатора.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.DbnFlc">
            <summary>
            Имя формата для ФЛК документа в целом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.DefaultDb">
            <summary>
            Имя базы данных по умолчанию.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.EmptyDbn">
            <summary>
            Имя шаблона для создания новой БД.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.ExemplarTag">
            <summary>
            Метка поля «экземпляры» в БД ЭК.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.ExportMenu">
            <summary>
            Имя файла-справочника со списком ТВП переформатирования 
            для экспорта.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.FormatMenu">
            <summary>
            Имя файла-справочника со списком доступных РЛ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.HelpDbn">
            <summary>
            Имя БД, содержащей тематический рубрикатор ГРНТИ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.ImportMenu">
            <summary>
            Имя файла-справочника со списком ТВП переформатирования 
            для импорта.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.IndexPrefix">
            <summary>
            Префикс инверсии для шифра документа в БД ЭК.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.IndexTag">
            <summary>
            Метка поля «шифр документа» в БД ЭК.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.Ini">
            <summary>
            INI-file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.IriMenu">
            <summary>
            Имя файла-справочника со списком постоянных запросов.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.MaxBriefPortion">
            <summary>
            Размер порции для показа кратких описаний.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.MaxMarked">
            <summary>
            Максимальное количество отмеченных документов.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.PftMenu">
            <summary>
            Имя файла-справочника со списком доступных форматов 
            показа документов.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.PftOpt">
            <summary>
            Имя оптимизационного файла, который определяет принцип 
            формата ОПТИМИЗИРОВАННЫЙ (в АРМах Читатель и Каталогизатор).
            Для БД электронного каталога (IBIS) значение PFTW.OPT 
            определяет в качестве оптимизированных  RTF-форматы, 
            а значение PFTW_H.OPT – HTML-форматы
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.SearchIni">
            <summary>
            Имя дополнительного INI-файла со сценариями поиска для БД.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.StandardDbn">
            <summary>
            Имя эталонной БД Электронного каталога.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.WorkDirectory">
            <summary>
            Директория для сохранения временных (выходных) данных.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.WsOpt">
            <summary>
            Имя файла оптимизации РЛ ввода.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.RemoteCatalogerIniFile.#ctor(AM.IO.IniFile)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.RemoteCatalogerIniFile.GetValue(System.String,System.String,System.String)">
            <summary>
            Get value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.RemoteCatalogerIniFile.GetValue``1(System.String,System.String,``0)">
            <summary>
            Get value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.RemoteCatalogerIniFile.SetValue(System.String,System.String,System.String)">
            <summary>
            Set value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.RemoteCatalogerIniFile.SetValue``1(System.String,System.String,``0)">
            <summary>
            Set value.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ConnectionSettings">
            <summary>
            Connection settings.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ConnectionSettings.DefaultHost">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.ConnectionSettings.DefaultDatabase">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.ConnectionSettings.DefaultWorkstation">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.ConnectionSettings.DefaultPort">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.Host">
            <summary>
            IP-address of the server.
            </summary>
            <remarks>Default value is "127.0.0.1".</remarks>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.Port">
            <summary>
            IP-port of the server.
            </summary>
            <remarks>Default value is 6666.</remarks>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.Username">
            <summary>
            User logon name.
            </summary>
            <remarks>Default value is <c>null</c>,
            so connection can't be made.</remarks>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.Password">
            <summary>
            User logon password.
            </summary>
            <remarks>Default value is <c>null</c>,
            so connection can't be made.</remarks>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.Database">
            <summary>
            Database name to connect.
            </summary>
            <remarks>Default value is "IBIS".
            Database with such a name can be
            non-existent.
            </remarks>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.Workstation">
            <summary>
            Workstation application kind.
            </summary>
            <remarks>Default value is
            <see cref="F:ManagedIrbis.IrbisWorkstation.Cataloger"/>.
            </remarks>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.NetworkLogging">
            <summary>
            Turn on network logging.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.SocketTypeName">
            <summary>
            Type name for ClientSocket.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.FactoryTypeName">
            <summary>
            Type name for CommandFactory.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.EngineTypeName">
            <summary>
            Type name for execution engine.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.RetryCount">
            <summary>
            Retry count.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.Connected">
            <summary>
            Saved "connected" state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.ApplyToConnection(ManagedIrbis.IrbisConnection)">
            <summary>
            Apply settings to the <see cref="T:ManagedIrbis.IrbisConnection"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.Clone">
            <summary>
            Clone.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.Decrypt(System.String)">
            <summary>
            Decrypt the connection settings.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.Encode">
            <summary>
            Encode parameters to text representation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.Encrypt">
            <summary>
            Encrypt the connection settings.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.FromConnection(ManagedIrbis.IrbisConnection)">
            <summary>
            Construct <see cref="T:ManagedIrbis.ConnectionSettings"/>
            from <see cref="T:ManagedIrbis.IrbisConnection"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.ParseConnectionString(System.String)">
            <summary>
            Парсинг строки подключения.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.ToString">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.CopyRecordManager">
            <summary>
            Copies and/or moves records from one database
            to another.
            </summary>
        </member>
        <member name="P:ManagedIrbis.CopyRecordManager.Connection">
            <summary>
            Connection
            </summary>
        </member>
        <member name="P:ManagedIrbis.CopyRecordManager.TargetDatabase">
            <summary>
            Target database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.CopyRecordManager.Actualize">
            <summary>
            Actualize records?
            </summary>
        </member>
        <member name="P:ManagedIrbis.CopyRecordManager.LockFlag">
            <summary>
            Lock records?
            </summary>
        </member>
        <member name="M:ManagedIrbis.CopyRecordManager.#ctor(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.CopyRecordManager.CopyRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Copy the record to (other) database.
            </summary>
            <returns>Record clone.</returns>
        </member>
        <member name="M:ManagedIrbis.CopyRecordManager.CopyRecord(System.Int32)">
            <summary>
            Copy the record to (other) database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.CopyRecordManager.MoveRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Move the record to (other) database.
            </summary>
            <returns>Record clone.</returns>
        </member>
        <member name="M:ManagedIrbis.CopyRecordManager.MoveRecord(System.Int32)">
            <summary>
            Move the record to (other) database.
            </summary>
        </member>
        <member name="T:ManagedIrbis.DatabaseInfo">
            <summary>
            Информация о базе данных ИРБИС
            </summary>
        </member>
        <member name="F:ManagedIrbis.DatabaseInfo.ItemDelimiter">
            <summary>
            Разделитель элементов
            </summary>
        </member>
        <member name="P:ManagedIrbis.DatabaseInfo.Name">
            <summary>
            Имя базы данных.
            </summary>
        </member>
        <member name="P:ManagedIrbis.DatabaseInfo.Description">
            <summary>
            Описание базы данных
            </summary>
        </member>
        <member name="P:ManagedIrbis.DatabaseInfo.MaxMfn">
            <summary>
            Максимальный MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.DatabaseInfo.LogicallyDeletedRecords">
            <summary>
            Список логически удаленных записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.DatabaseInfo.PhysicallyDeletedRecords">
            <summary>
            Список физически удаленных записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.DatabaseInfo.NonActualizedRecords">
            <summary>
            Список неактуализированных записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.DatabaseInfo.LockedRecords">
            <summary>
            Список заблокированных записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.DatabaseInfo.DatabaseLocked">
            <summary>
            Флаг монопольной блокировки базы данных.
            </summary>
        </member>
        <member name="P:ManagedIrbis.DatabaseInfo.ReadOnly">
            <summary>
            База данных только для чтения.
            </summary>
        </member>
        <member name="M:ManagedIrbis.DatabaseInfo.ParseServerResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Разбор ответа сервера.
            </summary>
        </member>
        <member name="M:ManagedIrbis.DatabaseInfo.ParseMenu(System.String[])">
            <summary>
            Разбор файла меню
            </summary>
        </member>
        <member name="M:ManagedIrbis.DatabaseInfo.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.DatabaseInfo.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.DatabaseInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Direct.DirectReader32">
            <summary>
            Direct reading IRBIS32 databases.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.DirectReader32.Mst">
            <summary>
            Master file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.DirectReader32.Xrf">
            <summary>
            Cross-reference file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.DirectReader32.InvertedFile">
            <summary>
            Inverted (index) file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.DirectReader32.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader32.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader32.GetMaxMfn">
            <summary>
            Get maximal MFN for the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader32.ReadRecord(System.Int32)">
            <summary>
            Read given record.
            </summary>
            <returns><c>null</c> if no such record
            or record physically deleted.</returns>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader32.ReadAllRecordVersions(System.Int32)">
            <summary>
            Read all versions of the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader32.SearchSimple(System.String)">
            <summary>
            Simple search by the key.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader32.SearchReadSimple(System.String)">
            <summary>
            Simple search and read records by the key.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader32.Dispose">
            <summary>
            Performs application-defined tasks associated
            with freeing, releasing, or resetting
            unmanaged resources.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.DirectReader64">
            <summary>
            Direct reading IRBIS64 databases.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.DirectReader64.Mst">
            <summary>
            Master file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.DirectReader64.Xrf">
            <summary>
            Cross-references file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.DirectReader64.InvertedFile">
            <summary>
            Inverted (index) file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.DirectReader64.Database">
            <summary>
            Database path.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader64.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader64.GetMaxMfn">
            <summary>
            Get max MFN for database. Not next MFN!
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader64.ReadRecord(System.Int32)">
            <summary>
            Read record with given MFN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader64.ReadAllRecordVersions(System.Int32)">
            <summary>
            Read all versions of the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader64.SearchSimple(System.String)">
            <summary>
            Simple search.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader64.SearchReadSimple(System.String)">
            <summary>
            Simple search and read records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader64.Dispose">
            <summary>
            Performs application-defined tasks associated
            with freeing, releasing, or resetting
            unmanaged resources.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.IfpRecord">
            <summary>
            Inverted file record
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.IfpRecord.MinPostingsInBlock">
            <summary>
            Число ссылок на термин, после превышения которого
            используется специальный блок ссылок.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpRecord.LowOffset">
            <summary>
            Младшее слово смещения на следующую запись(если нет - 0).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpRecord.HighOffset">
            <summary>
            Старшее слово смещения на следующую запись(если нет - 0).
            </summary>
            <remarks>Признак последнего блока – LOW=HIGH= -1.</remarks>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpRecord.TotalLinkCount">
            <summary>
            Ообщее число ссылок для данного термина
            (только в первой записи);
            число ссылок в данном блоке(в следующих записях).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpRecord.BlockLinkCount">
            <summary>
            Число ссылок в данном блоке.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpRecord.Capacity">
            <summary>
            Вместимость записи в ссылках.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpRecord.Links">
            <summary>
            Собственно ссылки.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.IfpRecord.Read(System.IO.Stream,System.Int64)">
            <summary>
            Считываем из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.IfpRecord.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Direct.InvertedFile32">
            <summary>
            Read inverted (index) file of IRBIS32 database.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.InvertedFile32.NodeLength">
            <summary>
            Node length for N01/L01 files.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile32.FileName">
            <summary>
            Name of the IFP file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile32.Ifp">
            <summary>
            Inverted file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile32.L01">
            <summary>
            L01 node file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile32.L02">
            <summary>
            L02 node file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile32.N01">
            <summary>
            N01 node file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile32.N02">
            <summary>
            N02 node file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.ReadNode(System.Int32)">
            <summary>
            Read given non-leaf node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.ReadLeaf(System.Int32)">
            <summary>
            Read given leaf node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.ReadNext(ManagedIrbis.Direct.NodeRecord)">
            <summary>
            Read next node.
            </summary>
            <returns><c>null</c> if there is no next node.
            </returns>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.ReadPrevious(ManagedIrbis.Direct.NodeRecord)">
            <summary>
            Read previous node.
            </summary>
            <returns><c>null</c> if there is no previous node.
            </returns>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.ReadIfpRecord(System.Int64)">
            <summary>
            Read <see cref="T:ManagedIrbis.Direct.IfpRecord"/> from given offset.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.SearchExact(System.String)">
            <summary>
            Search without truncation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.SearchTruncated(System.String)">
            <summary>
            Search with truncation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.SearchSimple(System.String)">
            <summary>
            Perform simple search.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.Dispose">
            <summary>
            Performs application-defined tasks associated
            with freeing, releasing, or resetting
            unmanaged resources.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.InvertedFile64">
            <summary>
            Read inverted (index) file of IRBIS32 database.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.InvertedFile64.NodeLength">
            <summary>
            Длина записи N01/L01.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile64.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile64.Ifp">
            <summary>
            IFP file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile64.L01">
            <summary>
            L01 node file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile64.N01">
            <summary>
            N01 node file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.ReadNode(System.Int32)">
            <summary>
            Read non-leaf node by number.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.ReadLeaf(System.Int32)">
            <summary>
            Read leaf node by number.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.ReadNext(ManagedIrbis.Direct.NodeRecord)">
            <summary>
            Read next node.
            </summary>
            <returns><c>null</c> if there is no next node.
            </returns>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.ReadPrevious(ManagedIrbis.Direct.NodeRecord)">
            <summary>
            Read previous node.
            </summary>
            <returns><c>null</c> if there is no previous node.
            </returns>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.ReadIfpRecord(System.Int64)">
            <summary>
            Read <see cref="T:ManagedIrbis.Direct.IfpRecord"/> from given offset.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.SearchExact(System.String)">
            <summary>
            Search without truncation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.SearchStart(System.String)">
            <summary>
            Search with truncation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.SearchSimple(System.String)">
            <summary>
            Perform simple search.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.Dispose">
            <summary>
            Performs application-defined tasks associated
            with freeing, releasing, or resetting
            unmanaged resources.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.MstControlRecord32">
            <summary>
            Первая запись в файле документов – управляющая 
            запись, которая формируется (в момент определения 
            базы данных или при ее инициализации) и поддерживается 
            автоматически.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstControlRecord32.RecordSize">
            <summary>
            Размер управляющей записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord32.Zero">
            <summary>
            Всегда 0.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord32.NextMfn">
            <summary>
            Номер записи файла документов, назначаемый 
            для следующей записи, создаваемой в базе данных.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord32.NextBlock">
            <summary>
            Номер последнего блока файла документов.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord32.NextOffset">
            <summary>
            Смещение следующей доступной позиции в последнем блоке.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord32.Type">
            <summary>
            Всегда 0 для файлов баз данных пользователя.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.MstControlRecord64">
            <summary>
            Первая запись в файле документов – управляющая 
            запись, которая формируется (в момент определения 
            базы данных или при ее инициализации) и поддерживается 
            автоматически.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstControlRecord64.RecordSize">
            <summary>
            Размер управляющей записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstControlRecord64.LockFlagPosition">
            <summary>
            Позиция индикатора блокировки базы данных
            в управляющей записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord64.Reserv1">
            <summary>
            Резерв.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord64.NextMfn">
            <summary>
            Номер записи файла документов, назначаемый 
            для следующей записи, создаваемой в базе данных.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord64.NextPosition">
            <summary>
            Смещение свободного места в файле; (всегда указывает
            на конец файла MST).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord64.Reserv2">
            <summary>
            Резерв.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord64.Reserv3">
            <summary>
            Резерв.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord64.Reserv4">
            <summary>
            Резерв.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord64.Blocked">
            <summary>
            Индикатор блокировки базы данных.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.MstDictionaryEntry32">
            <summary>
            Элемент справочника MST-файла,
            описывающий поле переменной длины.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstDictionaryEntry32.EntrySize">
            <summary>
            Длина элемента справочника MST-файла.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry32.Tag">
            <summary>
            Field tag.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry32.Position">
            <summary>
            Data offset.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry32.Length">
            <summary>
            Data length.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry32.Bytes">
            <summary>
            Raw data.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry32.Text">
            <summary>
            Decoded data.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstDictionaryEntry32.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Direct.MstDictionaryEntry64">
            <summary>
            Элемент справочника MST-файла,
            описывающий поле переменной длины.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstDictionaryEntry64.EntrySize">
            <summary>
            Длина элемента справочника MST-файла.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry64.Tag">
            <summary>
            Field tag.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry64.Position">
            <summary>
            Data offset.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry64.Length">
            <summary>
            Data length.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry64.Bytes">
            <summary>
            Raw data.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry64.Text">
            <summary>
            Decoded data.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstDictionaryEntry64.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Direct.MstFile32">
            <summary>
            Reading MST file.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstFile32.PreloadLength">
            <summary>
            How many data to preload?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstFile32.ControlRecord">
            <summary>
            Control record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstFile32.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile32.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile32.ReadRecord(System.Int64)">
            <summary>
            Read the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile32.ReadRecord2(System.Int64)">
            <summary>
            Read the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile32.LockDatabase(System.Boolean)">
            <summary>
            Блокировка базы данных в целом.
            </summary>
            <param name="flag"></param>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile32.ReadDatabaseLockedFlag">
            <summary>
            Чтение флага блокировки базы данных в целом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile32.Dispose">
            <summary>
            Performs application-defined tasks associated
            with freeing, releasing, or resetting
            unmanaged resources.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.MstFile64">
            <summary>
            Direct reads MST file.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstFile64.PreloadLength">
            <summary>
            How many data to preload?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstFile64.ControlRecord">
            <summary>
            Control record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstFile64.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile64.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile64.ReadRecord(System.Int64)">
            <summary>
            Read the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile64.ReadRecord2(System.Int64)">
            <summary>
            Read the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile64.LockDatabase(System.Boolean)">
            <summary>
            Блокировка базы данных в целом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile64.ReadDatabaseLockedFlag">
            <summary>
            Чтение флага блокировки базы данных в целом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile64.Dispose">
            <summary>
            Performs application-defined tasks associated
            with freeing, releasing, or resetting
            unmanaged resources.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.MstRecord32">
            <summary>
            MST file record.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstRecord32.MstBlockSize">
            <summary>
            Block size of MST file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecord32.Leader">
            <summary>
            Leader.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecord32.Dictionary">
            <summary>
            Dictionary.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecord32.Deleted">
            <summary>
            Whether the record deleted.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecord32.DecodeField(ManagedIrbis.Direct.MstDictionaryEntry32)">
            <summary>
            Decode the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecord32.DecodeRecord">
            <summary>
            Decode record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecord32.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Direct.MstRecord64">
            <summary>
            MST file record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecord64.Leader">
            <summary>
            Leader.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecord64.Dictionary">
            <summary>
            Dictionary.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecord64.Deleted">
            <summary>
            Whether the record deleted.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecord64.DecodeField(ManagedIrbis.Direct.MstDictionaryEntry64)">
            <summary>
            Decode the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecord64.DecodeRecord">
            <summary>
            Decode the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecord64.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Direct.MstRecordLeader32">
            <summary>
            Leader of MST record.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstRecordLeader32.LeaderSize">
            <summary>
            Фиксированный размер лидера записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader32.Mfn">
            <summary>
            Номер записи в  файле документов.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader32.Length">
            <summary>
            Длина записи (всегда четное число).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader32.PreviousBlock">
            <summary>
            Number of block containing previous version.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader32.PreviousOffset">
            <summary>
            Offset of previous version.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader32.Base">
            <summary>
            Смещение (базовый адрес) полей
            переменной длины (это общая часть
            лидера и справочника записи в байтах).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader32.Nvf">
            <summary>
            Число полей в записи (т.е. число входов
            в справочнике).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader32.Status">
            <summary>
            Индикатор записи (логически удаленная и т.п.).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecordLeader32.Read(System.IO.Stream)">
            <summary>
            Read the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecordLeader32.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Direct.MstRecordLeader64">
            <summary>
            Leader of MST record.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstRecordLeader64.LeaderSize">
            <summary>
            Фиксированный размер лидера записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader64.Mfn">
            <summary>
            Номер записи в  файле документов.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader64.Length">
            <summary>
            Длина записи (всегда четное число).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader64.Previous">
            <summary>
            Ссылка на предыдущую версию записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader64.Base">
            <summary>
            Смещение (базовый адрес) полей
            переменной длины (это общая часть
            лидера и справочника записи в байтах).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader64.Nvf">
            <summary>
            Число полей в записи (т.е. число входов
            в справочнике).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader64.Status">
            <summary>
            Индикатор записи (логически удаленная и т.п.).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader64.Version">
            <summary>
            Номер версии записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecordLeader64.Read(System.IO.Stream)">
            <summary>
            Read the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecordLeader64.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Direct.NodeRecord">
            <summary>
            Запись в файлах L01 и N01.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.NodeRecord.RecordSize">
            <summary>
            Длина записи в текущей реализации.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.NodeRecord.IsLeaf">
            <summary>
            Лист?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.NodeRecord.Leader">
            <summary>
            Заголовок
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.NodeRecord.Items">
            <summary>
            Ссылки
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.NodeRecord.#ctor">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.NodeRecord.#ctor(System.Boolean)">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.NodeRecord.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Direct.XrfFile32">
            <summary>
            Файл перекрестных ссылок XRF представляет собой
            таблицу ссылок на записи файла документов.
            Первая ссылка соответствует записи файла документов
            с номером 1, вторая – 2  и тд.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.XrfFile32.XrfBlockSize">
            <summary>
            Block size of XRF file.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.XrfFile32.XrfBlockCapacity">
            <summary>
            Block capacity of XRF file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfFile32.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile32.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile32.Decode(System.Int32)">
            <summary>
            Decode value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile32.ReadRecord(System.Int32)">
            <summary>
            Read the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile32.WriteRecord(ManagedIrbis.Direct.XrfRecord32)">
            <summary>
            Write the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile32.LockRecord(System.Int32,System.Boolean)">
            <summary>
            Lock the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile32.Dispose">
            <summary>
            Performs application-defined tasks associated
            with freeing, releasing, or resetting
            unmanaged resources.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.XrfFile64">
            <summary>
            Файл перекрестных ссылок XRF представляет собой
            таблицу ссылок на записи файла документов.
            Первая ссылка соответствует записи файла документов
            с номером 1, вторая – 2  и тд.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfFile64.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfFile64.InMemory">
            <summary>
            XRF located in memory?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile64.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="fileName"></param>
            <param name="inMemory"></param>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile64.ReadRecord(System.Int32)">
            <summary>
            Read the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile64.WriteRecord(ManagedIrbis.Direct.XrfRecord64)">
            <summary>
            Write the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile64.LockRecord(System.Int32,System.Boolean)">
            <summary>
            Lock the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile64.Dispose">
            <summary>
            Performs application-defined tasks associated
            with freeing, releasing, or resetting
            unmanaged resources.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.XrfRecord32">
            <summary>
            Contains information about record offset and status.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.XrfRecord32.RecordSize">
            <summary>
            Fixed record size.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord32.AbsoluteOffset">
            <summary>
            Absolute offset.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord32.BlockNumber">
            <summary>
            Block number.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord32.BlockOffset">
            <summary>
            Block offset.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord32.Status">
            <summary>
            Record status.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord32.Locked">
            <summary>
            Is the record locked.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord32.Deleted">
            <summary>
            Is the record deleted.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfRecord32.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Direct.XrfRecord64">
            <summary>
            Contains information about record offset and status.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.XrfRecord64.RecordSize">
            <summary>
            Fixed record size.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord64.Mfn">
            <summary>
            MFN
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord64.Offset">
            <summary>
            8-byte offset of the record in the MST file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord64.Status">
            <summary>
            Status of the record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord64.Locked">
            <summary>
            Is the record locked.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord64.Deleted">
            <summary>
            Is the record deleted.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfRecord64.ToString">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.NodeItem">
            <summary>
            Справочник в N01/L01 является таблицей, определяющей
            поисковый термин. Каждый ключ переменной длины, который
            есть в записи, представлен в справочнике одним входом,
            формат которого описывает следующая структура
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeItem.Length">
            <summary>
            Длина ключа
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeItem.KeyOffset">
            <summary>
            Смещение ключа от начала записи
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeItem.LowOffset">
            <summary>
            Младшее слово смещения
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeItem.HighOffset">
            <summary>
            Старшее слово смещения
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeItem.FullOffset">
            <summary>
            Полное смещение
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeItem.RefersToLeaf">
            <summary>
            Ссылается на лист?
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeItem.Text">
            <summary>
            Текстовое значение ключа
            </summary>
        </member>
        <member name="M:ManagedIrbis.NodeItem.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.NodeLeader">
            <summary>
            Лидер записи в N01, L01
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeLeader.Number">
            <summary>
            Номер записи (начиная с 1; в N01 номер первой записи
            равен номеру корневой записи дерева
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeLeader.Previous">
            <summary>
            Номер предыдущей записи (-1, если нет)
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeLeader.Next">
            <summary>
            Номер следующей записи (-1, если нет)
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeLeader.TermCount">
            <summary>
            Число ключей в записи
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeLeader.FreeOffset">
            <summary>
            Смещение на свободную позицию в записи
            (от начала записи)
            </summary>
        </member>
        <member name="M:ManagedIrbis.NodeLeader.Read(System.IO.Stream)">
            <summary>
            Считывание из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.NodeLeader.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.EmbeddedField">
            <summary>
            Работа со встроенными полями.
            </summary>
        </member>
        <member name="F:ManagedIrbis.EmbeddedField.DefaultCode">
            <summary>
            Код по умолчанию, используемый для встраивания полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.EmbeddedField.GetEmbeddedFields(ManagedIrbis.RecordField)">
            <summary>
            Получение встроенных полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.EmbeddedField.GetEmbeddedFields(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.Char)">
            <summary>
            Get embedded fields.
            </summary>
        </member>
        <member name="M:ManagedIrbis.EmbeddedField.GetEmbeddedField(ManagedIrbis.RecordField,System.String)">
            <summary>
            Получение встроенных полей с указанным тегом.
            </summary>
        </member>
        <member name="T:ManagedIrbis.FieldIndicator">
            <summary>
            Индикатор поля.
            </summary>
        </member>
        <member name="F:ManagedIrbis.FieldIndicator.NoValue">
            <summary>
            Значение не установлено.
            </summary>
        </member>
        <member name="F:ManagedIrbis.FieldIndicator.EmptyValue">
            <summary>
            For visual only.
            </summary>
        </member>
        <member name="T:ManagedIrbis.FieldIndicator.FieldIndicatorConverter">
            <summary>
            JSON converter for <see cref="T:ManagedIrbis.FieldIndicator"/>
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.FieldIndicatorConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The
            <see cref="T:Newtonsoft.Json.JsonWriter" />
            to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.
            </param>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.FieldIndicatorConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The
            <see cref="T:Newtonsoft.Json.JsonReader" />
            to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value
            of object being read.</param>
            <param name="serializer">The calling serializer.
            </param>
            <returns>The object value.</returns>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.FieldIndicatorConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert
            the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns><c>true</c> if this instance can convert
            the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:ManagedIrbis.FieldIndicator.Field">
            <summary>
            Field.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldIndicator.HasValue">
            <summary>
            Whether value is set?
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldIndicator.Value">
            <summary>
            Value of the indicator.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.Clone">
            <summary>
            Создание клона индикатора.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.SetReadOnly">
            <summary>
            Marks the indicator as read-only.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.SetValue(System.String)">
            <summary>
            Установка значения.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.ToText">
            <summary>
            Text representation of the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore the object state from the given stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save the object state to the given stream.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldIndicator.ReadOnly">
            <summary>
            Whether the indicator is read-only?
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.AsReadOnly">
            <summary>
            Creates read-only clone of the indicator.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.ThrowIfReadOnly">
            <summary>
            Throws if read only.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.FieldReference">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.FieldReference.NoCode">
            <summary>
            Нет кода.
            </summary>
        </member>
        <member name="T:ManagedIrbis.FieldReference.Verb">
            <summary>
            Команда вывода.
            </summary>
        </member>
        <member name="F:ManagedIrbis.FieldReference.Verb.V">
            <summary>
            Простой вывод.
            </summary>
        </member>
        <member name="F:ManagedIrbis.FieldReference.Verb.D">
            <summary>
            Условный вывод.
            </summary>
        </member>
        <member name="F:ManagedIrbis.FieldReference.Verb.N">
            <summary>
            Негативный вывод.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.ConditionalPrefix">
            <summary>
            Условный префикс.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.RepeatablePrefix">
            <summary>
            Повторяемый префикс.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.PlusPrefix">
            <summary>
            Наличие + у повторяемого префикса.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.Command">
            <summary>
            Команда вывода: V, D или N
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.FieldTag">
            <summary>
            Тег поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.EmbeddedTag">
            <summary>
            Тег встроенного поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.SubField">
            <summary>
            Код подполя.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.IndexFrom">
            <summary>
            Начальный номер повторения.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.IndexTo">
            <summary>
            Конечный номер повторения.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.Offset">
            <summary>
            Смещение.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.Length">
            <summary>
            Длина.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.ConditionalSuffix">
            <summary>
            Условный суффикс.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.RepeatableSuffix">
            <summary>
            Повторяемый суффикс.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.PlusSuffix">
            <summary>
            Наличие '+' у суффикса.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.#ctor(System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.#ctor(System.String,System.Char)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.Decorate(System.String[])">
            <summary>
            Добавление префиксов/суффиксов
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.GetFieldValue(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Получение значений полей/подполей
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.Format(System.String[])">
            <summary>
            Форматируем строки.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.FormatSingle(System.String[])">
            <summary>
            Форматируем в одну строку.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.Format(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Форматируем поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.FormatSingle(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Форматируем поля в одну строку.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.Format(ManagedIrbis.MarcRecord)">
            <summary>
            Форматируем запись.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.FormatSingle(ManagedIrbis.MarcRecord)">
            <summary>
            Форматируем запись в одну строку.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.LimitIndex(System.String[])">
            <summary>
            Отбор по индексу.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.LimitLength(System.String[])">
            <summary>
            Усечение строк.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.Parse(System.String)">
            <summary>
            Парсинг из строкового представления.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.ToSourceCode">
            <summary>
            Превращаем в исходный код ИРБИС.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.FieldReference.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.BinaryResource">
            <summary>
            Binary resource in field 953.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.BinaryResource.Tag">
            <summary>
            Default tag for binary resources.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.BinaryResource.Kind">
            <summary>
            Kind of resource. Subfield a.
            </summary>
            <remarks>For example, "jpg".</remarks>
        </member>
        <member name="P:ManagedIrbis.Fields.BinaryResource.Resource">
            <summary>
            Percent-encoded resource. Subfield b.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.BinaryResource.Title">
            <summary>
            Title of resource. Subfield t.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.BinaryResource.View">
            <summary>
            View method. Subfield p.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.BinaryResource.Decode">
            <summary>
            Decode the resource.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.BinaryResource.Encode(System.Byte[])">
            <summary>
            Encode the resource.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.BinaryResource.Parse(ManagedIrbis.RecordField)">
            <summary>
            Parse field 953.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.BinaryResource.Parse(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Parse fields 953 of the <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.BinaryResource.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Parse fields 953 of the <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.CodesInfo">
            <summary>
            Коды (поле 900).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.DocumentType">
            <summary>
            Тип документа. Подполе t.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.DocumentKind">
            <summary>
            Вид документа. Подполе b.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.DocumentCharacter1">
            <summary>
            Характер документа. Подполе c.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.DocumentCharacter2">
            <summary>
            Характер документа. Подполе 2.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.DocumentCharacter3">
            <summary>
            Характер документа. Подполе 3.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.DocumentCharacter4">
            <summary>
            Характер документа. Подполе 4.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.DocumentCharacter5">
            <summary>
            Характер документа. Подполе 5.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.DocumentCharacter6">
            <summary>
            Характер документа. Подполе 6.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.PurposeCode1">
            <summary>
            Код целевого назначения. Подполе x.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.PurposeCode2">
            <summary>
            Код целевого назначения. Подполе y.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.PurposeCode3">
            <summary>
            Код целевого назначения. Подполе 9.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.AgeRestrictions">
            <summary>
            Возрастные ограничения. Подполе z.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.CodesInfo.Parse(ManagedIrbis.RecordField)">
            <summary>
            Parse the specified field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.CodesInfo.ToField">
            <summary>
            Transform back to field.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.ExemplarInfo">
            <summary>
            Информация об экземпляре (поле 910).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExemplarInfo.KnownCodes">
            <summary>
            Известные коды подполей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExemplarInfo.ExemplarTag">
            <summary>
            Тег полей, содержащих сведения об экземплярах.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Status">
            <summary>
            Статус. Подполе a.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Number">
            <summary>
            Инвентарный номер. Подполе b.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Date">
            <summary>
            Дата поступления. Подполе c.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Place">
            <summary>
            Место хранения. Подполе d.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Collection">
            <summary>
            Наименование коллекции. Подполе q.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.ShelfIndex">
            <summary>
            Расстановочный шифр. Подполе r.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Price">
            <summary>
            Цена экземпляра. Подполе e.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Barcode">
            <summary>
            Штрих-код/радиометка. Подполе h.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Amount">
            <summary>
            Число экземпляров. Подполе 1.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Purpose">
            <summary>
            Специальное назначение фонда. Подполе t.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Coefficient">
            <summary>
            Коэффициент многоразового использования. Подполе =.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.OffBalance">
            <summary>
            Экземпляры не на баланс. Подполе 4.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.KsuNumber1">
            <summary>
            Номер записи КСУ. Подполе u.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.ActNumber1">
            <summary>
            Номер акта. Подполе y.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Channel">
            <summary>
            Канал поступления. Подполе f.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.OnHand">
            <summary>
            Число выданных экземпляров. Подполе 2.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.ActNumber2">
            <summary>
            Номер акта списания. Подполе v.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.WriteOff">
            <summary>
            Количество списываемых экземпляров. Подполе x.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Completion">
            <summary>
            Количество экземпляров для докомплектования. Подполе k.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.ActNumber3">
            <summary>
            Номер акта передачи в другое подразделение. Подполе w.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Moving">
            <summary>
            Количество передаваемых экземпляров. Подполе z.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.NewPlace">
            <summary>
            Нове место хранения. Подполе m.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.CheckedDate">
            <summary>
            Дата проверки фонда. Подполе s.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.CheckedAmount">
            <summary>
            Число проверенных экземпляров. Подполе 0.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.RealPlace">
            <summary>
            Реальное место нахождения книги. Подполе !.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.BindingIndex">
            <summary>
            Шифр подшивки. Подполе p.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.BindingNumber">
            <summary>
            Инвентарный номер подшивки. Подполе i.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Year">
            <summary>
            Год издания. Берётся не из подполя.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.OtherSubFields">
            <summary>
            Прочие подполя, не попавшие в вышеперечисленные.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Mfn">
            <summary>
            MFN записи, из которой заимствован экземпляр.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Description">
            <summary>
            Краткое библиографическое описание экземпляра.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Bbk">
            <summary>
            ББК.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.SequentialNumber">
            <summary>
            Номер по порядку (для списков).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.OrderingData">
            <summary>
            Информация для упорядочения в списках.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfo.Parse(ManagedIrbis.RecordField)">
            <summary>
            Parses the specified field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfo.Parse(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Разбор записи на экземпляры.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfo.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи на экземпляры.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfo.ToField">
            <summary>
            Преобразование экземпляра обратно в поле записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfo.CompareNumbers(ManagedIrbis.Fields.ExemplarInfo,ManagedIrbis.Fields.ExemplarInfo)">
            <summary>
            Compares two specified numbers.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfo.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfo.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Fields.ExemplarManager">
            <summary>
            Exemplar manager
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarManager.Client">
            <summary>
            Client.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarManager.Format">
            <summary>
            Brief format name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarManager.List">
            <summary>
            List of exemplars.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarManager.Output">
            <summary>
            Output.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarManager.Prefix">
            <summary>
            Prefix.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.#ctor(ManagedIrbis.IrbisConnection,AM.Text.Output.AbstractOutput)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.Add(ManagedIrbis.Fields.ExemplarInfo)">
            <summary>
            Add given exemplar to the collection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.AddRange(System.Collections.Generic.IEnumerable{ManagedIrbis.Fields.ExemplarInfo})">
            <summary>
            Add many.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.Clear">
            <summary>
            Clear the list of exemplars.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.GetDescription(ManagedIrbis.MarcRecord)">
            <summary>
            Get bibliographic description.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.GetDescription(ManagedIrbis.MarcRecord,ManagedIrbis.Fields.ExemplarInfo)">
            <summary>
            Get bibliographic description.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.Extend(ManagedIrbis.Fields.ExemplarInfo,ManagedIrbis.MarcRecord)">
            <summary>
            Extend info.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.Find(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.FromRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Parses the record for exemplars.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.IsNewspaper(ManagedIrbis.MarcRecord)">
            <summary>
            Determines whether the record is newspaper/magazine
            or not.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.ListPlaces">
            <summary>
            List library places.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.LoadFromFile(System.String)">
            <summary>
            Load from file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.Read(System.String)">
            <summary>
            Reads exemplar for given number.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.ReadConfiguration(System.String,System.Text.Encoding)">
            <summary>
            Read configuration.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.SaveConfiguration(System.String,System.Text.Encoding)">
            <summary>
            Save the configuration.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.SaveToFile(System.String)">
            <summary>
            Save to the file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.ReadRange(System.String,System.String,System.Object[])">
            <summary>
            Read many.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.Remove(System.String)">
            <summary>
            Remove
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.WriteLine(System.String,System.Object[])">
            <summary>
            Write line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.WriteDelimiter">
            <summary>
            Write delimiter.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.RevisionInfo">
            <summary>
            Данные о редактировании записи (поле 907).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.RevisionInfo.KnownCodes">
            <summary>
            Известные коды подполей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.RevisionInfo.Tag">
            <summary>
            Тег поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.RevisionInfo.Stage">
            <summary>
            Этап работы. Подполе c.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.RevisionInfo.Date">
            <summary>
            Дата. Подполе a.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.RevisionInfo.Name">
            <summary>
            ФИО оператора. Подполе b.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.RevisionInfo.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.RevisionInfo.Parse(ManagedIrbis.RecordField)">
            <summary>
            Разбор поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.RevisionInfo.Parse(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.RevisionInfo.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.RevisionInfo.ToField">
            <summary>
            Превращение обратно в поле.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.RevisionInfo.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.RevisionInfo.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.RevisionInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.FieldTag">
            <summary>
            Field tag related routines.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldTag.ThrowOnValidate">
            <summary>
            Бросать исключения при валидации?
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldTag.IsValidTag(System.String)">
            <summary>
            Whether given tag is valid?
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldTag.Normalize(System.String)">
            <summary>
            Normalization.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldTag.Verify(System.String,System.Boolean)">
            <summary>
            Verify the tag value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldTag.Verify(System.String)">
            <summary>
            Verify the tag value.
            </summary>
        </member>
        <member name="T:ManagedIrbis.FieldValue">
            <summary>
            Field value related routines.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldValue.ThrowOnVerify">
            <summary>
            Throw exception on verification error.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldValue.IsValidValue(System.String)">
            <summary>
            Whether the value valid.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldValue.Normalize(System.String)">
            <summary>
            Field value normalization.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldValue.Verify(System.String)">
            <summary>
            Verify subfield value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldValue.Verify(System.String,System.Boolean)">
            <summary>
            Verify subfield code.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Flc.FlcConstants">
            <summary>
            Formal control related constants.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Flc.FlcConstants.DbnFlc">
            <summary>
            Check record update or creation.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Flc.FlcConstants.DelFlc">
            <summary>
            Check record deletion.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Flc.FlcProcessor">
            <summary>
            FLC processor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Flc.FlcProcessor.CheckRecord(ManagedIrbis.IrbisConnection,ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Check the record.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Flc.FlcResult">
            <summary>
            Result of formal checking.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Flc.FlcResult.CanContinue">
            <summary>
            Can continue?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Flc.FlcResult.Status">
            <summary>
            Status.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Flc.FlcResult.Messages">
            <summary>
            Messages.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Flc.FlcResult.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Flc.FlcResult.Parse(System.String)">
            <summary>
            Parse the text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Flc.FlcResult.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore the object state from the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Flc.FlcResult.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save the object stat to the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Flc.FlcResult.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Flc.FlcStatus">
            <summary>
            первый символ результата форматирования определяет
            результат ФЛК
            </summary>
        </member>
        <member name="F:ManagedIrbis.Flc.FlcStatus.OK">
            <summary>
            означает положительный результат контроля.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Flc.FlcStatus.Error">
            <summary>
            означает отрицательный результат и обнаруженные ошибки
            считаются непреодолимыми, т.е. подлежат
            обязательному устранению.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Flc.FlcStatus.Warning">
            <summary>
            означает отрицательный результат, но при этом ошибки
            считаются преодолимыми, т.е. их можно не исправлять.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fst.FstFile">
            <summary>
            FST file handling
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fst.FstFile.FileName">
            <summary>
            File name (for identification only).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fst.FstFile.Lines">
            <summary>
            Lines of the file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstFile.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstFile.ConcatenateFormat">
            <summary>
            Build concatenated format string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstFile.ParseStream(System.IO.TextReader)">
            <summary>
            Parse the stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstFile.ParseLocalFile(System.String,System.Text.Encoding)">
            <summary>
            Parse local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstFile.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstFile.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to specified stream.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fst.FstIndexMethod">
            <summary>
            Метод индексирования.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fst.FstIndexMethod.Method0">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fst.FstIndexMethod.Method1">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fst.FstIndexMethod.Method2">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fst.FstIndexMethod.Method3">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fst.FstIndexMethod.Method4">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fst.FstIndexMethod.Method5">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fst.FstIndexMethod.Method6">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fst.FstIndexMethod.Method7">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fst.FstIndexMethod.Method8">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fst.FstLine">
            <summary>
            FST file line.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fst.FstLine.LineNumber">
            <summary>
            Line number.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fst.FstLine.Tag">
            <summary>
            Field tag.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fst.FstLine.Method">
            <summary>
            Index method.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fst.FstLine.Format">
            <summary>
            Format itself.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstLine.ParseStream(System.IO.TextReader)">
            <summary>
            Parse one line from the stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstLine.ToFormat">
            <summary>
            Convert line to the IRBIS format.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstLine.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstLine.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to specified stream.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fst.FstProcessor">
            <summary>
            FST processor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fst.FstProcessor.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstProcessor.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstProcessor.ReadFile(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Read FST file from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstProcessor.TransformRecord(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Transform record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstProcessor.TransformRecord(ManagedIrbis.MarcRecord,ManagedIrbis.Fst.FstFile)">
            <summary>
            Transform the record.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.Gbl">
            <summary>
            Shortcuts for popular GBL commands.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblBuilder">
            <summary>
            <para>Инструмент для упрощённого построения заданий на
            глобальную корректировку.</para>
            <para>Пример построения и выполнения задания:</para>
            <code>
            GblResult result = new GblBuilder()
                   .Add("3079", "'1'")
                   .Delete("3011")
                   .Execute
                        (
                            connection,
                            "IBIS",
                            new[] {30, 32, 34}
                        );
            Console.WriteLine
                (
                    "Processed {0} records",
                    result.RecordsProcessed
                );
            foreach (ProtocolLine line in result.Protocol)
            {
                Console.WriteLine(line);
            }
            </code>
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.AddStatement(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Add an arbitrary statement.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Add(System.String,System.String)">
            <summary>
            Command "ADD".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Add(System.String,System.String,System.String)">
            <summary>
            Command "ADD".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Change(System.String,System.String,System.String)">
            <summary>
            Command "CHA".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Change(System.String,System.String,System.String,System.String)">
            <summary>
            Command "CHA".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Delete(System.String,System.String)">
            <summary>
            Command "DEL".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Delete(System.String)">
            <summary>
            Command "DEL".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.DeleteRecord">
            <summary>
            Command "DELR".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Execute(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Execute the GBL on the given database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Execute(ManagedIrbis.IrbisConnection)">
            <summary>
            Execute the GBL on the search result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Execute(ManagedIrbis.IrbisConnection,System.String,System.String)">
            <summary>
            Execute the GBL on the search result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Execute(ManagedIrbis.IrbisConnection,System.String,System.Int32,System.Int32)">
            <summary>
            Execute the GBL on given record interval.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Execute(ManagedIrbis.IrbisConnection,System.Int32,System.Int32)">
            <summary>
            Execute the GBL on given record interval.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Execute(ManagedIrbis.IrbisConnection,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Execute the GBL on given recordset.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Execute(ManagedIrbis.IrbisConnection,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Execute the GBL on given recordset.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Fi">
            <summary>
            Command "FI" - closes "IF".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.If(System.String)">
            <summary>
            Command "IF".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.If(System.String,ManagedIrbis.Gbl.GblStatement[])">
            <summary>
            Command "IF".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.If(System.String,ManagedIrbis.Gbl.GblBuilder)">
            <summary>
            Command "IF"
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Nop">
            <summary>
            Comment.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Nop(System.String)">
            <summary>
            Comment.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Nop(System.String,System.String)">
            <summary>
            Comment.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Replace(System.String,System.String,System.String)">
            <summary>
            Command "REP".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Replace(System.String,System.String)">
            <summary>
            Command "REP".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.ToStatements">
            <summary>
            Build statement array.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Undo(System.String)">
            <summary>
            Command "UNDO"
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.VerifyCode(System.String)">
            <summary>
            Verify command code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.VerifyField(System.String)">
            <summary>
            Verify field specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.VerifyFormat(System.String)">
            <summary>
            Verify format specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.VerifyParameter(System.String)">
            <summary>
            Verify command parameter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.VerifyRepeat(System.String)">
            <summary>
            Verify field repeat specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.VerifyValue(System.String)">
            <summary>
            Verify value for command.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblCode">
            <summary>
            Command codes for GBL files.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.Add">
            <summary>
            Добавление нового повторения поля или подполя
            в заданное существующее поле.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.Delete">
            <summary>
            Удаляет поле или подполе в поле.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.Replace">
            <summary>
            Замена целиком поля или подполя.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.Change">
            <summary>
            Замена данных в поле или подполе.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.ChangeCase">
            <summary>
            Замена данных в поле или подполе.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.DeleteRecord">
            <summary>
            Удаление записи в целом.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.UndeleteRecord">
            <summary>
            Восстановление записи в целом.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.CorrectRecords">
            <summary>
            Из текущей записи, вызывает на корректировку другие записи, 
            отобранные по поисковым терминам  из текущей или другой, 
            доступной в системе, базы данных.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.CreateRecord">
            <summary>
            Создает новую запись в текущей или другой базе данных.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.EmptyRecord">
            <summary>
            Очищает (опустошает) текущую запись.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.Undo">
            <summary>
            Переход к одной из предыдущих копий записи (откат).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.Comment">
            <summary>
            Комментарий. Может находиться между другими операторами 
            и содержать любые тексты в строках (до 4-х) после себя.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.End">
            <summary>
            Завершает работу с другой базой данных,
            установленной в операторах CORREC или NEWREC.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.If">
            <summary>
            Определяет условие выполнения операторов, 
            следующих за ним до оператора FI. 
            Состоит из двух строк: первая строка – имя оператора IF; 
            вторая строка – формат, результатом которого может быть строка ‘1’, 
            что означает разрешение на выполнение последующих операторов, 
            или любое другое значение, что означает запрет 
            на выполнение последующих операторов.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.Fi">
            <summary>
            Завершает действие оператора IF. Состоит из одной строки – FI.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.All">
            <summary>
            Оператор можно использовать в группе операторов после операторов 
            NEWMFN или CORREC. Он дополняет записи всеми полями текущей записи. 
            Т. е. это способ, например, создать новую запись и наполнить 
            ее содержимым текущей записи. Или можно вызвать на корректировку 
            другую запись (CORREC), очистить ее (EMPTY) и наполнить содержимым 
            текущей записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.PutLog">
            <summary>
            Формирование пользовательского протокола.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.Repeat">
            <summary>
            Операторы REPEAT-UNTIL организуют цикл выполнения группы операторов. 
            Группа операторов между ними будет выполняться до тех пор, 
            пока формат в операторе UNTIL будет давать значение ‘1’.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.Until">
            <summary>
            Второй строкой оператора должен быть формат, который позволяет 
            завершить цикл, если результат форматирования на текущей записи 
            отличен от ‘1’.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblEventArgs">
            <summary>
            Event arguments for <see cref="T:ManagedIrbis.Gbl.GlobalCorrector"/>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblEventArgs.Corrector">
            <summary>
            <see cref="T:ManagedIrbis.Gbl.GlobalCorrector"/>
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblEventArgs.Cancel">
            <summary>
            Whether the execution canceled.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblEventArgs.#ctor(ManagedIrbis.Gbl.GlobalCorrector)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblExecutive">
            <summary>
            Executes GBL statements locally.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblExecutive.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblExecutive.Record">
            <summary>
            Record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblExecutive.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.MarcRecord)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblExecutive.GetField(System.String)">
            <summary>
            Get the field from the specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblExecutive.IsSubField(System.String)">
            <summary>
            Whether the subfield specification.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblFile">
            <summary>
            GBL file
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblFile.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblFile.Statements">
            <summary>
            Items.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblFile.Parameters">
            <summary>
            Parameters.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblFile.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblFile.ParseLocalFile(System.String,System.Text.Encoding)">
            <summary>
            Parse local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblFile.ParseStream(System.IO.TextReader)">
            <summary>
            Parse specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblFile.ShouldSerializeParameters">
            <summary>
            Should JSON serialize <see cref="P:ManagedIrbis.Gbl.GblFile.Parameters"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblFile.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from specified stream.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblFile.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblFile.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblParameter">
            <summary>
            Parameter for GBL file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblParameter.Name">
            <summary>
            Parameter name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblParameter.Value">
            <summary>
            Parameter value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblParameter.ParseStream(System.IO.TextReader)">
            <summary>
            Parse specifiedStream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblParameter.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from given stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblParameter.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to given stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblParameter.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblParameter.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblResult">
            <summary>
            Result of GBL execution.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblResult.TimeStarted">
            <summary>
            Момент начала обработки.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblResult.TimeElapsed">
            <summary>
            Всего времени затрачено (с момента начала обработки).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblResult.Canceled">
            <summary>
            Отменено пользователем.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblResult.Exception">
            <summary>
            Исключение (если возникло).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblResult.RecordsSupposed">
            <summary>
            Предполагалось обработать записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblResult.RecordsProcessed">
            <summary>
            Обработано записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblResult.RecordsSucceeded">
            <summary>
            Успешно обработано записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblResult.RecordsFailed">
            <summary>
            Ошибок при обработке записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblResult.Protocol">
            <summary>
            Результаты для каждой записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblResult.GetEmptyResult">
            <summary>
            Get empty result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblResult.MergeResult(ManagedIrbis.Gbl.GblResult)">
            <summary>
            Merge result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblResult.Parse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Parse server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblResult.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblSettings">
            <summary>
            Settings for GBL execution.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.Actualize">
            <summary>
            Actualize records after processing.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.Autoin">
            <summary>
            Process 'autoin.gbl'.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.FirstRecord">
            <summary>
            First record MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.FormalControl">
            <summary>
            Provide formal control.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.MaxMfn">
            <summary>
            Maximal MFN.
            </summary>
            <remarks>0 means 'all records in the database'.
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.MfnList">
            <summary>
            List of MFN to process.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.MinMfn">
            <summary>
            Minimal MFN.
            </summary>
            <remarks>0 means 'all records in the database'.
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.NumberOfRecords">
            <summary>
            Number of records to process.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.SearchExpression">
            <summary>
            Search expression.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.Statements">
            <summary>
            Statements.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.#ctor(ManagedIrbis.IrbisConnection,System.Collections.Generic.IEnumerable{ManagedIrbis.Gbl.GblStatement})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.FromJson(System.String)">
            <summary>
            Restore settings from JSON string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.ForInterval(ManagedIrbis.IrbisConnection,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{ManagedIrbis.Gbl.GblStatement})">
            <summary>
            Create <see cref="T:ManagedIrbis.Gbl.GblSettings"/>
            for given interval of MFN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.ForInterval(ManagedIrbis.IrbisConnection,System.String,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{ManagedIrbis.Gbl.GblStatement})">
            <summary>
            Create <see cref="T:ManagedIrbis.Gbl.GblSettings"/>
            for given interval of MFN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.ForList(ManagedIrbis.IrbisConnection,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{ManagedIrbis.Gbl.GblStatement})">
            <summary>
            Create <see cref="T:ManagedIrbis.Gbl.GblSettings"/>
            for given list of MFN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.ForList(ManagedIrbis.IrbisConnection,System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{ManagedIrbis.Gbl.GblStatement})">
            <summary>
            Create <see cref="T:ManagedIrbis.Gbl.GblSettings"/>
            for given list of MFN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.ForList(ManagedIrbis.IrbisConnection,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Create <see cref="T:ManagedIrbis.Gbl.GblSettings"/>
            for given list of MFN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.ForSearchExpression(ManagedIrbis.IrbisConnection,System.String,System.Collections.Generic.IEnumerable{ManagedIrbis.Gbl.GblStatement})">
            <summary>
            Create <see cref="T:ManagedIrbis.Gbl.GblSettings"/>
            for given searchExpression.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.ForSearchExpression(ManagedIrbis.IrbisConnection,System.String,System.String,System.Collections.Generic.IEnumerable{ManagedIrbis.Gbl.GblStatement})">
            <summary>
            Create <see cref="T:ManagedIrbis.Gbl.GblSettings"/>
            for given searchExpression.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.SetFileName(System.String)">
            <summary>
            Set (server) file name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.SetRange(System.Int32,System.Int32)">
            <summary>
            Set first record and number of records
            to process.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.SetSearchExpression(System.String)">
            <summary>
            Set search expression.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.ToJson">
            <summary>
            Convert settings to JSON string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore the object state from the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save the object state to the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.Verify(System.Boolean)">
            <summary>
            Verify the object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblStatement">
            <summary>
            GBL file item.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblStatement.Delimiter">
            <summary>
            Разделитель элементов
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblStatement.Command">
            <summary>
            Команда (оператор), например, ADD или DEL.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblStatement.Parameter1">
            <summary>
            Первый параметр, как правило, спецификация поля/подполя.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblStatement.Parameter2">
            <summary>
            Второй параметр, как правило, спецификация повторения.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblStatement.Format1">
            <summary>
            Первый формат, например, выражение для замены.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblStatement.Format2">
            <summary>
            Второй формат, например, заменяющее выражение.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.EncodeForProtocol">
            <summary>
            Encode for protocol.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.ParseStream(System.IO.TextReader)">
            <summary>
            Parse the stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.ShouldSerializeFormat1">
            <summary>
            Should JSON serialize <see cref="P:ManagedIrbis.Gbl.GblStatement.Format1"/>?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.ShouldSerializeFormat2">
            <summary>
            Should JSON serialize <see cref="P:ManagedIrbis.Gbl.GblStatement.Format2"/>?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.ShouldSerializeParameter1">
            <summary>
            Should JSON serialize <see cref="P:ManagedIrbis.Gbl.GblStatement.Parameter1"/>?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.ShouldSerializeParameter2">
            <summary>
            Should JSON serialize <see cref="P:ManagedIrbis.Gbl.GblStatement.Parameter2"/>?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblUtility">
            <summary>
            Utility routines for GBL file handling.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblUtility.EncodeStatements(ManagedIrbis.Gbl.GblStatement[])">
            <summary>
            Encode statements for IRBIS64 protocol.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblUtility.FromJson(System.String)">
            <summary>
            Restore <see cref="T:ManagedIrbis.Gbl.GblFile"/> from JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblUtility.FromXml(System.String)">
            <summary>
            Restore <see cref="T:ManagedIrbis.Gbl.GblFile"/> from JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblUtility.ParseLocalJsonFile(System.String)">
            <summary>
            Parses the local JSON file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblUtility.ParseLocalXmlFile(System.String)">
            <summary>
            Parses the local XML file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblUtility.SaveLocalJsonFile(ManagedIrbis.Gbl.GblFile,System.String)">
            <summary>
            Saves <see cref="T:ManagedIrbis.Gbl.GblFile"/> to local JSON file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblUtility.ToJson(ManagedIrbis.Gbl.GblFile)">
            <summary>
            Convert <see cref="T:ManagedIrbis.Gbl.GblFile"/> to JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblUtility.ToXml(ManagedIrbis.Gbl.GblFile)">
            <summary>
            Converts the <see cref="T:ManagedIrbis.Gbl.GblFile"/> to XML.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GlobalCorrector">
            <summary>
            Обёртка для облегчения выполнения глобальной корректировки
            порциями (например, по 100 записей за раз).
            </summary>
        </member>
        <member name="E:ManagedIrbis.Gbl.GlobalCorrector.PortionProcessed">
            <summary>
            Вызывается после обработки очередной порции записей
            и в конце общей обработки.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GlobalCorrector.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GlobalCorrector.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GlobalCorrector.ChunkSize">
            <summary>
            Chunk size.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GlobalCorrector.Actualize">
            <summary>
            Актуализировать ли словарь. По умолчанию <c>true</c>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GlobalCorrector.Autoin">
            <summary>
            Выполнять ли autoin.gbl.
            По умолчанию <c>false</c>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GlobalCorrector.FormalControl">
            <summary>
            Выполнять ли формально-логический контроль.
            По умолчанию <c>false</c>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GlobalCorrector.Cancel">
            <summary>
            Was cancelled?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GlobalCorrector.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GlobalCorrector.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GlobalCorrector.#ctor(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GlobalCorrector.#ctor(ManagedIrbis.IrbisConnection,System.String,System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GlobalCorrector.FromSettings(ManagedIrbis.IrbisConnection,ManagedIrbis.Gbl.GblSettings)">
            <summary>
            Create the <see cref="T:ManagedIrbis.Gbl.GlobalCorrector"/>
            from <see cref="T:ManagedIrbis.Gbl.GblSettings"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GlobalCorrector.ProcessInterval(System.Int32,System.Int32,ManagedIrbis.Gbl.GblStatement[])">
            <summary>
            Обработать интервал записей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GlobalCorrector.ProcessRecordset(System.Collections.Generic.IEnumerable{System.Int32},ManagedIrbis.Gbl.GblStatement[])">
            <summary>
            Обработать явно (вручную) заданное множество записей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GlobalCorrector.ProcessSearchResult(System.String,ManagedIrbis.Gbl.GblStatement[])">
            <summary>
            Обработать результат поиска.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GlobalCorrector.ProcessWholeDatabase(ManagedIrbis.Gbl.GblStatement[])">
            <summary>
            Обработать базу данных в целом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GlobalCorrector.ToSettings(System.Collections.Generic.IEnumerable{ManagedIrbis.Gbl.GblStatement})">
            <summary>
            Convert <see cref="T:ManagedIrbis.Gbl.GlobalCorrector"/>
            to <see cref="T:ManagedIrbis.Gbl.GblSettings"/>.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.ProtocolLine">
            <summary>
            GBL execution result for one record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.ProtocolLine.Success">
            <summary>
            Общий признак успеха.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.ProtocolLine.Database">
            <summary>
            Имя базы данных
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.ProtocolLine.Mfn">
            <summary>
            MFN записи
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.ProtocolLine.Autoin">
            <summary>
            Результат Autoin.gbl
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.ProtocolLine.Update">
            <summary>
            UPDATE=
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.ProtocolLine.Status">
            <summary>
            STATUS=
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.ProtocolLine.Error">
            <summary>
            Код ошибки, если есть
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.ProtocolLine.UpdUf">
            <summary>
            UPDUF=
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.ProtocolLine.Text">
            <summary>
            Исходный текст (до парсинга)
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.ProtocolLine.Parse(System.String)">
            <summary>
            Parse one text line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.ProtocolLine.Parse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Parse server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.ProtocolLine.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.IlfFile">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.IlfFile.MagicString">
            <summary>
            Magic string in header.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IlfFile.Entry">
            <summary>
            Entry.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entry.Position">
            <summary>
            Смещение данных от начала файла.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entry.Date">
            <summary>
            Дата создания.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entry.Deleted">
            <summary>
            Удалено?
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entry.Name">
            <summary>
            Имя.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entry.Number">
            <summary>
            Порядковый номер.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entry.Flags">
            <summary>
            Флаги.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entry.DataLength">
            <summary>
            Количество данных (вместе с описанием).
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entry.Description">
            <summary>
            Описание в произвольной форме.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entry.Data">
            <summary>
            Собственно данные.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IlfFile.Entry.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IlfFile.Entry.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IlfFile.Entry.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Unknown1">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.SlotCount">
            <summary>
            Slot count.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.EntryCount">
            <summary>
            Entry count.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.WriteCount">
            <summary>
            Write count.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.DeleteCount">
            <summary>
            Delete count.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entries">
            <summary>
            Entries.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IlfFile.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IlfFile.GetFile(System.String)">
            <summary>
            Get file by name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IlfFile.ReadLocalFile(System.String,System.Text.Encoding)">
            <summary>
            Read local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IlfFile.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the given stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IlfFile.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to the given stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IlfFile.Verify(System.Boolean)">
            <summary>
            Verify the object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ImportExport.IrbisJson">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IrbisJson.RecordToIrbisJson(ManagedIrbis.MarcRecord)">
            <summary>
            Строит представление записи в виде JSON,
            характерном для ИРБИС.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ImportExport.IsisText">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IsisText.RecordToIsisText(ManagedIrbis.MarcRecord)">
            <summary>
            Формирует текстовое представление записи,
            характерное для ISIS.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ImportExport.Iso2709">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.Iso2709.MarkerLength">
            <summary>
            Marker length.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.Iso2709.RecordDelimiter">
            <summary>
            Record delimiter.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.Iso2709.FieldDelimiter">
            <summary>
            Field delimiter.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.Iso2709.SubfieldDelimiter">
            <summary>
            Subfield delimiter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.Iso2709.ReadRecord(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Разбор 2709.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.Iso2709.WriteIso(ManagedIrbis.MarcRecord,System.IO.Stream,System.Text.Encoding)">
            <summary>
            Выводит запись в ISO-поток.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ImportExport.IsoMarker">
            <summary>
            Маркер записи.
            </summary>
            <remarks>
            <para>Маркер располагается в начале каждой записи. Является обязательным.
            Не повторяется.</para>
            <para><b>Определение.</b> Маркер записи - это область записи, содержащая 
            общую информацию, используемую при обработке записей, подготавливаемых 
            в соответствии с положениями ISO 2709.</para>
            </remarks>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.MarkerLength">
            <summary>
            Длина маркера.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.len0">
            <summary>
            Длина записи.
            </summary>
            <remarks><b>Определение</b>. Пять десятичных цифр, при необходимости
            выравниваемых вправо начальными нулями, указывают количество символов
            в записи, включая маркер записи, справочник и поля переменной длины.
            Определяется автоматически, когда запись окончательно сформирована
            для обмена.</remarks>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.len1">
            <summary>
            Продолжение.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.len2">
            <summary>
            Продолжение.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.len3">
            <summary>
            Продолжение.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.len4">
            <summary>
            Продолжение.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.RecordStatus">
            <summary>
            Статус записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.RecordType">
            <summary>
            Тип записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.BibliographicalIndex">
            <summary>
            Библиографический указатель.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.unused0">
            <summary>
            Не используется.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.unused1">
            <summary>
            Не используется.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.IndicatorLength">
            <summary>
            Длина индикатора.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.IdentifierLength">
            <summary>
            Длина идентификатора.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.base0">
            <summary>
            Базовый адрес.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.base1">
            <summary>
            Продолжение.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.base2">
            <summary>
            Продолжение.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.base3">
            <summary>
            Продолжение.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.base4">
            <summary>
            Продолжение.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.BibliographicalLevel">
            <summary>
            Уровень описания.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.CataloguisationRules">
            <summary>
            Правила каталогизации.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.RelatedRecord">
            <summary>
            Наличие связанной записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.LengthOfLength">
            <summary>
            "Длина длины".
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.OffsetLength">
            <summary>
            "Длина смещения".
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.zero0">
            <summary>
            Всегда 0.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.zero1">
            <summary>
            Всегда 0.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ImportExport.IsoReader">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IsoReader.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IsoReader.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IsoReader.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />
            object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IsoReader.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" />
            that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IsoReader.Dispose">
            <summary>
            Performs application-defined tasks associated with
            freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ImportExport.IsoRecordHeader">
            <summary>
            Summary description for MarcRecordHeader.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ImportExport.IsoRecordHeader.RecordStatus">
            <summary>
            Статус записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ImportExport.IsoRecordHeader.RecordType">
            <summary>
            Тип записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ImportExport.IsoRecordHeader.BibliographicalIndex">
            <summary>
            Библиографический указатель.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ImportExport.IsoRecordHeader.BibliographicalLevel">
            <summary>
            Уровень описания.
            </summary>
            <value></value>
        </member>
        <member name="P:ManagedIrbis.ImportExport.IsoRecordHeader.CatalogingRules">
            <summary>
            Правила каталогизации.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ImportExport.IsoRecordHeader.RelatedRecord">
            <summary>
            Наличие связанной записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IsoRecordHeader.Parse(System.String)">
            <summary>
            Parse text representation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IsoRecordHeader.Parse(System.Byte[])">
            <summary>
            Parse binary representation.
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IsoRecordHeader.GetDefault">
            <summary>
            Заголовок по умолчанию.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ImportExport.PlainText">
            <summary>
            Плоское текстовое представление записи,
            используемое, например, при импорте-экспорте
            в текстовом формате в АРМ Каталогизатор
            и Администратор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.PlainText.ReadRecord(System.IO.TextReader)">
            <summary>
            Чтение одно записи из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.PlainText.ReadOneRecord(System.String,System.Text.Encoding)">
            <summary>
            Read one record from local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.PlainText.ToPlainText(ManagedIrbis.MarcRecord)">
            <summary>
            Формирует плоское текстовое представление записи.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ImportExport.ProtocolText">
            <summary>
            Текстовое представление записи, используемое в протоколе
            ИРБИС64-сервер.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.EncodeSubField(System.Text.StringBuilder,ManagedIrbis.SubField)">
            <summary>
            Encode subfield.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.EncodeField(System.Text.StringBuilder,ManagedIrbis.RecordField)">
            <summary>
            Encode field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.EncodeRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Кодирование записи в клиентское представление.
            </summary>
            <param name="record">Запись для кодирования.</param>
            <returns>
            Закодированная запись.
            </returns>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.ParseMfnStatusVersion(System.String,System.String,ManagedIrbis.MarcRecord)">
            <summary>
            Parse MFN, status and version of the record
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.ParseResponseForReadRecord(ManagedIrbis.Infrastructure.ServerResponse,ManagedIrbis.MarcRecord)">
            <summary>
            Parse server response for ReadRecordCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.ParseResponseForWriteRecord(ManagedIrbis.Infrastructure.ServerResponse,ManagedIrbis.MarcRecord)">
            <summary>
            Parse server response for WriteRecordCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.ParseResponseForWriteRecords(ManagedIrbis.Infrastructure.ServerResponse,ManagedIrbis.MarcRecord)">
            <summary>
            Parse server response for WriteRecordsCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.ParseResponseForAllFormat(ManagedIrbis.Infrastructure.ServerResponse,ManagedIrbis.MarcRecord)">
            <summary>
            Parse server response for ALL-formatted record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.ParseResponseForAllFormat(System.String,ManagedIrbis.MarcRecord)">
            <summary>
            Parse server response for ALL-formatted record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.ParseResponseForGblFormat(System.String,ManagedIrbis.MarcRecord)">
            <summary>
            Parse response for global correction
            of virtual record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.ToProtocolText(ManagedIrbis.MarcRecord)">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.AbstractEngine">
            <summary>
            Abstract execution engine.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Infrastructure.AbstractEngine.AfterExecution">
            <summary>
            Raised after execution.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Infrastructure.AbstractEngine.BeforeExecution">
            <summary>
            Raised before execution.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Infrastructure.AbstractEngine.ExceptionOccurs">
            <summary>
            Raised on exception.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.AbstractEngine.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.AbstractEngine.NestedEngine">
            <summary>
            Nested engine.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractEngine.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.AbstractEngine)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractEngine.CheckConnection(ManagedIrbis.Infrastructure.ExecutionContext)">
            <summary>
            Check whether connection established.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractEngine.OnAfterExecute(ManagedIrbis.Infrastructure.ExecutionContext)">
            <summary>
            After command execution.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractEngine.OnBeforeExecute(ManagedIrbis.Infrastructure.ExecutionContext)">
            <summary>
            Before command execution.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractEngine.OnException(ManagedIrbis.Infrastructure.ExecutionContext)">
            <summary>
            Exception occurs.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractEngine.StandardExecution(ManagedIrbis.Infrastructure.ExecutionContext)">
            <summary>
            Standard command execution.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractEngine.ExecuteCommand(ManagedIrbis.Infrastructure.ExecutionContext)">
            <summary>
            Execute specified command.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.ClientQuery">
            <summary>
            Client network packet with query to the server.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.ClientQuery.Delimiter">
            <summary>
            Line delimiter in packet header.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ClientQuery.CommandCode">
            <summary>
            Command code.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ClientQuery.Workstation">
            <summary>
            Код АРМ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ClientQuery.ClientID">
            <summary>
            Client identifier.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ClientQuery.CommandNumber">
            <summary>
            Sequential command number.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ClientQuery.UserLogin">
            <summary>
            User login.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ClientQuery.UserPassword">
            <summary>
            User password.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ClientQuery.Arguments">
            <summary>
            Command arguments.
            </summary>
            <remarks>List can be empty.</remarks>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientQuery.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.ClientQuery._arguments">
            <summary>
            Command arguments.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientQuery.Add(System.Object)">
            <summary>
            Add arbitrary argument.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientQuery.AddAnsi(System.String)">
            <summary>
            Add ANSI text line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientQuery.AddUtf8(System.String)">
            <summary>
            Add UTF8 text line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientQuery.Clear">
            <summary>
            Clear argument list.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientQuery.Dump(System.IO.TextWriter)">
            <summary>
            Dump the query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientQuery.EncodePacket">
            <summary>
            Build the packet.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientQuery.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientQuery.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.CommandCode">
            <summary>
            Command codes for protocol.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ExclusiveDatabaseLock">
            <summary>
            Получение признака монопольной блокировки базы данных.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.RecordList">
            <summary>
            Получение списка удаленных, неактуализированных
            и заблокированных записей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ServerInfo">
            <summary>
            Получение версии сервера.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.DatabaseStat">
            <summary>
            Получение статистики по базе данных.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.FormatIsoGroup">
            <summary>
            IRBIS_FORMAT_ISO_GROUP.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UnknownCommand4">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.GlobalCorrection">
            <summary>
            Глобальная корректировка.
            </summary>
            <remarks>IRBIS_GBL</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.SaveRecordGroup">
            <summary>
            Сохранение группы записей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.Print">
            <summary>
            Печать.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UpdateIniFile">
            <summary>
            Запись параметров в ini-файл, расположенный на сервере.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ImportIso">
            <summary>
            IRBIS_IMPORT_ISO.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.RegisterClient">
            <summary>
            Регистрация клиента на сервере.
            </summary>
            <remarks>IRBIS_REG</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UnregisterClient">
            <summary>
            Разрегистрация клиента.
            </summary>
            <remarks>IRBIS_UNREG</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ReadRecord">
            <summary>
            Чтение записи, ее расформатирование.
            </summary>
            <remarks>IRBIS_READ</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UpdateRecord">
            <summary>
            Сохранение записи.
            </summary>
            <remarks>IRBIS_UPDATE</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UnlockRecord">
            <summary>
            Разблокировка записи.
            </summary>
            <remarks>IRBIS_RUNLOCK</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ActualizeRecord">
            <summary>
            Актуализация записи.
            </summary>
            <remarks>IRBIS_RECIFUPDATE</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.FormatRecord">
            <summary>
            Форматирование записи или группы записей.
            </summary>
            <remarks>IRBIS_SVR_FORMAT</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ReadTerms">
            <summary>
            Получение терминов и ссылок словаря, форматирование записей
            </summary>
            <remarks>IRBIS_TRM_READ</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ReadPostings">
            <summary>
            Получение ссылок для термина (списка терминов).
            </summary>
            <remarks>IRBIS_POSTING</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.CorrectVirtualRecord">
            <summary>
            Глобальная корректировка виртуальной записи.
            </summary>
            <remarks>IRBIS_GBL_RECORD</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.Search">
            <summary>
            Поиск записей с опциональным форматированием
            (также последовательный поиск).
            </summary>
            <remarks>IRBIS_SEARCH</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ReadDocument">
            <summary>
            Получение/сохранение текстового файла, расположенного
            на сервере (группы текстовых файлов).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.Backup">
            <summary>
            IRBIS_BACKUP.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.Nop">
            <summary>
            Пустая операция. Периодическое подтверждение
            соединения с сервером.
            </summary>
            <remarks>IRBIS_NOOP</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.GetMaxMfn">
            <summary>
            Получение максимального MFN для базы данных.
            </summary>
            <remarks>IRBIS_MAXMFN</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ReadTermsReverse">
            <summary>
            Получение терминов и ссылок словаря в обратном порядке.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UnlockRecords">
            <summary>
            Разблокирование записей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.FullTextSearch">
            <summary>
            Полнотекстовый поиск.
            </summary>
            <remarks>IRBIS_FULLTEXT_SEARCH</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.EmptyDatabase">
            <summary>
            Опустошение базы данных.
            </summary>
            <remarks>IRBIS_DB_EMPTY</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.CreateDatabase">
            <summary>
            Создание базы данных.
            </summary>
            <remarks>IRBIS_DB_NEW</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UnlockDatabase">
            <summary>
            Разблокирование базы данных.
            </summary>
            <remarks>IRBIS_DB_UNLOCK</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.GetRecordPostings">
            <summary>
            Чтение ссылок для заданного MFN.
            </summary>
            <remarks>IRBIS_MFN_POSTINGS</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.DeleteDatabase">
            <summary>
            Удаление базы данных.
            </summary>
            <remarks>IRBIS_DB_DELETE</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ReloadMasterFile">
            <summary>
            Реорганизация мастер-файла.
            </summary>
            <remarks>IRBIS_RELOAD_MASTER</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ReloadDictionary">
            <summary>
            Реорганизация словаря.
            </summary>
            <remarks>IRBIS_RELOAD_DICT</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.CreateDictionary">
            <summary>
            Создание поискового словаря заново.
            </summary>
            <remarks>IRBIS_CREATE_DICT</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.GetServerStat">
            <summary>
            Получение статистики работы сервера.
            </summary>
            <remarks>IRBIS_STAT</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UnknownCommandPlus2">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.GetProcessList">
            <summary>
            Получение списка запущенных процессов.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UnknownCommandPlus4">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UnknownCommandPlus5">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UnknownCommandPlus6">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.SetUserList">
            <summary>
            Сохранение списка пользователей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.RestartServer">
            <summary>
            Перезапуск сервера.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.GetUserList">
            <summary>
            Получение списка пользователей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ListFiles">
            <summary>
            Получение списка файлов на сервере.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.CommandFactory">
            <summary>
            Command factory.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.CommandFactory.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetActualizeRecordCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.ActualizeRecordCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetConnectCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.ConnectCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetCreateDatabaseCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetCreateDictionaryCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.CreateDictionaryCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetDatabaseInfoCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.DatabaseInfoCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetDatabaseStatCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.DatabaseStatCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetDefaultFactory(ManagedIrbis.IrbisConnection)">
            <summary>
            Get default <see cref="T:ManagedIrbis.Infrastructure.CommandFactory"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetDeleteDatabaseCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.DeleteDatabaseCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetDisconnectCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.DisconnectCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetFormatCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.FormatCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetGblCommand(ManagedIrbis.Gbl.GblSettings)">
            <summary>
            Get GblCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetGblVirtualCommand">
            <summary>
            Get GblVirtualCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetListFilesCommand">
            <summary>
            Get ListFilesCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetListProcessCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.ListProcessesCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetListUsersCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.ListUsersCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetMaxMfnCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.MaxMfnCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetNopCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.NopCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetPrintTableCommand">
            <summary>
            Get PrintTableCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetReadBinaryFileCommand">
            <summary>
            Get ReadBinaryFileCommand();
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetReadFileCommand">
            <summary>
            Get ReadFileCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetReadPostingsCommand">
            <summary>
            Get ReadPostingsCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetReadRawRecordCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetReadRecordCommand">
            <summary>
            Get ReadRecordCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetReadTermsCommand">
            <summary>
            Get ReadTermsCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetReloadDictionaryCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.ReloadDictionaryCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetReloadMasterFileCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.ReloadMasterFileCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetRestartServerCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.RestartServerCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetSearchCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.SearchCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetSearchRawCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.SearchRawCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetSearchReadCommand">
            <summary>
            Get SearchReadCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetServerStatCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.ServerStatCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetServerVersionCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.ServerVersionCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetTruncateDatabaseCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.TruncateDatabaseCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetUniversalCommand(System.String,System.Object[])">
            <summary>
            Get UniversalCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetUniversalTextCommand(System.String,System.String[],System.Text.Encoding)">
            <summary>
            Get UniversalTextCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetUnlockDatabaseCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.UnlockDatabaseCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetUnlockRecordsCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.UnlockRecordsCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetUpdateIniFileCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.UpdateIniFileCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetUpdateUserListCommand">
            <summary>
            Get UpdateUserListCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetWriteFileCommand">
            <summary>
            Get WriteFileCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetWriteRecordCommand">
            <summary>
            Get WriteRecordCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetWriteRecordsCommand">
            <summary>
            Get WriteRecordsCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.SetSuperFactory(System.Func{ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.CommandFactory})">
            <summary>
            Set Super Factory.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.AbstractCommand">
            <summary>
            Abstract command of IRBIS protocol.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.AbstractCommand.GoodReturnCodes">
            <summary>
            Good return codes.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.AbstractCommand.RelaxResponse">
            <summary>
            Relax (may be malformed) server response.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.AbstractCommand.RequireConnection">
            <summary>
            Does the command require established connection?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Check the server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.ParseClientQuery(System.Byte[])">
            <summary>
            Parse client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ActualizeRecordCommand">
            <summary>
            Actualize given record or whole database on the server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ActualizeRecordCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ActualizeRecordCommand.Mfn">
            <summary>
            MFN of record to actualize.
            </summary>
            <remarks>MFN = 0 means 'actualize whole database'.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ActualizeRecordCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ActualizeRecordCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ActualizeRecordCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ConnectCommand">
            <summary>
            Connect to the IRBIS64 server.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.Commands.ConnectCommand.ResponseSpecification">
            <summary>
            Response specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ConnectCommand.Configuration">
            <summary>
            Server configuration file content
            (on successful connection).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ConnectCommand.Password">
            <summary>
            User password. If not specified,
            connection password used.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ConnectCommand.Username">
            <summary>
            User name. If not specified,
            connection name used.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ConnectCommand.RequireConnection">
            <summary>
            Doesn't require connection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ConnectCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ConnectCommand.CreateQuery">
            <summary>
            Create the query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ConnectCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ConnectCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand">
            <summary>
            Create new database on the server.
            </summary>
            <remarks>For Administrator only.</remarks>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand.Database">
            <summary>
            Name for new database.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand.Description">
            <summary>
            Description of the database.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand.ReaderAccess">
            <summary>
            Will the database be visible to reader?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand.Template">
            <summary>
            Template database name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.CreateDictionaryCommand">
            <summary>
            Create database index on the server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.CreateDictionaryCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.CreateDictionaryCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.CreateDictionaryCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.CreateDictionaryCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.DatabaseInfoCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DatabaseInfoCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DatabaseInfoCommand.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DatabaseInfoCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DatabaseInfoCommand.CreateQuery">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DatabaseInfoCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DatabaseInfoCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.DatabaseStatCommand">
            <summary>
            Database stat.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DatabaseStatCommand.Definition">
            <summary>
            Client query definition.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DatabaseStatCommand.Result">
            <summary>
            Result of the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DatabaseStatCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DatabaseStatCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Check the server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DatabaseStatCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DatabaseStatCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.DeleteDatabaseCommand">
            <summary>
            Delete database on the server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DeleteDatabaseCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DeleteDatabaseCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DeleteDatabaseCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DeleteDatabaseCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.DisconnectCommand">
            <summary>
            Disconnect from the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DisconnectCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DisconnectCommand.CreateQuery">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DisconnectCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DisconnectCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.DynamicCommand">
            <summary>
            Dynamic command. All actions configured
            during runtime.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DynamicCommand.GoodReturnCodesHandler">
            <summary>
            Handle return codes.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DynamicCommand.CreateQueryHandler">
            <summary>
            Create query.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DynamicCommand.CheckResponseHandler">
            <summary>
            Check server response.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DynamicCommand.ExecuteHandler">
            <summary>
            Execute command.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DynamicCommand.VerifyHandler">
            <summary>
            Verify command settings.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.BaseGoodReturnCodes">
            <summary>
            Basic implementation of <see cref="P:ManagedIrbis.Infrastructure.Commands.DynamicCommand.GoodReturnCodes"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.BaseCreateQuery">
            <summary>
            Basic implementation of <see cref="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.CreateQuery"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.BaseCheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Basic implementation of <see cref="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.BaseExecute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Basic implementation of <see cref="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.BaseVerify(System.Boolean)">
            <summary>
            Basic implementation of <see cref="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.Verify(System.Boolean)"/>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DynamicCommand.GoodReturnCodes">
            <summary>
            Good return codes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Check the server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.Verify(System.Boolean)">
            <summary>
            Verify the object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.FormatCommand">
            <summary>
            Format records on IRBIS-server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.FormatCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.FormatCommand.FormatSpecification">
            <summary>
            Format specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.FormatCommand.MfnList">
            <summary>
            List of MFNs to format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.FormatCommand.VirtualRecord">
            <summary>
            Virtual record to format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.FormatCommand.UtfFormat">
            <summary>
            Use UTF-8 for <see cref="P:ManagedIrbis.Infrastructure.Commands.FormatCommand.FormatSpecification"/>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.FormatCommand.FormatResult">
            <summary>
            Result of the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.FormatCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.FormatCommand.GetFormatResult(ManagedIrbis.Infrastructure.ServerResponse,System.Int32)">
            <summary>
            Get format result from server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.FormatCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.FormatCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.FormatCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.GblCommand">
            <summary>
            Global correction.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.FileName">
            <summary>
            Server file name for GBL.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.Actualize">
            <summary>
            Update index?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.FormalControl">
            <summary>
            Apply formal check?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.AutoIn">
            <summary>
            Execute autoin.gbl?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.SearchExpression">
            <summary>
            Search expression.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.MinMfn">
            <summary>
            Minimal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.MaxMfn">
            <summary>
            Maximal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.FirstRecord">
            <summary>
            First record number.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.NumberOfRecords">
            <summary>
            Number of records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.MfnList">
            <summary>
            List of MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.Statements">
            <summary>
            Statements.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.GblCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.GblCommand.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.Gbl.GblSettings)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.GblCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.GblCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.GblCommand.Verify(System.Boolean)">
            <summary>
            Verify the object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand">
            <summary>
            Global correction for virtual record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand.FileName">
            <summary>
            Server file name for GBL.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand.Actualize">
            <summary>
            Update index?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand.Statements">
            <summary>
            Statements.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand.Record">
            <summary>
            Record for correction.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ListFilesCommand">
            <summary>
            List server files.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ListFilesCommand.Specifications">
            <summary>
            File specification (can contain wildcards).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ListFilesCommand.Files">
            <summary>
            List of found files.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListFilesCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListFilesCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Check the server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListFilesCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListFilesCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListFilesCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ListProcessesCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ListProcessesCommand.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListProcessesCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListProcessesCommand.CreateQuery">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListProcessesCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ListUsersCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ListUsersCommand.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListUsersCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListUsersCommand.CreateQuery">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListUsersCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.MaxMfnCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.MaxMfnCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.MaxMfnCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.MaxMfnCommand.CreateQuery">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.MaxMfnCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.NopCommand">
            <summary>
            Unlock the database on the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.NopCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.NopCommand.CreateQuery">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.NopCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.PrintTableCommand">
            <summary>
            Build table on the server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.PrintTableCommand.Definition">
            <summary>
            Table definition.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.PrintTableCommand.Result">
            <summary>
            Result of the command execution.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.PrintTableCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.PrintTableCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Check the server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.PrintTableCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.PrintTableCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ReadBinaryFileCommand">
            <summary>
            Read binary file from the server.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.Commands.ReadBinaryFileCommand.Preamble">
            <summary>
            Preamble for binary data.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadBinaryFileCommand.File">
            <summary>
            File to read.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadBinaryFileCommand.Content">
            <summary>
            File content.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadBinaryFileCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadBinaryFileCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Check the server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadBinaryFileCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadBinaryFileCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadBinaryFileCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ReadFileCommand">
            <summary>
            Read text file(s) from the server
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadFileCommand.Files">
            <summary>
            File list.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadFileCommand.Result">
            <summary>
            Retrieved text files.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadFileCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadFileCommand.GetFileText(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Get file text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadFileCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Check the server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadFileCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadFileCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadFileCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand">
            <summary>
            Read postings for given term.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.FirstPosting">
            <summary>
            First posting to return.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.NumberOfPostings">
            <summary>
            Number of postings to return.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.Term">
            <summary>
            Term.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.ListOfTerms">
            <summary>
            List of terms.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.Postings">
            <summary>
            Postings.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.ApplyParameters(ManagedIrbis.Search.PostingParameters)">
            <summary>
            Apply <see cref="T:ManagedIrbis.Search.PostingParameters"/>
            to the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.GatherParameters">
            <summary>
            Gather <see cref="T:ManagedIrbis.Search.PostingParameters"/>
            from the command.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.GoodReturnCodes">
            <summary>
            Good return codes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand">
            <summary>
            Read one record from the server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.Lock">
            <summary>
            Need lock?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.Mfn">
            <summary>
            MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.VersionNumber">
            <summary>
            Version.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.RawRecord">
            <summary>
            Readed record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.GoodReturnCodes">
            <summary>
            Good return codes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand">
            <summary>
            Read one record from the server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.Lock">
            <summary>
            Need lock?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.Mfn">
            <summary>
            MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.VersionNumber">
            <summary>
            Version.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.Record">
            <summary>
            Readed record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.GoodReturnCodes">
            <summary>
            Good return codes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand">
            <summary>
            Read terms from the search index.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.NumberOfTerms">
            <summary>
            Number of terms to return.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.ReverseOrder">
            <summary>
            Reverse order?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.StartTerm">
            <summary>
            Start term.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.Terms">
            <summary>
            Terms.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.ApplyParameters(ManagedIrbis.Search.TermParameters)">
            <summary>
            Apply the <see cref="T:ManagedIrbis.Search.TermParameters"/>
            to the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.GatherParameters">
            <summary>
            Create <see cref="T:ManagedIrbis.Search.TermParameters"/>
            from the command.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.GoodReturnCodes">
            <summary>
            Good return codes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ReloadDictionaryCommand">
            <summary>
            Reload database dictionary.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReloadDictionaryCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReloadDictionaryCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReloadDictionaryCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReloadDictionaryCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ReloadMasterFileCommand">
            <summary>
            Reload database master file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReloadMasterFileCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReloadMasterFileCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReloadMasterFileCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReloadMasterFileCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.RestartServerCommand">
            <summary>
            Reload database dictionary.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.RestartServerCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.RestartServerCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.RestartServerCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.SearchCommand">
            <summary>
            Search records on IRBIS-server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.FirstRecord">
            <summary>
            First record offset.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.FormatSpecification">
            <summary>
            Format specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.MaxMfn">
            <summary>
            Maximal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.MinMfn">
            <summary>
            Minimal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.NumberOfRecords">
            <summary>
            Number of records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.SearchExpression">
            <summary>
            Search query expression.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.SequentialSpecification">
            <summary>
            Specification of sequential search.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.UtfFormat">
            <summary>
            Use UTF8 for <see cref="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.FormatSpecification"/>?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.Found">
            <summary>
            Found records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.FoundCount">
            <summary>
            Count of found records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchCommand.ApplyParameters(ManagedIrbis.Search.SearchParameters)">
            <summary>
            Apply <see cref="T:ManagedIrbis.Search.SearchParameters"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchCommand.Clone">
            <summary>
            Clone the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchCommand.GatherParameters">
            <summary>
            Gather <see cref="T:ManagedIrbis.Search.SearchParameters"/>
            from the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.SearchRawCommand">
            <summary>
            Search records on IRBIS-server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.FirstRecord">
            <summary>
            First record offset.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.FormatSpecification">
            <summary>
            Format specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.MaxMfn">
            <summary>
            Maximal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.MinMfn">
            <summary>
            Minimal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.NumberOfRecords">
            <summary>
            Number of records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.SearchExpression">
            <summary>
            Search query expression.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.SequentialSpecification">
            <summary>
            Specification of sequential search.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.UtfFormat">
            <summary>
            Use UTF8 encoding for
            <see cref="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.FormatSpecification"/>?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.Found">
            <summary>
            Found records
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.ApplyParameters(ManagedIrbis.Search.SearchParameters)">
            <summary>
            Apply <see cref="T:ManagedIrbis.Search.SearchParameters"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.Clone">
            <summary>
            Clone the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.GatherParameters">
            <summary>
            Gather <see cref="T:ManagedIrbis.Search.SearchParameters"/>
            from the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.SearchReadCommand">
            <summary>
            Search and read records from IRBIS-server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchReadCommand.FormatSpecification">
            <summary>
            Format specification (always ALL).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchReadCommand.Records">
            <summary>
            Read records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchReadCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchReadCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ServerStatCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ServerStatCommand.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ServerStatCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ServerStatCommand.CreateQuery">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ServerStatCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ServerVersionCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ServerVersionCommand.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ServerVersionCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ServerVersionCommand.CreateQuery">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ServerVersionCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.TruncateDatabaseCommand">
            <summary>
            Truncate the database on the server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.TruncateDatabaseCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.TruncateDatabaseCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.TruncateDatabaseCommand.CreateQuery">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.TruncateDatabaseCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.TruncateDatabaseCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.UniversalCommand">
            <summary>
            Command with unfixed functionality.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UniversalCommand.AcceptAnyResponse">
            <summary>
            Accept any server response.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UniversalCommand.Arguments">
            <summary>
            Arguments.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UniversalCommand.CommandCode">
            <summary>
            Command code
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UniversalCommand.#ctor(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UniversalCommand.#ctor(ManagedIrbis.IrbisConnection,System.String,System.Object[])">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UniversalCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Check the server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UniversalCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.UniversalTextCommand">
            <summary>
            Universal command with text lines.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UniversalTextCommand.CommandCode">
            <summary>
            Command code.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UniversalTextCommand.TextLines">
            <summary>
            Lines.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UniversalTextCommand.#ctor(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UniversalTextCommand.#ctor(ManagedIrbis.IrbisConnection,System.String,System.String[],System.Text.Encoding)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UniversalTextCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UniversalTextCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.UnlockDatabaseCommand">
            <summary>
            Unlock the database on the server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UnlockDatabaseCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UnlockDatabaseCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UnlockDatabaseCommand.CreateQuery">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UnlockDatabaseCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UnlockDatabaseCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.UnlockRecordsCommand">
            <summary>
            Truncate the database on the server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UnlockRecordsCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UnlockRecordsCommand.Records">
            <summary>
            Record list.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UnlockRecordsCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UnlockRecordsCommand.CreateQuery">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UnlockRecordsCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UnlockRecordsCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.UpdateIniFileCommand">
            <summary>
            Unlock the database on the server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UpdateIniFileCommand.Lines">
            <summary>
            Text to update.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UpdateIniFileCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UpdateIniFileCommand.CreateQuery">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UpdateIniFileCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.UpdateUserListCommand">
            <summary>
            Update user list on the server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UpdateUserListCommand.UserList">
            <summary>
            User list to update.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UpdateUserListCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UpdateUserListCommand.CreateQuery">
            <summary>
            Create the client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UpdateUserListCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UpdateUserListCommand.Verify(System.Boolean)">
            <summary>
            Verify the object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.WriteFileCommand">
            <summary>
            Write text file(s) to the server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.WriteFileCommand.Files">
            <summary>
            File list.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteFileCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteFileCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteFileCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteFileCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand">
            <summary>
            Create of update existing record in the database.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand.Actualize">
            <summary>
            Need actualize?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand.Lock">
            <summary>
            Need lock?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand.MaxMfn">
            <summary>
            New max MFN (result of command execution).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand.Record">
            <summary>
            Record to write.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.WriteRecordsCommand">
            <summary>
            Create or update many records simultaneously.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.WriteRecordsCommand.Actualize">
            <summary>
            Need actualize?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.WriteRecordsCommand.Lock">
            <summary>
            Need lock?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.WriteRecordsCommand.References">
            <summary>
            Records to write.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteRecordsCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteRecordsCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteRecordsCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteRecordsCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.ConnectionFactory">
            <summary>
            Connection factory.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ConnectionFactory.Default">
            <summary>
            Default factory.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ConnectionFactory.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ConnectionFactory.GetConnection">
            <summary>
            Get <see cref="T:ManagedIrbis.IrbisConnection"/>
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ConnectionFactory.SetDefaultFactory(ManagedIrbis.Infrastructure.ConnectionFactory)">
            <summary>
            Set default factory.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.ExecutionContext">
            <summary>
            Command execution context.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ExecutionContext.Command">
            <summary>
            Command to execute.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ExecutionContext.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ExecutionContext.Exception">
            <summary>
            Exception.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ExecutionContext.ExceptionHandled">
            <summary>
            Exception handled?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ExecutionContext.Response">
            <summary>
            Server response.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ExecutionContext.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ExecutionContext.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ExecutionContext.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.Commands.AbstractCommand)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ExecutionContext.Verify(System.Boolean)">
            <summary>
            Verify the object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.ExecutionEventArgs">
            <summary>
            Event arguments.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ExecutionEventArgs.Context">
            <summary>
            Context.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ExecutionEventArgs.#ctor(ManagedIrbis.Infrastructure.ExecutionContext)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.FileSpecification">
            <summary>
            Irbis file name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.FileSpecification.BinaryFile">
            <summary>
            Is the file binary or text?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.FileSpecification.Path">
            <summary>
            Path.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.FileSpecification.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.FileSpecification.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.FileSpecification.Contents">
            <summary>
            File contents (when we want write the file).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.#ctor(ManagedIrbis.IrbisPath,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.#ctor(ManagedIrbis.IrbisPath,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object stat from the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.Equals(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Compare with other <see cref="T:ManagedIrbis.Infrastructure.FileSpecification"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.Equals(System.Object)">
            <summary>
            Determines whether the specified
            <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The object to compare with
            the current object.</param>
            <returns><c>true</c> if the specified
            <see cref="T:System.Object" /> is equal to this instance;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance,
            suitable for use in hashing algorithms
            and data structures like a hash table.</returns>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.IrbisNetworkException">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkException.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:ManagedIrbis.Infrastructure.IrbisNetworkException"/> class.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ManagedIrbis.Infrastructure.IrbisNetworkException" />
            class with a specified error message.
            </summary>
            <param name="message">
            A message that describes the error.</param>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ManagedIrbis.Infrastructure.IrbisNetworkException" /> class
            with a specified error message and a reference
            to the inner exception that is the cause
            of this exception.
            </summary>
            <param name="message">The error message
            that explains the reason for the exception.</param>
            <param name="innerException">The exception
            that is the cause of the current exception.
            If the <paramref name="innerException" /> parameter
            is not a null reference, the current exception
            is raised in a catch block that handles
            the inner exception.</param>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.IrbisNetworkUtility">
            <summary>
            Вспомогательные методы для формирования сетевых
            пакетов и их парсинга.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.DumpBytes(System.Byte[],System.IO.TextWriter)">
            <summary>
            Dump bytes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.DumpBytes(System.Byte[])">
            <summary>
            Dump bytes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeAny(System.IO.Stream,System.Object)">
            <summary>
            Записываем любой объект (диспетчеризация).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeBoolean(System.IO.Stream,System.Boolean)">
            <summary>
            Записываем булево значение в виде 0/1.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeBytes(System.IO.Stream,System.Byte[])">
            <summary>
            Записываем буфер.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeDelimiter(System.IO.Stream)">
            <summary>
            Encode line delimiter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeFileSpecification(System.IO.Stream,ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Encode <see cref="T:ManagedIrbis.Infrastructure.FileSpecification"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeInt32(System.IO.Stream,System.Int32)">
            <summary>
            Записываем целое.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeInt64(System.IO.Stream,System.Int64)">
            <summary>
            Записываем целое.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeObject(System.IO.Stream,System.Object)">
            <summary>
            Записываем произвольные объект.
            ToString + кодировка ANSI.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeRecord(System.IO.Stream,ManagedIrbis.MarcRecord)">
            <summary>
            Запись в кодировке UTF.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeRecordReference(System.IO.Stream,ManagedIrbis.RecordReference)">
            <summary>
            <see cref="T:ManagedIrbis.MarcRecord"/> with database prefix.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeString(System.IO.Stream,System.String)">
            <summary>
            Записываем строку в кодировке ANSI.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeTextWithEncoding(System.IO.Stream,AM.Text.TextWithEncoding)">
            <summary>
            Записываем строку в произвольной кодировке.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeWorkstation(System.IO.Stream,ManagedIrbis.IrbisWorkstation)">
            <summary>
            Записываем код АРМ.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.IrbisReturnCode">
            <summary>
            Коды возвратов из Irbis64.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.NoError">
            <summary>
            Успешное завершение, нет ошибки.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.Zero">
            <summary>
            Успешное завершение, нет ошибки.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.UserError">
            <summary>
            Прервано пользователем или общая ошибка.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.Busy">
            <summary>
            Не завершена обработка предыдущего запроса.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.Unknown">
            <summary>
            Неизвестная ошибка.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.BadBufferSize">
            <summary>
            Выходной буфер мал.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.WrongMfn">
            <summary>
            Заданный MFN вне пределов БД.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.TermNotExist">
            <summary>
            Нет запрошенного значения в поисковом индексе.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.LastTermInList">
            <summary>
            Была считана последняя запись в поисковом индексе.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.FirstTermInList">
            <summary>
            Возвращена первая подходящая запись в поисковом
            индексе вместо запрошенного значения.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.DatabaseLocked">
            <summary>
            Монопольная блокировка БД.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.RecordLocked">
            <summary>
            Запись заблокирована на ввод.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.RecordDeleted">
            <summary>
            Запись логически удалена.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.PhysicallyDeleted">
            <summary>
            Запись физически удалена.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.VersionError">
            <summary>
            При записи обнаружено несоответствие версий.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.ClientFormatError">
            <summary>
            Ошибка в клиентском файле формата.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.ServerExecutionError">
            <summary>
            Ошибка выполнения на сервере.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.AnswerLengthError">
            <summary>
            Несоответствие полученной и реальной длины.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.WrongProtocol">
            <summary>
            Неверный протокол.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.ClientNotInList">
            <summary>
            Незарегистрированный клиент.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.ClientNotInUse">
            <summary>
            Клиент не выполнил регистрацию.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.WrongClientIdentifier">
            <summary>
            Неправльный идентификатор клиента.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.ClientListOverload">
            <summary>
            Зарегистрировано максимально допустимое 
            количество клиентов.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.ClientAlreadyExist">
            <summary>
            Клиент уже зарегистрирован.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.ClientNotAllowed">
            <summary>
            Нет доступа к командам АРМ.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.WrongPassword">
            <summary>
            Неверный пароль.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.FileNotExist">
            <summary>
            Файл не существует.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.ServerOverload">
            <summary>
            Сервер перегружен: достигнуто максимальное число
            потоков обработки.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.ProcessError">
            <summary>
            Не удалось запустить или прервать поток или процесс.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.GlobalError">
            <summary>
            Обрушение при выполнении глобальной корректировки.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.NetworkDebugger">
            <summary>
            Debugger for network protocol.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.NetworkDebugger.Active">
            <summary>
            Active?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.NetworkDebugger.Break(System.Byte[],System.Byte[])">
            <summary>
            Break point.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.NetworkDebugger.DumpResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Dump server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.NetworkDebugger.Log(System.String)">
            <summary>
            Write line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.NetworkDebugger.Log(System.String[])">
            <summary>
            Write line.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.PacketInterpreter">
            <summary>
            Network packet interpreter.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.PacketInterpreter.Stream">
            <summary>
            Stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.#ctor(System.Byte[])">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.GetAnsiString">
            <summary>
            Get ANSI string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.GetObject(System.Char)">
            <summary>
            GetObject by code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.GetUtfString">
            <summary>
            Get Utf string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.GetInt32">
            <summary>
            Get 32-bit integer value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.Interpret(System.Byte[],System.String)">
            <summary>
            Interpret the packet.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.RemainingAnsiStrings">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.RemainingAnsiText">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.RemainingUtfStrings">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.RemainingUtfText">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.RequireAnsiString">
            <summary>
            Require ANSI string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.RequireInt32">
            <summary>
            Require 32-bit integer.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.ServerResponse">
            <summary>
            Server response network packet.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.ServerResponse.Delimiter">
            <summary>
            Разделитель.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.CommandCode">
            <summary>
            Команда клиента.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.Connection">
            <summary>
            Connection used.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.ClientID">
            <summary>
            Идентификатор клиента.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.CommandNumber">
            <summary>
            Порядковый номер команды.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.AnswerSize">
            <summary>
            Размер ответа сервера в байтах.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.ReturnCode">
            <summary>
            Код возврата.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.RawAnswer">
            <summary>
            Raw server response.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.RawRequest">
            <summary>
            Raw client request.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.Relaxed">
            <summary>
            Relax return code check.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.#ctor(ManagedIrbis.IrbisConnection,System.Byte[],System.Byte[],System.Boolean)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetAnsiString">
            <summary>
            Get ANSI string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetAnsiStrings(System.Int32)">
            <summary>
            Get array of ANSI strings.
            </summary>
            <returns><c>null</c>if there is not enough lines in
            the server response.</returns>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetAnsiStringsPlus(System.Int32)">
            <summary>
            Get array of ANSI strings.
            </summary>
            <returns><c>null</c>if there is no lines in
            the server response, otherwise missing lines will
            be added (as empty lines).</returns>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetEmptyResponse(ManagedIrbis.IrbisConnection)">
            <summary>
            Get empty response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetInt32(System.Int32)">
            <summary>
            Get 32-bit integer value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetReader(System.Text.Encoding)">
            <summary>
            Get <see cref="T:System.IO.TextReader"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetReaderCopy(System.Text.Encoding)">
            <summary>
            Get <see cref="T:System.IO.TextReader"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Get <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetReturnCode">
            <summary>
            Get return code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetAnswerCopy(System.Int32,System.Int32)">
            <summary>
            Get copy of the answer packet span.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetAnswerCopy">
            <summary>
            Get copy of the answer packet.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetStream">
            <summary>
            Get stream with current state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetStreamCopy">
            <summary>
            Get stream with current state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetStream(System.Int32,System.Int32)">
            <summary>
            Get stream from the specified point.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetUtfString">
            <summary>
            Get UTF-8 string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetUtfStrings(System.Int32)">
            <summary>
            Get array of UTF-8 strings.
            </summary>
            <returns><c>null</c>if there is not enough lines in
            the server response.</returns>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.RefuseAnReturnCode">
            <summary>
            Refuse an return code (for commands that
            doesn't return any codes).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.RemainingAnsiStrings">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.RemainingAnsiText">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.RemainingUtfStrings">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.RemainingUtfText">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.RequireAnsiString">
            <summary>
            Require ANSI string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.RequireUtfString">
            <summary>
            Require UTF8 string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.RequireInt32">
            <summary>
            Require 32-bit integer.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.AbstractClientSocket">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.AbstractClientSocket.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.AbstractClientSocket.Busy">
            <summary>
            Busy state flag.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractClientSocket.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractClientSocket.AbortRequest">
            <summary>
            Abort the request.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractClientSocket.ExecuteRequest(System.Byte[])">
            <summary>
            Send request to server and receive answer.
            </summary>
            <exception cref="T:ManagedIrbis.Infrastructure.IrbisNetworkException"></exception>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Sockets.FakeClientSocket">
            <summary>
            Fake client socket for off-site debugging.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Sockets.FakeClientSocket.StoragePath">
            <summary>
            Path to store queries and responses.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.FakeClientSocket.#ctor(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.FakeClientSocket.AbortRequest">
            <summary>
            Abort the request.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.FakeClientSocket.ExecuteRequest(System.Byte[])">
            <summary>
            Send request to server and receive answer.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Sockets.HttpClientSocket">
            <summary>
            Socket for Web CGI mode.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.HttpClientSocket.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.HttpClientSocket.AbortRequest">
            <summary>
            Abort the request.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.HttpClientSocket.ExecuteRequest(System.Byte[])">
            <summary>
            Send request to server and receive answer.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Sockets.LoggingClientSocket">
            <summary>
            Logging socket for debug purposes.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Sockets.LoggingClientSocket.DebugPath">
            <summary>
            Path to store debug data.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Sockets.LoggingClientSocket.InnerSocket">
            <summary>
            Underlying socket to do real work.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.LoggingClientSocket.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.AbstractClientSocket,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.LoggingClientSocket.AbortRequest">
            <summary>
            Abort the request.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.LoggingClientSocket.ExecuteRequest(System.Byte[])">
            <summary>
            Send request to server and receive answer.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Sockets.RetryClientSocket">
            <summary>
            Retry on network error.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Sockets.RetryClientSocket.DelayInterval">
            <summary>
            Delay between sequent attempts.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Sockets.RetryClientSocket.InnerSocket">
            <summary>
            Working socket.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Sockets.RetryClientSocket.RetryManager">
            <summary>
            Retry manager.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.RetryClientSocket.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.AbstractClientSocket,AM.RetryManager)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.RetryClientSocket.AbortRequest">
            <summary>
            Abort the request.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.RetryClientSocket.ExecuteRequest(System.Byte[])">
            <summary>
            Send request to server and receive answer.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Sockets.SmartClientSocket">
            <summary>
            Client socket that minimizes memory reallocation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.SmartClientSocket.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.SmartClientSocket.AbortRequest">
            <summary>
            Abort the request.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.SmartClientSocket.ExecuteRequest(System.Byte[])">
            <summary>
            Send request to server and receive answer.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.SimpleClientSocket">
            <summary>
            Naive client socket implementation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.SimpleClientSocket.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.SimpleClientSocket.AbortRequest">
            <summary>
            Abort the request.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.SimpleClientSocket.ExecuteRequest(System.Byte[])">
            <summary>
            Send request to server and receive answer.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.StandardEngine">
            <summary>
            Standard execution engine.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.StandardEngine.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.AbstractEngine)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Input.InputLine">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Input.InputLine.Hint">
            <summary>
            Hint.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Input.InputLine.Mandatory">
            <summary>
            Mandatory?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Input.InputLine.Tag">
            <summary>
            Tag (e. g. "200^a").
            </summary>
        </member>
        <member name="M:ManagedIrbis.Input.InputLine.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Input.InputLine.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Input.InputLine.Verify(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Input.InputSpecification">
            <summary>
            Input specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Input.InputSpecification.Lines">
            <summary>
            Input lines.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Input.InputSpecification.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Input.InputSpecification.Title">
            <summary>
            Title.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Input.InputSpecification.LoadJsonFile(System.String)">
            <summary>
            Load specification from JSON file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Input.InputSpecification.LoadXmlFile(System.String)">
            <summary>
            Load specification from XML file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Input.InputSpecification.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Input.InputSpecification.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Input.InputSpecification.Verify(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.IrbisAlphabetTable">
            <summary>
            ISISAC.TAB
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisAlphabetTable.FileName">
            <summary>
            Имя файла таблицы по умолчанию.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisAlphabetTable.Characters">
            <summary>
            Собственно таблица.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.#ctor(System.Text.Encoding,System.Byte[])">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.#ctor(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.IsAlpha(System.Char)">
            <summary>
            Determines whether the specified character is alpha
            according to table.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.ParseLocalFile(System.String)">
            <summary>
            Парсим локальный файл.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.ParseText(System.IO.TextReader)">
            <summary>
            Парсим таблицу из текстового представления.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.SplitWords(System.String)">
            <summary>
            Разбиваем текст на слова.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.ToSourceCode(System.IO.TextWriter)">
            <summary>
            Формируем исходный код с определением таблицы.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.WriteLocalFile(System.String)">
            <summary>
            Записываемся в файл.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.WriteTable(System.IO.TextWriter)">
            <summary>
            Записываемся в поток.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisCatalog">
            <summary>
            Common catalog-related stuff.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisCatalog.MasterFileExtension">
            <summary>
            Master file.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisCatalog.CrossReferenceExtension">
            <summary>
            Cross-reference.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisCatalog.IndexFileExtension">
            <summary>
            Index (inverted) file.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisCatalog.NodeFileExtension">
            <summary>
            Node file.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisCatalog.LeafFileExtension">
            <summary>
            Leaf node file.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisCatalog.FileSelectionTableExtension">
            <summary>
            File selection table.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisCatalog.GetExtensions">
            <summary>
            Get extensions for database files.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisConnection">
            <summary>
            Client for IRBIS-server.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisConnection.DefaultTimeout">
            <summary>
            Таймаут получения ответа от сервера по умолчанию.
            </summary>
        </member>
        <member name="E:ManagedIrbis.IrbisConnection.Disposing">
            <summary>
            Вызывается перед уничтожением объекта.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisConnection.ClientVersion">
            <summary>
            Версия клиента.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Busy">
            <summary>
            Признак занятости клиента.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Host">
            <summary>
            Адрес сервера.
            </summary>
            <value>Адрес сервера в цифровом виде.</value>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Port">
            <summary>
            Порт сервера.
            </summary>
            <value>Порт сервера (по умолчанию 6666).</value>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Username">
            <summary>
            Имя пользователя.
            </summary>
            <value>Имя пользователя.</value>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Password">
            <summary>
            Пароль пользователя.
            </summary>
            <value>Пароль пользователя.</value>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Database">
            <summary>
            Имя базы данных.
            </summary>
            <value>Служебное имя базы данных (например, "IBIS").
            </value>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Workstation">
            <summary>
            Тип АРМ.
            </summary>
            <value>По умолчанию
            <see cref="F:ManagedIrbis.IrbisWorkstation.Cataloger"/>.
            </value>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.ClientID">
            <summary>
            Идентификатор клиента.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.QueryID">
            <summary>
            Номер команды.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Executive">
            <summary>
            Executive engine.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.CommandFactory">
            <summary>
            Command factory.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.IniFile">
            <summary>
            Remote INI-file for the client.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Connected">
            <summary>
            Статус подключения к серверу.
            </summary>
            <value>Устанавливается в true при успешном выполнении
            <see cref="M:ManagedIrbis.IrbisConnection.Connect"/>, сбрасывается при выполнении
            <see cref="M:ManagedIrbis.IrbisConnection.Dispose"/>.
            </value>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Timeout">
            <summary>
            Таймаут получения ответа от сервера в миллисекундах
            (для продвинутых функций).
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Interrupted">
            <summary>
            Признак: команда прервана.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Socket">
            <summary>
            Socket.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.#ctor">
            <summary>
            Конструктор по умолчанию
            </summary>
            <remarks>
            Обратите внимание, деструктор не нужен!
            Он помешает сохранению состояния клиента
            при сериализации и последующему восстановлению,
            т. к. попытается закрыть уже установленное
            соединение. Восстановленная копия клиента
            ломанётся в закрытое соедиение, и выйдет облом.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.#ctor(System.String)">
            <summary>
            Конструктор с подключением.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ActualizeRecord(System.String,System.Int32)">
            <summary>
            Actualize given record (if not yet).
            </summary>
            <remarks>If MFN=0, then all non actualized
            records in the database will be actualized.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.Clone">
            <summary>
            Clone the connection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.Clone(System.Boolean)">
            <summary>
            Clone the connection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.Connect">
            <summary>
            Establish connection (if not yet).
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.CorrectVirtualRecord(System.String,ManagedIrbis.MarcRecord,ManagedIrbis.Gbl.GblStatement[])">
            <summary>
            GBL for virtual record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.CorrectVirtualRecord(System.String,ManagedIrbis.MarcRecord,System.String)">
            <summary>
            GBL for virtual record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.CreateDatabase(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Create the database.
            </summary>
            <remarks>For Administrator only.</remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.CreateDictionary(System.String)">
            <summary>
            Create dictionary index for specified database.
            </summary>
            <remarks>For Administrator only.</remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.DeleteDatabase(System.String)">
            <summary>
            Delete the database.
            </summary>
            <remarks>For Administrator only.</remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ExecuteCommand(ManagedIrbis.Infrastructure.Commands.AbstractCommand)">
            <summary>
            Execute any command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ExecuteCommand(System.String,System.Object[])">
            <summary>
            Execute command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.FormatRecord(System.String,System.Int32)">
            <summary>
            Format specified record using ANSI encoding.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.FormatRecord(System.String,ManagedIrbis.MarcRecord)">
            <summary>
            Format specified record using ANSI encoding.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.FormatRecords(System.String,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Format specified records using ANSI encoding.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.GetDatabaseInfo(System.String)">
            <summary>
            Получение информации о базе данных.
            </summary>
            <returns>Cписок логически удаленных, физически удаленных, 
            неактуализированных и заблокированных записей.</returns>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.GetDatabaseStat(ManagedIrbis.StatDefinition)">
            <summary>
            Get stat for the database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.GetMaxMfn">
            <summary>
            Get next mfn for current database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.GetMaxMfn(System.String)">
            <summary>
            Get next mfn for given database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.GetServerStat">
            <summary>
            Get server stat.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.GetServerVersion">
            <summary>
            Get server version.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.GlobalCorrection(ManagedIrbis.Gbl.GblSettings)">
            <summary>
            Global correction.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ListFiles(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            List server files by the specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ListFiles(ManagedIrbis.Infrastructure.FileSpecification[])">
            <summary>
            List server files by the specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ListProcesses">
            <summary>
            List server processes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ListUsers">
            <summary>
            List users.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.NoOp">
            <summary>
            No operation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ParseConnectionString(System.String)">
            <summary>
            Парсинг строки подключения.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.PopDatabase">
            <summary>
            Возврат к предыдущей базе данных.
            </summary>
            <returns>Текущая база данных.</returns>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.PrintTable(ManagedIrbis.TableDefinition)">
            <summary>
            Print table.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.PushDatabase(System.String)">
            <summary>
            Временное переключение на другую базу данных.
            </summary>
            <returns>Предыдущая база данных.</returns>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ReadBinaryFile(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Read binary file from server file system.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ReadPostings(ManagedIrbis.Search.PostingParameters)">
            <summary>
            Read term postings.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ReadRecord(System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            Чтение, блокирование и расформатирование записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ReadRecord(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Чтение указанной версии и расформатирование записи.
            </summary>
            <remarks><c>null</c>означает, что затребованной
            версии записи нет.</remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ReadTerms(ManagedIrbis.Search.TermParameters)">
            <summary>
            Read search terms from index.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ReadTextFile(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Read text file from the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ReadTextFiles(ManagedIrbis.Infrastructure.FileSpecification[])">
            <summary>
            Чтение текстовых файлов с сервера.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ReloadDictionary(System.String)">
            <summary>
            Reload dictionary index for specified database.
            </summary>
            <remarks>For Administrator only.</remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ReloadMasterFile(System.String)">
            <summary>
            Reload master file for specified database.
            </summary>
            <remarks>For Administrator only.</remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.RestartServer">
            <summary>
            Restart server.
            </summary>
            <remarks>For Administrator only.</remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.Restore(System.String)">
            <summary>
            Restore previously suspended connection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.Search(System.String)">
            <summary>
            Поиск записей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SequentialSearch(ManagedIrbis.Search.SearchParameters)">
            <summary>
            Sequential search.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SetCommandFactory(ManagedIrbis.Infrastructure.CommandFactory)">
            <summary>
            Set new <see cref="P:ManagedIrbis.IrbisConnection.CommandFactory"/>.
            </summary>
            <returns>Previous <see cref="P:ManagedIrbis.IrbisConnection.CommandFactory"/>.
            </returns>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SetCommandFactory(System.String)">
            <summary>
            Set new <see cref="P:ManagedIrbis.IrbisConnection.CommandFactory"/>.
            </summary>
            <returns>Previous <see cref="P:ManagedIrbis.IrbisConnection.CommandFactory"/>.
            </returns>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SetEngine(ManagedIrbis.Infrastructure.AbstractEngine)">
            <summary>
            Set execution engine.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SetEngine(System.String)">
            <summary>
            Set new <see cref="P:ManagedIrbis.IrbisConnection.Executive"/>.
            </summary>
            <returns>Previous <see cref="P:ManagedIrbis.IrbisConnection.Executive"/>.
            </returns>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SetNetworkLogging(System.String)">
            <summary>
            Set logging socket, gather debug info to specified path.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SetRetry(System.Int32,System.Func{System.Exception,System.Boolean})">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SetSocket(System.String)">
            <summary>
            Set
            <see cref="T:ManagedIrbis.Network.Sockets.AbstractClientSocket"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SetSocket(ManagedIrbis.Infrastructure.AbstractClientSocket)">
            <summary>
            Set
            <see cref="T:ManagedIrbis.Network.Sockets.AbstractClientSocket"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.Suspend">
            <summary>
            Temporary "shutdown" the connection for some reason.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.TruncateDatabase(System.String)">
            <summary>
            Опустошение базы данных.
            </summary>
            <remarks>For Administrator only.</remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.UnlockDatabase(System.String)">
            <summary>
            Unlock the specified database.
            </summary>
            <remarks>For Administrator only.</remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.UnlockRecords(System.String,System.Int32[])">
            <summary>
            Unlock specified records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.UpdateIniFile(System.String[])">
            <summary>
            Update server INI-file for current client.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.UpdateUserList(ManagedIrbis.UserInfo[])">
            <summary>
            Update user list on the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.WriteRecord(ManagedIrbis.MarcRecord,System.Boolean,System.Boolean)">
            <summary>
            Create or update existing record in the database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.WriteRecords(ManagedIrbis.MarcRecord[],System.Boolean,System.Boolean)">
            <summary>
            Create or update many records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.WriteTextFile(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Write text file to the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.WriteTextFiles(ManagedIrbis.Infrastructure.FileSpecification[])">
            <summary>
            Write text files to the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.Dispose">
            <summary>
            Performs application-defined tasks associated
            with freeing, releasing, or resetting
            unmanaged resources.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisConnectionUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ActualizeDatabase(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Актуализация всех неактуализированных записей
            в указанной базе данных.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.DeleteRecord(ManagedIrbis.IrbisConnection,System.Int32)">
            <summary>
            Delete given record (mark as deleted on the server).
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.DeleteRecords(ManagedIrbis.IrbisConnection,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Delete some records (mark as deleted on the server).
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ExecuteArbitraryCommand(ManagedIrbis.IrbisConnection,System.String,System.Object[])">
            <summary>
            Execute arbitrary command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.FormatUtf8(ManagedIrbis.IrbisConnection,System.String,System.Int32)">
            <summary>
            Format specified record using UTF8 encoding.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.FormatUtf8(ManagedIrbis.IrbisConnection,System.String,ManagedIrbis.MarcRecord)">
            <summary>
            Format specified record using UTF8 encoding.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.FormatUtf8(ManagedIrbis.IrbisConnection,System.String,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Format specified records using UTF8 encoding.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ListDatabases(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Get list of the databases.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ListDatabases(ManagedIrbis.IrbisConnection)">
            <summary>
            Get list of the databases.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ListStandardConnectionStrings">
            <summary>
            Стандартные наименования для ключа строки подключения
            к серверу ИРБИС64.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.LockRecord(ManagedIrbis.IrbisConnection,System.String,System.Int32)">
            <summary>
            Lock the record on the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.LockRecords(ManagedIrbis.IrbisConnection,System.String,System.Int32[])">
            <summary>
            Lock some records on the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadMenu(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Read menu from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadRawRecord(ManagedIrbis.IrbisConnection,System.String,System.Int32)">
            <summary>
            Read server representation of record from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadRawRecord(ManagedIrbis.IrbisConnection,System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            Read server representation of record from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadRawRecord(ManagedIrbis.IrbisConnection,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Read server representation of record from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadRawRecords(ManagedIrbis.IrbisConnection,System.String,System.Int32[])">
            <summary>
            Read server representation of record from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadRecords(ManagedIrbis.IrbisConnection,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Read multiple records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.RemoveLogging(ManagedIrbis.IrbisConnection)">
            <summary>
            Remove logging from socket.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.RecordHistory(ManagedIrbis.IrbisConnection,System.String,System.Int32,System.String)">
            <summary>
            Retrieve history for given record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadRecord(ManagedIrbis.IrbisConnection,System.Int32)">
            <summary>
            Чтение записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadTextFile(ManagedIrbis.IrbisConnection,ManagedIrbis.IrbisPath,System.String)">
            <summary>
            Read text file from the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.RequireClientVersion(ManagedIrbis.IrbisConnection,System.String,System.Boolean)">
            <summary>
            Require minimal client version.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.RequireServerVersion(ManagedIrbis.IrbisConnection,System.String,System.Boolean)">
            <summary>
            Require minimal server version.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.Search(ManagedIrbis.IrbisConnection,System.String,System.Object[])">
            <summary>
            Search for records with formattable expression.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.SearchCount(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Определение количества записей, которые будут
            найдены по указанному выражению.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.SearchFormat(ManagedIrbis.IrbisConnection,System.String,System.String)">
            <summary>
            Поиск с одновременным расформатированием.
            Для формата используется кодировка ANSI.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.SearchFormatUtf8(ManagedIrbis.IrbisConnection,System.String,System.String)">
            <summary>
            Поиск с одновременным расформатированием.
            Для формата используется кодировка UTF-8.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.SearchRaw(ManagedIrbis.IrbisConnection,ManagedIrbis.Search.SearchParameters)">
            <summary>
            Raw search.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.SearchRead(ManagedIrbis.IrbisConnection,System.String,System.Object[])">
            <summary>
            Загрузка записей по результатам поиска.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.SearchReadOneRecord(ManagedIrbis.IrbisConnection,System.String,System.Object[])">
            <summary>
            Загрузка одной записи по результатам поиска.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.SequentialSearchRaw(ManagedIrbis.IrbisConnection,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Raw sequential search.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.UndeleteRecord(ManagedIrbis.IrbisConnection,System.Int32)">
            <summary>
            Undelete given record (mark as live on the server).
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.UndeleteRecords(ManagedIrbis.IrbisConnection,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Undelete some records (mark as live on the server).
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.UnlockRecordAlternative(ManagedIrbis.IrbisConnection,System.String,System.Int32)">
            <summary>
            Unlock record through E command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.WriteRawRecord(ManagedIrbis.IrbisConnection,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Write record in raw representation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.WriteRawRecords(ManagedIrbis.IrbisConnection,System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            Write record in raw representation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.WriteRecord(ManagedIrbis.IrbisConnection,ManagedIrbis.MarcRecord)">
            <summary>
            Create or update existing record in the database.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisConstants">
            <summary>
            Common constants.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisConstants.AdministratorDatabaseList">
            <summary>
            Database list for administrator.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisConstants.CatalogerDatabaseList">
            <summary>
            Database list for cataloger.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisConstants.MaxPostings">
            <summary>
            Max postings in the packet.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisConstants.ReaderDatabaseList">
            <summary>
            Database list for reader.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisDate">
            <summary>
            Строка с ИРБИС-датой yyyyMMdd.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisDate.DefaultFormat">
            <summary>
            Формат конверсии по умолчанию.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisDate.ConversionFormat">
            <summary>
            Формат конверсии.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisDate.Text">
            <summary>
            В виде текста.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisDate.Date">
            <summary>
            В виде даты.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.#ctor">
            <summary>
            Конструктор.
            </summary>
            <remarks>
            Инициализирует сегодняшней датой.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.#ctor(System.String)">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.#ctor(System.DateTime)">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.ConvertDateToString(System.DateTime)">
            <summary>
            Преобразование даты в строку.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.ConvertStringToDate(System.String)">
            <summary>
            Преобразование строки в дату.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.op_Implicit(System.String)~ManagedIrbis.IrbisDate">
            <summary>
            Неявное преобразование
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.op_Implicit(System.DateTime)~ManagedIrbis.IrbisDate">
            <summary>
            Неявное преобразование
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.op_Implicit(ManagedIrbis.IrbisDate)~System.String">
            <summary>
            Неявное преобразование
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.op_Implicit(ManagedIrbis.IrbisDate)~System.DateTime">
            <summary>
            Неявное преобразование
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.IrbisEditMask">
            <summary>
            Маска ввода в ИРБИС (Delphi)
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisEditMask.Mask">
            <summary>
            Маска
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisEditMask.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisEditMask.#ctor(System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisEditMask.Match(System.String)">
            <summary>
            Сравнение текста с маской.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisEditMask.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisEditMask.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisEncoding">
            <summary>
            Encoding used by IRBIS
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisEncoding.Ansi">
            <summary>
            Default single-byte encoding.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisEncoding.Oem">
            <summary>
            OEM encoding.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisEncoding.Utf8">
            <summary>
            UTF8 encoding.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisEncoding.SetAnsiEncoding(System.Text.Encoding)">
            <summary>
            Override default single-byte encoding.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisEncoding.SetOemEncoding(System.Text.Encoding)">
            <summary>
            Override OEM encoding.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisException">
            <summary>
            Исключения, специфичные для библиотеки
            ManagedClient
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisException.ErrorCode">
            <summary>
            Код возврата (код ошибки)
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisException.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisException.#ctor(System.Int32)">
            <summary>
            Конструктор с кодом ошибки.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisException.#ctor(System.String)">
            <summary>
            Конструктор с готовым сообщением
            об ошибке.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор для десериализации.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisException.GetErrorDescription(ManagedIrbis.IrbisException)">
            <summary>
            Текстовое описание ошибки.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisException.GetErrorDescription(ManagedIrbis.Infrastructure.IrbisReturnCode)">
            <summary>
            Текстовое описание ошибки.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisException.GetErrorDescription(System.Int32)">
            <summary>
            Текстовое описание ошибки.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisException.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.IrbisFormat">
            <summary>
            Common format related stuff.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisFormat.All">
            <summary>
            Format ALL.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisFormat.Brief">
            <summary>
            BRIEF format.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisFormat.Ibis">
            <summary>
            IBIS format.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisFormat.Informational">
            <summary>
            Informational format.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisFormat.Optimized">
            <summary>
            Optimized format.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisFormat.ForbiddenCharacters">
            <summary>
            Запрещенные символы.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisFormat.PrepareFormat(System.String)">
            <summary>
            Prepare dynamic format string.
            </summary>
            <param name="text"></param>
            <remarks>Dynamic format string
            mustn't contains comments and
            string delimiters (no matter
            real or IRBIS).
            </remarks>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.IrbisFormat.VerifyFormat(System.String,System.Boolean)">
            <summary>
            Verify format string.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisOpt">
            <summary>
            OPT files handling
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisOpt.Wildcard">
            <summary>
            Подстановочный символ.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisOpt.Item">
            <summary>
            Элемент словаря.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisOpt.Item.Key">
            <summary>
            Ключ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisOpt.Item.Value">
            <summary>
            Значение.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.Item.Compare(System.String)">
            <summary>
            Сравнение строки с ключом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.Item.Parse(System.String)">
            <summary>
            Разбор строки.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.Item.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.Item.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.Item.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.IrbisOpt.Items">
            <summary>
            Элементы списка.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisOpt.WorksheetLength">
            <summary>
            Length of worksheet.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisOpt.WorksheetTag">
            <summary>
            Tag that identifies worksheet.
            Common used: 920
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.CompareChar(System.Char,System.Char)">
            <summary>
            Сравнение символов с учётом подстановочного
            знака '+'.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.CompareString(System.String,System.String)">
            <summary>
            Сравнение строк с учётом подстановочного знака '+'.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.GetWorksheet(ManagedIrbis.MarcRecord)">
            <summary>
            Получаем рабочий лист для указанной записи.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.LoadFromOptFile(System.String)">
            <summary>
            Загружаем из OPT-файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.ParseText(System.IO.TextReader)">
            <summary>
            Разбор текста.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.SelectWorksheet(System.String)">
            <summary>
            Выбор рабочего листа.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.WriteOptFile(System.String)">
            <summary>
            Создание OPT-файла по описанию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.WriteOptFile(System.IO.TextWriter)">
            <summary>
            Создание OPT-файла по описанию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.SetWorksheetLength(System.Int32)">
            <summary>
            Установка длины названия рабочего листа.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.SetWorksheetTag(System.String)">
            <summary>
            Установка поля для рабочего листа.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.Validate(System.Boolean)">
            <summary>
            Проверка на валидность. OPT должен содержать
            одну строку с плюсами. Она должна быть последней.
            OPT не должен быть пустым. Длина ключей в элементах
            не должна превышать <see cref="P:ManagedIrbis.IrbisOpt.WorksheetLength"/>.
            Не должно быть одинаковых ключей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisPath">
            <summary>
            Задает путь к файлам Ирбис
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisPath.System">
            <summary>
            Общесистемный путь
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisPath.Data">
            <summary>
            путь размещения сведений о базах данных сервера ИРБИС64
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisPath.MasterFile">
            <summary>
            путь на мастер-файл базы данных
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisPath.InvertedFile">
            <summary>
            путь на словарь базы данных
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisPath.ParameterFile">
            <summary>
            путь на параметрию базы данных
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisPath.FullText">
            <summary>
            Полный текст
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisPath.InternalResource">
            <summary>
            Внутренний ресурс
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisProcessInfo">
            <summary>
            Информация о запущенном на сервере процессе.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.Number">
            <summary>
            Просто порядковый номер процесса.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.IPAddress">
            <summary>
            С каким клиентом взаимодействует.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.Name">
            <summary>
            Логин оператора.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.ClientID">
            <summary>
            Идентификатор клиента.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.Workstation">
            <summary>
            Тип АРМ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.Started">
            <summary>
            Время запуска.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.LastCommand">
            <summary>
            Последняя выполненная (или выполняемая) команда.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.CommandNumber">
            <summary>
            Порядковый номер последней команды.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.ProcessID">
            <summary>
            Идентификатор процесса.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.State">
            <summary>
            Состояние.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisProcessInfo.Parse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Разбор ответа сервера.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisProcessInfo.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisProcessInfo.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisProcessInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.IrbisSearchQuery">
            <summary>
            IRBIS search query.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisSearchQuery.ForbiddenCharacters">
            <summary>
            Запрещенные символы.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisSearchQuery.PrepareQuery(System.String)">
            <summary>
            Подготавливает строку запроса,
            заменяя запрещённые символы на пробелы.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisStopWords">
            <summary>
            STW file handling.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisStopWords.FileName">
            <summary>
            File name (for identification only).
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisStopWords.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisStopWords.#ctor(System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:ManagedIrbis.IrbisStopWords"/> class.
            </summary>
            <param name="fileName">The name.</param>
        </member>
        <member name="M:ManagedIrbis.IrbisStopWords.IsStopWord(System.String)">
            <summary>
            Is given word is stopword?
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisStopWords.ParseLines(System.String,System.String[])">
            <summary>
            Parse array of plain text lines.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisStopWords.ParseText(System.String,System.String)">
            <summary>
            Parse plain text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisStopWords.ParseFile(System.String)">
            <summary>
            Parse the text file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisStopWords.ToLines">
            <summary>
            Convert <see cref="T:ManagedIrbis.IrbisStopWords"/> to array
            of text lines.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisStopWords.ToText">
            <summary>
            Convert <see cref="T:ManagedIrbis.IrbisStopWords"/> to plain text.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisText">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisText.IrbisDelimiter">
            <summary>
            Irbis line delimiter.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisText.StandardDelimiter">
            <summary>
            Standard Windows line delimiter.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisText.WindowsDelimiter">
            <summary>
            Standard Windows line delimiter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisText.IrbisToWindows(System.String)">
            <summary>
            Convert IRBIS line endings to standard.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisText.WindowsToIrbis(System.String)">
            <summary>
            Convert standard line endings to IRBIS.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisTreeFile">
            <summary>
            TRE files handling
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisTreeFile.Indent">
            <summary>
            Tabulation
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisTreeFile.Item">
            <summary>
            Tree item
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisTreeFile.Item.Children">
            <summary>
            Children.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisTreeFile.Item.Delimiter">
            <summary>
            Delimiter.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisTreeFile.Item.Prefix">
            <summary>
            Prefix.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisTreeFile.Item.Suffix">
            <summary>
            Suffix.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisTreeFile.Item.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Item.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Item.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Item.AddChild(System.String)">
            <summary>
            Add child.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Item.SetDelimiter(System.String)">
            <summary>
            Set the delimiter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Item.SetValue(System.String)">
            <summary>
            Set the value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Item.Verify(System.Boolean)">
            <summary>
            Verify the item.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Item.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Item.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to specified stream.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisTreeFile.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisTreeFile.Roots">
            <summary>
            Root items.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.CountIndent(System.String)">
            <summary>
            Determines indent level of the string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.AddRoot(System.String)">
            <summary>
            Add root item.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.ParseStream(System.IO.TextReader)">
            <summary>
            Parse specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.ReadLocalFile(System.String,System.Text.Encoding)">
            <summary>
            Read local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Save(System.IO.TextWriter)">
            <summary>
            Save to text stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.SaveToLocalFile(System.String,System.Text.Encoding)">
            <summary>
            Save to local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Verify(System.Boolean)">
            <summary>
            Verify the tree.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to specified stream.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisUpperCaseTable">
            <summary>
            Table for uppercase character conversion.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisUpperCaseTable.FileName">
            <summary>
            Имя файла таблицы по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.#ctor(System.Text.Encoding,System.Byte[],System.Byte[])">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.#ctor(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Конструктор.
            </summary>
            <param name="client">The client.</param>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.ToUpper(System.Char)">
            <summary>
            Converts specified character to uppercase.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.ToUpper(System.String)">
            <summary>
            Converts spefified string to uppercase
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUtility.EncodePercentString(System.Byte[])">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUtility.DecodePercentString(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisVersion">
            <summary>
            Информация о версии ИРБИС-сервера.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisVersion.Organization">
            <summary>
            На кого приобретен.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisVersion.Version">
            <summary>
            Собственно версия.
            </summary>
            <remarks>Например, 64.2008.1</remarks>
        </member>
        <member name="P:ManagedIrbis.IrbisVersion.MaxClients">
            <summary>
            Максимальное количество подключений.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisVersion.ConnectedClients">
            <summary>
            Текущее количество подключений.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisVersion.ParseServerResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Parse server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisVersion.ParseServerResponse(System.Collections.Generic.List{System.String})">
            <summary>
            Parse server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisVersion.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisVersion.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisVersion.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.IrbisWorkstation">
            <summary>
            Коды АРМов ИРБИС.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisWorkstation.Administrator">
            <summary>
            Администратор
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisWorkstation.Cataloger">
            <summary>
            Каталогизатор
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisWorkstation.Acquisitions">
            <summary>
            Комплектатор
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisWorkstation.Reader">
            <summary>
            Читатель
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisWorkstation.Circulation">
            <summary>
            Книговыдача
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisWorkstation.Bookland">
            <summary>
            Тоже книговыдача
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisWorkstation.Provision">
            <summary>
            Книгообеспеченность
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisWorkstation.None">
            <summary>
            Не задан
            </summary>
        </member>
        <member name="T:ManagedIrbis.LocalCatalogManager">
            <summary>
            Creates, copies, removes local catalogs.
            </summary>
        </member>
        <member name="P:ManagedIrbis.LocalCatalogManager.Output">
            <summary>
            Text output.
            </summary>
        </member>
        <member name="P:ManagedIrbis.LocalCatalogManager.RootPath">
            <summary>
            Root path for catalogs.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LocalCatalogManager.#ctor(System.String,AM.Text.Output.AbstractOutput)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LocalCatalogManager.BackupDatabase(System.String,System.String)">
            <summary>
            Backup catalog database to the given path.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LocalCatalogManager.RestoreDatabase(System.String,System.String)">
            <summary>
            Restore catalog database from the given path.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Magazines.MagazineArticleInfo">
            <summary>
            Информация о статье из журнала/сборника.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineArticleInfo.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineArticleInfo.Parse(ManagedIrbis.RecordField)">
            <summary>
            Разбор поля (330 или 922).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineArticleInfo.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineArticleInfo.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Magazines.MagazineCumulation">
            <summary>
            Данные о кумуляции номеров. Поле 909.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Magazines.MagazineCumulation.Tag">
            <summary>
            Тег поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineCumulation.Year">
            <summary>
            Год. Подполе Q.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineCumulation.Volume">
            <summary>
            Том. Подполе F.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineCumulation.Place">
            <summary>
            Место хранения. Подполе D.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineCumulation.Numbers">
            <summary>
            Кумулированные номера. Подполе H.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineCumulation.Set">
            <summary>
            Номер комплекта. Подполе K.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineCumulation.Parse(ManagedIrbis.RecordField)">
            <summary>
            Разбор поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineCumulation.Parse(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineCumulation.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineCumulation.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineCumulation.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Magazines.MagazineInfo">
            <summary>
            Информация о журнале в целом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.Index">
            <summary>
            Код документа в базе. Поле 903.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.Description">
            <summary>
            Библиографическое описание.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.Title">
            <summary>
            Заглавие. Поле 200^a.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.SubTitle">
            <summary>
            Подзаголовочные сведения.
            Поле 200^e.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.SeriesNumber">
            <summary>
            Обозначение и выпуск серии.
            Поле 923^1.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.SeriesTitle">
            <summary>
            Заголовок серии.
            Поле 923^i.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.ExtendedTitle">
            <summary>
            Расширенное заглавие. 
            Включает заголовок выпуск и заголовок серии.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.MagazineType">
            <summary>
            Тип издания. Поле 110^t
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.MagazineKind">
            <summary>
            Вид издания. Поле 110^b
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.Periodicity">
            <summary>
            Периодичность (число). Поле 110^x
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.Cumulation">
            <summary>
            Кумуляция. Поле 909
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.Mfn">
            <summary>
            MFN записи журнала.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineInfo.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineInfo.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineInfo.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Magazines.MagazineIssueInfo">
            <summary>
            Сведения о номере журнала
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.Mfn">
            <summary>
            MFN записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.Description">
            <summary>
            Библиографическое описание.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.DocumentCode">
            <summary>
            Шифр документа в базе. Поле 903.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.MagazineCode">
            <summary>
            Шифр журнала. Поле 933.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.Year">
            <summary>
            Год. Поле 934.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.Volume">
            <summary>
            Том. Поле 935.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.Number">
            <summary>
            Номер, часть. Поле 936.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.Supplement">
            <summary>
            Дополнение к номеру. Поле 931^c.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.Worksheet">
            <summary>
            Рабочий лист. Поле 920.
            (чтобы отличать подшивки от выпусков журналов)
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.Articles">
            <summary>
            Расписанное оглавление. Поле 922.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.Exemplars">
            <summary>
            Экземпляры. Поле 910.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineIssueInfo.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineIssueInfo.CompareNumbers(ManagedIrbis.Magazines.MagazineIssueInfo,ManagedIrbis.Magazines.MagazineIssueInfo)">
            <summary>
            Сравнение двух выпусков
            (с целью сортировки по возрастанию номеров).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineIssueInfo.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineIssueInfo.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineIssueInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Magazines.MagazineManager">
            <summary>
            Работа с периодикой.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Magazines.MagazineManager.Newspaper">
            <summary>
            Вид документа – сводное описание газеты.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Magazines.MagazineManager.Magazine">
            <summary>
            Вид документа – сводное описание журнала.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineManager.Connection">
            <summary>
            Клиент для связи с сервером.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineManager.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineManager.GetAllMagazines">
            <summary>
            Получение перечня всех журналов из базы.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineManager.GetMagazine(ManagedIrbis.Magazines.MagazineIssueInfo)">
            <summary>
            Получение журнала по его выпуску.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineManager.GetIssue(ManagedIrbis.Magazines.MagazineArticleInfo)">
            <summary>
            Получение выпуска журнала по статье из этого выпуска.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineManager.GetIssues(ManagedIrbis.Magazines.MagazineInfo)">
            <summary>
            Получение списка выпусков данного журнала.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineManager.GetArticles(ManagedIrbis.Magazines.MagazineIssueInfo)">
            <summary>
            Получение списка статей из выпуска.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineManager.CreateMagazine(ManagedIrbis.Magazines.MagazineInfo)">
            <summary>
            Создание журнала в базе по описанию.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Mapping.FieldAttribute">
            <summary>
            Задаёт отображение поля на свойство.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mapping.FieldAttribute.Tag">
            <summary>
            Тег.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mapping.FieldAttribute.Occurrence">
            <summary>
            Повторение.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.FieldAttribute.#ctor(System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.FieldAttribute.#ctor(System.String,System.Int32)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Mapping.SubFieldAttribute">
            <summary>
            Задаёт отображение подполя на свойство.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mapping.SubFieldAttribute.Code">
            <summary>
            Код.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mapping.SubFieldAttribute.Occurrence">
            <summary>
            Повторение.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldAttribute.#ctor(System.Char)">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldAttribute.#ctor(System.Char,System.Int32)">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="T:ManagedIrbis.Mapping.SubFieldInfo">
            <summary>
            Информация о маппинге.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mapping.SubFieldInfo.Code">
            <summary>
            Код подполя.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mapping.SubFieldInfo.Occurrence">
            <summary>
            Повторение подполя
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mapping.SubFieldInfo.Mapper">
            <summary>
            Метод-маппер.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Mapping.SubFieldMapper">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToBoolean(ManagedIrbis.SubField)">
            <summary>
            Преобразование в булево значение.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToChar(ManagedIrbis.SubField)">
            <summary>
            Преобразование в символ.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToDateTime(ManagedIrbis.SubField)">
            <summary>
            Преобразование в дату.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToDecimal(ManagedIrbis.SubField)">
            <summary>
            Преобразование в число с фиксированной точкой.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToDouble(ManagedIrbis.SubField)">
            <summary>
            Преобразование в число с плавающей точкой
            двойной точностью.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToSingle(ManagedIrbis.SubField)">
            <summary>
            Преобразование в число с плавающей точкой
            одинарной точности.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToInt16(ManagedIrbis.SubField)">
            <summary>
            Преобразование в 16-битное целое со знаком.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToInt32(ManagedIrbis.SubField)">
            <summary>
            Преобразование в 32-битное целое со знаком.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToInt64(ManagedIrbis.SubField)">
            <summary>
            Преобразование в 64-битное целое со знаком.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToString(ManagedIrbis.SubField)">
            <summary>
            Преобразование в строку (тривиальное).
            </summary>
        </member>
        <member name="T:ManagedIrbis.MarcRecord">
            <summary>
            MARC record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.HostName">
            <summary>
            Hostname of IRBIS-server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.Database">
            <summary>
            Name of database that the records belongs to.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.Mfn">
            <summary>
            MFN записи
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.Status">
            <summary>
            Статус записи: удалена, блокирована и т.д.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.Version">
            <summary>
            Версия записи. Нумеруется с нуля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.PreviousOffset">
            <summary>
            Смещение предыдущей версии записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.Fields">
            <summary>
            Поля записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.Deleted">
            <summary>
            Признак удалённой записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.Description">
            <summary>
            Библиографическое описание.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.SortKey">
            <summary>
            Используется при сортировке записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.Index">
            <summary>
            Индекс документа.
            Используется для идентификации записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.#ctor">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.#ctor(ManagedIrbis.MarcRecord)">
            <summary>
            Конструктор для клонирования.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.Clone">
            <summary>
            Создание "глубокой" копии записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.Compare(ManagedIrbis.MarcRecord,ManagedIrbis.MarcRecord)">
            <summary>
            Compares two records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.FM(System.String)">
            <summary>
            Получить текст поля до разделителей подполей
            первого повторения поля с указанной меткой.
            </summary>
            <param name="tag">Метка поля.</param>
            <returns>Значение поля или <c>null</c>.</returns>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.FMA(System.String)">
            <summary>
            Текст всех полей с указанным тегом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.FM(System.String,System.Char)">
            <summary>
            Текст первого подполя с указанным тегом и кодом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.FMA(System.String,System.Char)">
            <summary>
            Текст всех подполей с указанным тегом и кодом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.FR(System.String)">
            <summary>
            Простейшее форматирование поля/подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.FRA(System.String)">
            <summary>
            Простейшее форматирование поля/подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.SetDatabase(System.String)">
            <summary>
            Assign database name to the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.SetMfn(System.Int32)">
            <summary>
            Assign MFN to the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.SetStatus(ManagedIrbis.RecordStatus)">
            <summary>
            Change status of the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.SetVersion(System.Int32)">
            <summary>
            Assign version number to the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.ShouldSerializeDatabase">
            <summary>
            For Newtonsoft.Json.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.ShouldSerializeMfn">
            <summary>
            For Newtonsoft.Json.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.ShouldSerializeStatus">
            <summary>
            For Newtonsoft.Json.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.ShouldSerializeVersion">
            <summary>
            For Newtonsoft.Json.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.ReadOnly">
            <summary>
            Whether the record read-only?
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.AsReadOnly">
            <summary>
            Creates read-only clone of the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.SetReadOnly">
            <summary>
            Marks the record as read-only.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.ThrowIfReadOnly">
            <summary>
            Throws if read only.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.MarcRecordUtility">
            <summary>
            Extension methods for <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.HaveField(ManagedIrbis.MarcRecord,System.String[])">
            <summary>
            Есть хотя бы одно поле с указанными тегами?
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.HaveNotField(ManagedIrbis.MarcRecord,System.String[])">
            <summary>
            Нет ни одного поля с указанными тегами?
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.ParseAllFormat(System.String,ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Parse ALL-formatted records in server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.ParseAllFormat(System.String,ManagedIrbis.IrbisConnection,System.String[])">
            <summary>
            Parse ALL-formatted records in server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.SetField(ManagedIrbis.MarcRecord,System.String,System.String)">
            <summary>
            Sets the field.
            </summary>
            <returns></returns>
            <remarks>Устанавливает значение только для
            первого повторения поля (если в записи их несколько)!
            </remarks>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.SetField(ManagedIrbis.MarcRecord,System.String,System.Int32,System.String)">
            <summary>
            Установка поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.SetSubField(ManagedIrbis.MarcRecord,System.String,System.Char,System.String)">
            <summary>
            Установка подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.SetSubField(ManagedIrbis.MarcRecord,System.String,System.Int32,System.Char,System.Int32,System.String)">
            <summary>
            Установка подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.ToJson(ManagedIrbis.MarcRecord)">
            <summary>
            Convert the <see cref="T:ManagedIrbis.MarcRecord"/> to JSON.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.MarcBibliographicalIndex">
            <summary>
            Библиографический указатель.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalIndex.PartOfMonograph">
            <summary>
            Часть монографии.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalIndex.PartOfSerialPrinting">
            <summary>
            Часть сериального издания.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalIndex.Collection">
            <summary>
            Коллекция.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalIndex.PartOfCollection">
            <summary>
            Часть коллекции.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalIndex.Monograph">
            <summary>
            Монография (книга, рукопись, картина и т.д.).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalIndex.SerialPrinting">
            <summary>
            Сериальное издание, периодика.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.MarcBibliographicalLevel">
            <summary>
            Уровень кодирования библиографического описания.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalLevel.Full">
            <summary>
            Полный уровень описания.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalLevel.FullNotChecked">
            <summary>
            Полный уровень, но запись не была проверена.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalLevel.NotComplete">
            <summary>
            Не окончательно созданная запись.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalLevel.Minimal">
            <summary>
            Минимальный уровень.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalLevel.Publisher">
            <summary>
            Запись сделана по тематическому плану издательства.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalLevel.Unknown">
            <summary>
            Уровень неизвестен.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalLevel.NotAvailable">
            <summary>
            Невозможно установить уровень записи.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.MarcCatalogingRules">
            <summary>
            Код правил описания записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcCatalogingRules.NotConforming">
            <summary>
            Не соответствуте ISBD, AACR2
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcCatalogingRules.AACR2">
            <summary>
            Соответствует AACR2.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcCatalogingRules.ISBD">
            <summary>
            Соответствует ISBD.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.MarcRecordStatus">
            <summary>
            Статус записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordStatus.LevelUp">
            <summary>
            При изменении записи увеличивается ее уровень.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordStatus.Changed">
            <summary>
            При изменении записи уровень остался прежним.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordStatus.Deleted">
            <summary>
            Запись удалена, но информация о ней сохраняется.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordStatus.New">
            <summary>
            Новая запись.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordStatus.Publisher">
            <summary>
            Запись изменилась после того, как была введена с плана издательства.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.MarcRecordType">
            <summary>
            Тип записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.Text">
            <summary>
            Текстовый материал.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.ArchiveMaterial">
            <summary>
            Архивный материал, рукописи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.PrintedMusic">
            <summary>
            Печатные ноты.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.HandwrittenMusic">
            <summary>
            Рукописные ноты.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.PrintedMap">
            <summary>
            Печатные карты.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.HandwrittenMap">
            <summary>
            Рукописные карты.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.Film">
            <summary>
            Фильмокопии, видеофильмы и проч.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.NonMusicRecord">
            <summary>
            Немузыкальные записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.MusicRecord">
            <summary>
            Музыкальные записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.Picture">
            <summary>
            Картины, фотографии и т.д. (двумерная графика).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.ComputerFiles">
            <summary>
            Компьютерные файлы.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.MixedMaterial">
            <summary>
            Смешанные материалы.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.Sculpture">
            <summary>
            Скульптуры и другие трехмерные объекты.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.MarcRelatedRecord">
            <summary>
            Необходимость связанной записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRelatedRecord.NotRequired">
            <summary>
            Не требуется.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRelatedRecord.Required">
            <summary>
            Требуется.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.Schema.Example">
            <summary>
            Example.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.Example.Number">
            <summary>
            Number.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.Example.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.Example.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parse XML element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.Example.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the given stream
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.Example.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object stat to the given stream
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.Schema.FieldSchema">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.Display">
            <summary>
            Display.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.Examples">
            <summary>
            Examples.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.Indicator1">
            <summary>
            First indicator.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.Indicator2">
            <summary>
            Second indicator.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.Mandatory">
            <summary>
            Mandatory?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.MandatoryText">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.RelatedFields">
            <summary>
            Related fields
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.Repeatable">
            <summary>
            Repeatable?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.RepeatableText">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.SubFields">
            <summary>
            Subfields.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.Tag">
            <summary>
            Tag.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.FieldSchema.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.FieldSchema.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parse given XML element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.FieldSchema.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the given stream
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.FieldSchema.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object stat to the given stream
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.Schema.IndicatorSchema">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.IndicatorSchema.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.IndicatorSchema.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.IndicatorSchema.Options">
            <summary>
            Options.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.IndicatorSchema.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.IndicatorSchema.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parse XML element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.IndicatorSchema.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the given stream
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.IndicatorSchema.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object stat to the given stream
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.Schema.MarcSchema">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.MarcSchema.Fields">
            <summary>
            Fields.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.MarcSchema.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.MarcSchema.ParseDocument(System.Xml.Linq.XDocument)">
            <summary>
            Parse given XML document.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.MarcSchema.ParseLocalXml(System.String)">
            <summary>
            Parse local XML file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.MarcSchema.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the given stream
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.MarcSchema.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object stat to the given stream
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.Schema.Option">
            <summary>
            Option.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.Option.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.Option.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.Option.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parse XML element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.Option.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the given stream
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.Option.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object stat to the given stream
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.Schema.RelatedField">
            <summary>
            Related field.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.RelatedField.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.RelatedField.Field">
            <summary>
            Field.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.RelatedField.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.RelatedField.Tag">
            <summary>
            Tag.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.RelatedField.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parse XML element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.RelatedField.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the given stream
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.RelatedField.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object stat to the given stream
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.Schema.SchemaUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.GetAttributeBoolean(System.Xml.Linq.XElement,System.String)">
            <summary>
            Get attribute boolean value for element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.GetAttributeBoolean(System.Xml.Linq.XElement,System.String,System.Boolean)">
            <summary>
            Get attribute boolean value for element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.GetAttributeCharacter(System.Xml.Linq.XElement,System.String)">
            <summary>
            Get first char of attribute value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.GetAttributeInt32(System.Xml.Linq.XElement,System.String,System.Int32)">
            <summary>
            Get integer value for given attribute.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.GetAttributeText(System.Xml.Linq.XElement,System.String)">
            <summary>
            Get attribute text for element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.GetAttributeText(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Get attribute text for element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.GetElementText(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Get attribute text for element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.GetInnerXml(System.Xml.Linq.XElement)">
            <summary>
            Get inner XML for the element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.GetInnerXml(System.Xml.Linq.XElement,System.String)">
            <summary>
            Get inner XML for child element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.ToBoolean(System.Xml.Linq.XAttribute)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.ToJson(ManagedIrbis.Marc.Schema.MarcSchema)">
            <summary>
            Convert schema to JSON.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.Schema.SubFieldSchema">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.SubFieldSchema.Code">
            <summary>
            Code.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.SubFieldSchema.CodeString">
            <summary>
            For serialization.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.SubFieldSchema.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.SubFieldSchema.Display">
            <summary>
            Display.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.SubFieldSchema.Mandatory">
            <summary>
            Mandatory?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.SubFieldSchema.MandatoryText">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.SubFieldSchema.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.SubFieldSchema.Repeatable">
            <summary>
            Repeatable?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.SubFieldSchema.RepeatableText">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SubFieldSchema.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parse XML element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SubFieldSchema.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the given stream
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SubFieldSchema.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object stat to the given stream
            </summary>
        </member>
        <member name="T:ManagedIrbis.Menus.IrbisMenuUtility">
            <summary>
            MNU file extended handling.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.IrbisMenuUtility.Add``1(ManagedIrbis.Menus.MenuFile,System.String,``0)">
            <summary>
            Adds the typed value with specified code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.IrbisMenuUtility.CollectStrings(ManagedIrbis.Menus.MenuFile,System.String)">
            <summary>
            Collects the comments for code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.IrbisMenuUtility.GetValue``1(ManagedIrbis.Menus.MenuFile,System.String,``0)">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.IrbisMenuUtility.GetValueSensitive``1(ManagedIrbis.Menus.MenuFile,System.String,``0)">
            <summary>
            Gets the value (case sensitive).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.IrbisMenuUtility.ToJson(ManagedIrbis.Menus.MenuFile)">
            <summary>
            Converts the menu to JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.IrbisMenuUtility.FromJson(System.String)">
            <summary>
            Restores the menu from JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.IrbisMenuUtility.SaveLocalJsonFile(ManagedIrbis.Menus.MenuFile,System.String)">
            <summary>
            Saves the menu to local JSON file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.IrbisMenuUtility.ParseLocalJsonFile(System.String)">
            <summary>
            Parses the local json file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.IrbisMenuUtility.ToXml(ManagedIrbis.Menus.MenuFile)">
            <summary>
            Converts the menu to XML.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Menus.MenuConverter">
            <summary>
            Converts the <see cref="T:ManagedIrbis.Menus.MenuFile"/> to JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The
            <see cref="T:Newtonsoft.Json.JsonWriter" />
            to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.
            </param>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The
            <see cref="T:Newtonsoft.Json.JsonReader" />
            to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value
            of object being read.</param>
            <param name="serializer">The calling serializer.
            </param>
            <returns>The object value.</returns>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert
            the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns><c>true</c> if this instance can convert
            the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:ManagedIrbis.Menus.MenuEntry">
            <summary>
            MNU file entry. Represents two lines.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Menus.MenuEntry.Code">
            <summary>
            First line -- the code.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Menus.MenuEntry.Comment">
            <summary>
            Second line -- the comment.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuEntry.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from given stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuEntry.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to the stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuEntry.ShouldSerializeComment">
            <summary>
            Should JSON serialize the comment?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuEntry.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Menus.MenuFile">
            <summary>
            MNU file handling.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Menus.MenuFile.StopMarker">
            <summary>
            End of menu marker.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Menus.MenuFile.FileName">
            <summary>
            Name of menu file -- for identification
            purposes only.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Menus.MenuFile.Entries">
            <summary>
            Gets the entries.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.#ctor(AM.Collections.NonNullCollection{ManagedIrbis.Menus.MenuEntry})">
            <summary>
            Internal constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.Add(System.String,System.String)">
            <summary>
            Adds the specified code and comment.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.TrimCode(System.String)">
            <summary>
            Trims the code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.FindEntry(System.String)">
            <summary>
            Finds the entry.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.FindEntrySensitive(System.String)">
            <summary>
            Finds the entry (case sensitive).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.GetEntry(System.String)">
            <summary>
            Finds the entry.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.GetEntrySensitive(System.String)">
            <summary>
            Finds the entry (case sensitive).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.GetString(System.String,System.String)">
            <summary>
            Finds comment by the code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.GetString(System.String)">
            <summary>
            Finds comment by the code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.GetStringSensitive(System.String,System.String)">
            <summary>
            Finds comment by the code (case sensitive).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.GetStringSensitive(System.String)">
            <summary>
            Finds comment by the code (case sensitive).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.ParseStream(System.IO.TextReader)">
            <summary>
            Parses the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.ParseLocalFile(System.String,System.Text.Encoding)">
            <summary>
            Parses the local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.ParseLocalFile(System.String)">
            <summary>
            Parses the local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.ParseServerResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Parse server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.ParseServerResponse(System.String)">
            <summary>
            Parse server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.ReadFromServer(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Read <see cref="T:ManagedIrbis.Menus.MenuFile"/> from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.SortEntries(ManagedIrbis.Menus.MenuSort)">
            <summary>
            Sorts the entries.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.ToText">
            <summary>
            Builds text representation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to the stream.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Menus.MenuSort">
            <summary>
            Menu sorting.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Menus.MenuSort.None">
            <summary>
            No sorting.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Menus.MenuSort.ByCode">
            <summary>
            Sort by code.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Menus.MenuSort.ByComment">
            <summary>
            Sort by comment.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Metadata.AbstractMetadataFormat">
            <summary>
            Абстрактный формат метаданных.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Metadata.MarcMetadataFormat">
            <summary>
            Основанный на MARC формат метаданных.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Metadata.RusMarcMetadataFormat">
            <summary>
            Формат метаданных RusMarc.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ParFile">
            <summary>
            PAR files handling
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.XrfPath">
            <summary>
            Путь к файлу XRF
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.MstPath">
            <summary>
            Путь к файлу MST
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.CntPath">
            <summary>
            Путь к файлу CNT
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.N01Path">
            <summary>
            Путь к файлу N01
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.N02Path">
            <summary>
            Путь к файлу N02
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.L01Path">
            <summary>
            Путь к файлу L01
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.L02Path">
            <summary>
            Путь к файлу L02
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.IfpPath">
            <summary>
            Путь к файлу IFP
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.AnyPath">
            <summary>
            Путь к файлу ANY
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.PftPath">
            <summary>
            Путь к файлам PFT
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.ExtPath">
            <summary>
            Расположение внешних объектов (поле 951)
            </summary>
            <remarks>Параметр появился в версии 2012</remarks>
        </member>
        <member name="M:ManagedIrbis.ParFile.ReadDictionary(System.IO.TextReader)">
            <summary>
            Разбор PAR-файла на строчки вида 1=.\datai\ibis.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ParFile.ParseFile(System.String)">
            <summary>
            Разбор файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ParFile.ParseText(System.IO.TextReader)">
            <summary>
            Разбор текста.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ParFile.ToDictionary">
            <summary>
            Преобразование в словарь.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ParFile.WriteFile(System.String)">
            <summary>
            Запись в файл
            </summary>
        </member>
        <member name="M:ManagedIrbis.ParFile.WriteText(System.IO.TextWriter)">
            <summary>
            Запись в поток.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ParFile.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.ParFile.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.ParFile.Verify(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.ParFile.ToString">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Pooling.IrbisConnectionPool">
            <summary>
            Пул соединений с сервером.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pooling.IrbisConnectionPool.DefaultConnectionString">
            <summary>
            Строка подключения по умолчанию.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pooling.IrbisConnectionPool.DefaultCapacity">
            <summary>
            Количество одновременных подключений по умолчанию.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pooling.IrbisConnectionPool.Capacity">
            <summary>
            Количество одновременных подключений.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pooling.IrbisConnectionPool.ConnectionString">
            <summary>
            Строка подключения к серверу.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.#ctor(System.Int32)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.#ctor(System.String)">
            <summary>
            Конструктор с конкретной строкой соединения.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.#ctor(System.Int32,System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.AcquireConnection">
            <summary>
            Требование нового подключения к серверу.
            </summary>
            <remarks>Может подвесить поток на неопределённое время.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.Execute(System.Action{ManagedIrbis.IrbisConnection})">
            <summary>
            Исполнение некоторых действий на подключении из пула.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.Execute``1(System.Action{ManagedIrbis.IrbisConnection,``0},``0)">
            <summary>
            Исполнение некоторых действий на подключении из пула.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.Execute``2(System.Func{ManagedIrbis.IrbisConnection,``1,``0},``1)">
            <summary>
            Исполнение некоторых действий на подключении из пула.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.ReleaseConnection(ManagedIrbis.IrbisConnection)">
            <summary>
            Возвращение подключения в пул.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.ReleaseIdleConnections">
            <summary>
            Закрывает простаивающие соединения.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.WaitForAllConnections">
            <summary>
            Ожидание закрытия всех активных подключений.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.Dispose">
            <summary>
            Performs application-defined tasks associated
            with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <exception cref="T:ManagedIrbis.IrbisException">
            Have active connections</exception>
        </member>
        <member name="T:ManagedIrbis.Pooling.IrbisPoolGuard">
            <summary>
            Следит за своевременным возвращением соединения в пул.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pooling.IrbisPoolGuard.Connection">
            <summary>
            Отслеживаемое подключение.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pooling.IrbisPoolGuard.Pool">
            <summary>
            Отслеживаемый пул подключений.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisPoolGuard.#ctor(ManagedIrbis.Pooling.IrbisConnectionPool)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisPoolGuard.op_Implicit(ManagedIrbis.Pooling.IrbisPoolGuard)~ManagedIrbis.IrbisConnection">
            <summary>
            Неявное преобразование.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisPoolGuard.Dispose">
            <summary>
            Performs application-defined tasks associated
            with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pooling.PoolUtility">
            <summary>
            Утилиты для работы пулом соединений.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.PoolUtility.ReadRecord(ManagedIrbis.Pooling.IrbisConnectionPool,System.Int32)">
            <summary>
            Чтение записи с помощью пула.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.PoolUtility.Search(ManagedIrbis.Pooling.IrbisConnectionPool,System.String,System.Object[])">
            <summary>
            Поиск в каталоге с помощью пула.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.PoolUtility.WriteRecord(ManagedIrbis.Pooling.IrbisConnectionPool,ManagedIrbis.MarcRecord)">
            <summary>
            Сохранение записей с помощью пула.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Readers.ChairInfo">
            <summary>
            Информация о кафедре обслуживания.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Readers.ChairInfo.ChairMenu">
            <summary>
            Имя меню с кафедрами по умолчанию.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ChairInfo.Code">
            <summary>
            Код.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ChairInfo.Title">
            <summary>
            Название.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ChairInfo.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ChairInfo.#ctor(System.String,System.String)">
            <summary>
            Конструктор.
            </summary>
            <param name="code">Код.</param>
            <param name="title">Название.</param>
        </member>
        <member name="M:ManagedIrbis.Readers.ChairInfo.Parse(System.String)">
            <summary>
            Разбор текста меню-файла.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Readers.ChairInfo.Read(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Загрузка с сервера.
            </summary>
            <param name="client"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Readers.ChairInfo.Read(ManagedIrbis.IrbisConnection)">
            <summary>
            Загрузка с сервера.
            </summary>
            <param name="client"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Readers.ChairInfo.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Сохранение в поток.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ChairInfo.SaveToFile(System.String,ManagedIrbis.Readers.ChairInfo[])">
            <summary>
            Сохранение в файл.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ChairInfo.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Считывание из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ChairInfo.ReadChairsFromFile(System.String)">
            <summary>
            Считывание из файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ChairInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Readers.DebtorInfo">
            <summary>
            Информация о задолжнике
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Name">
            <summary>
            Фамилия, имя, отчество
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.DateOfBirth">
            <summary>
            Дата рождения
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Ticket">
            <summary>
            Номер читательского билета
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Gender">
            <summary>
            Пол
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Category">
            <summary>
            Категория
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Address">
            <summary>
            Адрес
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.WorkPlace">
            <summary>
            Место работы
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Email">
            <summary>
            Электронная почта
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.HomePhone">
            <summary>
            Домашний телефон
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Age">
            <summary>
            Возраст
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Remarks">
            <summary>
            Примечания
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Mfn">
            <summary>
            MFN записи
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Description">
            <summary>
            Расформатированное описание
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.UserData">
            <summary>
            Произвольные данные
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Exemplars">
            <summary>
            Задолженные экземпляры
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.DebtorInfo.FromReader(ManagedIrbis.Readers.ReaderInfo)">
            <summary>
            Формирование задолжника из читателя
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.DebtorInfo.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Readers.DebtorInfo.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Readers.DebtorManager">
            <summary>
            Работа с задолжниками.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorManager.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorManager.Department">
            <summary>
            Кафедра обслуживания.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorManager.FromDate">
            <summary>
            С какой даты задолженность?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorManager.ToDate">
            <summary>
            По какую дату задолженность.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.DebtorManager.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.DebtorManager.GetDebtors">
            <summary>
            Получение списка задолжников.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Readers.IriProfile">
            <summary>
            Профиль ИРИ
            </summary>
        </member>
        <member name="F:ManagedIrbis.Readers.IriProfile.IriTag">
            <summary>
            Тег поля ИРИ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.IriProfile.Active">
            <summary>
            Подполе A
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.IriProfile.ID">
            <summary>
            Подполе B
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.IriProfile.Title">
            <summary>
            Подполе C
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.IriProfile.Query">
            <summary>
            Подполе D
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.IriProfile.Periodicity">
            <summary>
            Подполе E
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.IriProfile.LastServed">
            <summary>
            Подполе F
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.IriProfile.Database">
            <summary>
            Подполе I
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.IriProfile.Reader">
            <summary>
            Ссылка на читателя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.IriProfile.ParseField(ManagedIrbis.RecordField)">
            <summary>
            Разбор поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.IriProfile.ParseRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.IriProfile.LoadFromFile(System.String)">
            <summary>
            Считывание из файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.IriProfile.SaveToFile(System.String,ManagedIrbis.Readers.IriProfile[])">
            <summary>
            Сохранение в файл.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.IriProfile.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Readers.IriProfile.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Readers.ReaderAddress">
            <summary>
            Адрес читателя: поле 13 в базе RDR.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Readers.ReaderAddress.Tag">
            <summary>
            Тег поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderAddress.Postcode">
            <summary>
            Почтовый индекс. Подполе A.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderAddress.Country">
            <summary>
            Страна/республика. Подполе B.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderAddress.City">
            <summary>
            Город. Подполе C.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderAddress.Street">
            <summary>
            Улица. Подполе D.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderAddress.Building">
            <summary>
            Номер дома. Подполе E.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderAddress.Entrance">
            <summary>
            Номер подъезда. Подполе G.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderAddress.Apartment">
            <summary>
            Номер квартиры. Подполе H.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderAddress.AdditionalData">
            <summary>
            Дополнительные данные. Подполе F.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderAddress.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderAddress.Parse(ManagedIrbis.RecordField)">
            <summary>
            Разбор поля 13.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderAddress.Parse(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Разбор поля 13.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderAddress.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор поля 13.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderAddress.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderAddress.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderAddress.ToString">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Readers.ReaderInfo">
            <summary>
            Информация о читателе.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.FullName">
            <summary>
            ФИО. Комбинируется из полей 10, 11 и 12.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.FamilyName">
            <summary>
            Фамилия. Поле 10.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.FirstName">
            <summary>
            Имя. Поле 11.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Patronymic">
            <summary>
            Отчество. Поле 12.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.DateOfBirth">
            <summary>
            Дата рождения. Поле 21.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Ticket">
            <summary>
            Номер читательского. Поле 30.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Gender">
            <summary>
            Пол. Поле 23.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Category">
            <summary>
            Категория. Поле 50.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Address">
            <summary>
            Домашний адрес. Поле 13.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.WorkPlace">
            <summary>
            Место работы. Поле 15.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Education">
            <summary>
            Образование. Поле 20.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Email">
            <summary>
            Электронная почта. Поле 32.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.HomePhone">
            <summary>
            Домашний телефон. Поле 17.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.RegistrationDateString">
            <summary>
            Дата записи. Поле 51.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.RegistrationDate">
            <summary>
            Дата регистрации
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Enrollment">
            <summary>
            Запись/перерегистрация в библиотеку.
            Поле 51.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Registrations">
            <summary>
            Дата перерегистрации. Поле 52.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.LastRegistrationDate">
            <summary>
            Дата последней перерегистрации.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.LastRegistrationPlace">
            <summary>
            Последнее место регистрации.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.EnabledPlaces">
            <summary>
            Разрешенные места получения литературы. Поле 56.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.DisabledPlaces">
            <summary>
            Запрещенные места получения литературы. Поле 57.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Rights">
            <summary>
            Право пользования библиотекой. Поле 29.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Remarks">
            <summary>
            Примечания. Поле 33.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.PhotoFile">
            <summary>
            Фотография читателя. Поле 950.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Visits">
            <summary>
            Информация о посещениях.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Profiles">
            <summary>
            Профили обслуживания ИРИ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Age">
            <summary>
            Возраст, годы
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.AgeCategory">
            <summary>
            Возрастная категория.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.UserData">
            <summary>
            Произвольные данные, ассоциированные с читателем.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.FirstVisitDate">
            <summary>
            Дата первого посещения
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.LastVisitDate">
            <summary>
            Дата последнего посещения.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.LastVisitPlace">
            <summary>
            Кафедра последнего посещения.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.LastVisitResponsible">
            <summary>
            Последний обслуживавший библиотекарь.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Description">
            <summary>
            Расформатированное описание.
            Не соответствует никакому полю.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Mfn">
            <summary>
            MFN записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderInfo.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Parse the specified field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderInfo.ReadFromFile(System.String)">
            <summary>
            Считывание из файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderInfo.SaveToFile(System.String,ManagedIrbis.Readers.ReaderInfo[])">
            <summary>
            Сохранение в файле.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderInfo.ToRecord">
            <summary>
            Формирование записи по данным о читателе.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderInfo.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderInfo.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Readers.ReaderManager">
            <summary>
            Основные операции с читателями.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Readers.ReaderManager.ReaderIdentifier">
            <summary>
            Стандартный префикс идентификатора читателя.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderManager.Client">
            <summary>
            Клиент, общающийся с сервером.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderManager.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:ManagedIrbis.Readers.ReaderManager"/> class.
            </summary>
            <param name="client">The client.</param>
            <exception cref="T:System.ArgumentNullException">client</exception>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderManager.GetAllReaders">
            <summary>
            Получение массива всех (не удалённых) читателей из базы данных.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderManager.GetReader(System.String)">
            <summary>
            Получение записи читателя по его идентификатору.
            </summary>
            <param name="ticket"></param>
            <returns></returns>
        </member>
        <member name="T:ManagedIrbis.Readers.ReaderRegistration">
            <summary>
            Информация о регистрации/перерегистрации читателя.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Readers.ReaderRegistration.RegistrationTag">
            <summary>
            Поле регистрация.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Readers.ReaderRegistration.ReregistrationTag">
            <summary>
            Поле "перерегистрация".
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderRegistration.DateString">
            <summary>
            Дата. Подполе *.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderRegistration.Date">
            <summary>
            Дата.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderRegistration.Chair">
            <summary>
            Место (кафедра обслуживания).
            Подполе c.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderRegistration.OrderNumber">
            <summary>
            Номер приказа. Подполе a.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderRegistration.Reason">
            <summary>
            Причина. Подполе b.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderRegistration.Reader">
            <summary>
            Ссылка на зарегистрированного читателя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderRegistration.Parse(ManagedIrbis.RecordField)">
            <summary>
            Разбор поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderRegistration.Parse(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderRegistration.ToField">
            <summary>
            Преобразование в поле.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderRegistration.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderRegistration.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Readers.ReaderUtility">
            <summary>
            Методы для работы с БД читателей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderUtility.LoadReaders(ManagedIrbis.IrbisConnection,System.Collections.Generic.List{ManagedIrbis.Readers.ReaderInfo},System.String)">
            <summary>
            Загрузка читателей из базы.
            </summary>
            <param name="client"></param>
            <param name="readers"></param>
            <param name="dbName"></param>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderUtility.MergeReaders(System.Collections.Generic.List{ManagedIrbis.Readers.ReaderInfo})">
            <summary>
            Слияние записей о читателях из разных баз.
            </summary>
            <remarks>
            Слияние происходит на основе читательского билета.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderUtility.LoadReaders(ManagedIrbis.IrbisConnection,System.String[])">
            <summary>
            Загрузка сведений о читателях из нескольких баз.
            </summary>
            <remarks>
            Выполняется слияние сведений на основе
            номера читательского билета.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderUtility.CountEvents(System.Collections.Generic.List{ManagedIrbis.Readers.ReaderInfo},System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Подсчёт количества событий.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderUtility.CountEvents(System.Collections.Generic.List{ManagedIrbis.Readers.ReaderInfo},System.DateTime,System.DateTime,System.String,System.Boolean)">
            <summary>
            Подсчёт количества событий
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderUtility.GetEvents(System.Collections.Generic.List{ManagedIrbis.Readers.ReaderInfo})">
            <summary>
            Отбор событий.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderUtility.GetEvents(ManagedIrbis.Readers.VisitInfo[],System.String)">
            <summary>
            Отбор событий.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderUtility.GetEvents(ManagedIrbis.Readers.VisitInfo[],System.Boolean)">
            <summary>
            Отбор событий.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderUtility.GetEvents(ManagedIrbis.Readers.VisitInfo[],System.DateTime)">
            <summary>
            Отбор событий.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderUtility.GetEvents(ManagedIrbis.Readers.VisitInfo[],System.DateTime,System.DateTime)">
            <summary>
            Отбор событий.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Readers.VisitInfo">
            <summary>
            Информация о посещении/выдаче.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Database">
            <summary>
            подполе G, имя БД каталога.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Index">
            <summary>
            подполе A, шифр документа.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Inventory">
            <summary>
            подполе B, инвентарный номер экземпляра
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Barcode">
            <summary>
            подполе H, штрих-код экземпляра.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Sigla">
            <summary>
            подполе K, место хранения экземпляра
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.DateGivenString">
            <summary>
            подполе D, дата выдачи
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Department">
            <summary>
            подполе V, место выдачи
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.DateExpectedString">
            <summary>
            подполе E, дата предполагаемого возврата
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.DateReturnedString">
            <summary>
            подполе F, дата фактического возврата
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.DateProlongString">
            <summary>
            подполе L, дата продления
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Lost">
            <summary>
            подполе U, признак утерянной книги
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Description">
            <summary>
            подполе C, краткое библиографическое описание
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Responsible">
            <summary>
            подполе I, ответственное лицо
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.TimeIn">
            <summary>
            подполе 1, время начала визита в библиотеку
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.TimeOut">
            <summary>
            подполе 2, время окончания визита в библиотеку
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.IsVisit">
            <summary>
            Не посещение ли?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.IsReturned">
            <summary>
            Возвращена ли книга?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.DateGiven">
            <summary>
            Дата выдачи/посещения.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.DateReturned">
            <summary>
            Дата возврата
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.DateExpected">
            <summary>
            Ожидаемая дата возврата
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Reader">
            <summary>
            Ссылка на читателя, сделавшего посещение.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfo.Parse(ManagedIrbis.RecordField)">
            <summary>
            Parses the specified field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfo.ToField">
            <summary>
            Формирование поля 40 
            из данных о выдаче/посещении.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfo.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Сохранение в поток.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfo.SaveToStream(System.IO.BinaryWriter,ManagedIrbis.Readers.VisitInfo[])">
            <summary>
            Сохранение в поток.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfo.SaveToFile(System.String,ManagedIrbis.Readers.VisitInfo[])">
            <summary>
            Сохранение в файл.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfo.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Считывание из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfo.ReadFromFile(System.String)">
            <summary>
            Считывание из файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Readers.VisitInfoUtility">
            <summary>
            Utility routines for <see cref="T:ManagedIrbis.Readers.VisitInfo"/>.
            </summary>
        </member>
        <member name="T:ManagedIrbis.RecordField">
            <summary>
            MARC record subfield.
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordField.NoTag">
            <summary>
            Нет тега, т. е. тег ещё не присвоен.
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordField.Delimiter">
            <summary>
            Разделитель подполей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordField.IndicatorCount">
            <summary>
            Количество индикаторов поля.
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordField.BreakOnValueContainDelimiters">
            <summary>
            Флаг: выбрасывать исключение, если свойству Value
            присваивается значение, содержащее разделитель.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordField.Tag">
            <summary>
            Метка поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordField.Indicator1">
            <summary>
            Первый индикатор.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordField.Indicator2">
            <summary>
            Второй индикатор.
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordField.Repeat">
            <summary>
            Повторение поля.
            Настраивается перед передачей
            в скрипты.
            Не используется в большинстве сценариев.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordField.Value">
            <summary>
            Значение поля до первого разделителя подполей.
            </summary>
            <remarks>
            Внимание! Если присваиваемое значение содержит
            разделитель, то происходит и присвоение подполей!
            Имеющиеся в SubFields значения при этом пропадают
            и замещаются на вновь присваиваемые!
            </remarks>
        </member>
        <member name="P:ManagedIrbis.RecordField.SubFields">
            <summary>
            Список подполей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordField.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordField.Record">
            <summary>
            Ссылка на запись, владеющую
            данным полем. Настраивается
            перед передачей в скрипты.
            Всё остальное время неактуально.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordField.Path">
            <summary>
            Field path
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordField.IsFixed">
            <summary>
            Является ли поле фиксированным.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.#ctor(ManagedIrbis.RecordField)">
            <summary>
            Конструктор для клонирования.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.#ctor(System.String)">
            <summary>
            Конструктор с присвоением тега поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.#ctor(System.String,System.String)">
            <summary>
            Конструктор с присвоением тега и значения поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.#ctor(System.String,System.String,System.Boolean,ManagedIrbis.MarcRecord)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.#ctor(System.String,ManagedIrbis.SubField[])">
            <summary>
            Конструктор с подполями.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.AddSubField(System.Char,System.Object)">
            <summary>
            Добавление подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.AddNonEmptySubField(System.Char,System.Object)">
            <summary>
            Добавление подполя, при условии,
            что у него не пустое значение.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.Clone">
            <summary>
            Создание "глубокой" копии поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.Compare(ManagedIrbis.RecordField,ManagedIrbis.RecordField)">
            <summary>
            Compares the specified fields.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.GetSubField(System.Char)">
            <summary>
            Перечень подполей с указанным кодом.
            </summary>
            <param name="code">Искомый код подполя.</param>
            <remarks>Сравнение кодов происходит без учета
            регистра символов.</remarks>
            <returns>Найденные подполя.</returns>
        </member>
        <member name="M:ManagedIrbis.RecordField.GetSubField(System.Char,System.Int32)">
            <summary>
            Указанное повторение подполя с данным кодом.
            </summary>
            <param name="code">Искомый код подполя.</param>
            <param name="occurrence">Номер повторения.
            Нумерация начинается с нуля.
            Отрицательные индексы отсчитываются с конца массива.</param>
            <returns>Найденное подполе или <c>null</c>.</returns>
        </member>
        <member name="M:ManagedIrbis.RecordField.GetFirstSubField(System.Char)">
            <summary>
            Gets the first subfield.
            </summary>
            <param name="code">The code.</param>
            <returns>SubField.</returns>
        </member>
        <member name="M:ManagedIrbis.RecordField.GetSubFieldValue(System.Char,System.Int32)">
            <summary>
            Получение текста указанного подполя.
            </summary>
            <param name="code">Искомый код подполя.</param>
            <param name="occurrence">Номер повторения.
            Нумерация начинается с нуля.
            Отрицательные индексы отсчитываются с конца массива.</param>
            <returns>Текст найденного подполя или <c>null</c>.</returns>
        </member>
        <member name="M:ManagedIrbis.RecordField.GetFirstSubFieldValue(System.Char)">
            <summary>
            Получает значение первого появления подполя
            с указанным кодом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.HaveNotSubField(System.Char)">
            <summary>
            Нет ни одного вхождения подполя с указанным кодом?
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.HaveNotSubField(System.Char[])">
            <summary>
            Нет ни одного вхождения подполя с одним из
            перечисленных кодов?
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.HaveSubField(System.Char)">
            <summary>
            Есть ли хоть одно вхождение подполя с указанным кодом?
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.HaveSubField(System.Char[])">
            <summary>
            Есть ли хоть одно вхождение подполя с одним из
            перечисленных кодов?
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.SetSubField(System.Char,System.Object)">
            <summary>
            Устанавливает значение подполя.
            Если подполя с указанным кодом нет,
            оно создаётся.
            </summary>
            <remarks>Устанавливает значение только первого
            подполя с указанным кодом (если в поле их несколько)!
            </remarks>
        </member>
        <member name="M:ManagedIrbis.RecordField.ShouldSerializeIndicator1">
            <summary>
            For Newtonsoft.Json.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.ShouldSerializeIndicator2">
            <summary>
            For Newtonsoft.Json.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.ShouldSerializeSubFields">
            <summary>
            For Newtonsoft.Json.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.ShouldSerializeValue">
            <summary>
            For Newtonsoft.Json.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.RemoveSubField(System.Char)">
            <summary>
            Удаляет все повторения подполей
            с указанным кодом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.ReplaceSubField(System.Char,System.String,System.Object)">
            <summary>
            Заменяет значение подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.SetTag(System.String)">
            <summary>
            Sets the tag for the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.SetValue(System.String)">
            <summary>
            Sets the value for the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.ToText">
            <summary>
            Builds text representation of the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore the object state from the given stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save the object state to the given stream.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordField.ReadOnly">
            <summary>
            Whether the field is read-only?
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.AsReadOnly">
            <summary>
            Creates read-only clone of the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.SetReadOnly">
            <summary>
            Marks the record as read-only.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.ThrowIfReadOnly">
            <summary>
            Throws if read only.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.Verify(System.Boolean)">
            <summary>
            Verify the object state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" />
            that represents this instance.
            </returns>
        </member>
        <member name="T:ManagedIrbis.RecordFieldCollection">
            <summary>
            Коллекция полей записи.
            Отличается тем, что принципиально
            не принимает значения <c>null</c>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordFieldCollection.Record">
            <summary>
            Record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.AddRange(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Add range of <see cref="T:ManagedIrbis.RecordField"/>s.
            </summary>
            <param name="fields"></param>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.Clone">
            <summary>
            Создание клона коллекции.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.Find(System.Predicate{ManagedIrbis.RecordField})">
            <summary>
            Find first occurrence of the field with given predicate.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.FindAll(System.Predicate{ManagedIrbis.RecordField})">
            <summary>
            Find all occurrences of the field
            with given predicate.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.ClearItems">
            <summary>
            Removes all elements from the
            <see cref="T:System.Collections.ObjectModel.Collection`1" />.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.InsertItem(System.Int32,ManagedIrbis.RecordField)">
            <summary>
            Inserts an element into the
            <see cref="T:System.Collections.ObjectModel.Collection`1" />
            at the specified index.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:System.Collections.ObjectModel.Collection`1" />.
            </summary>
            <param name="index">The zero-based index
            of the element to remove.</param>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.SetItem(System.Int32,ManagedIrbis.RecordField)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element
            to replace.</param>
            <param name="item">The new value for the element
            at the specified index. The value can't be null.</param>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore the object state from the given stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save the object state to the given stream.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordFieldCollection.ReadOnly">
            <summary>
            Whether the collection is read-only?
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.AsReadOnly">
            <summary>
            Create read-only clone of the collection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.SetReadOnly">
            <summary>
            Marks the object as read-only.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.ThrowIfReadOnly">
            <summary>
            Throws if read only.
            </summary>
        </member>
        <member name="T:ManagedIrbis.RecordFieldUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String,System.Int32)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[])">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[],System.Int32)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldRegex(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldRegex(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String,System.Int32)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldRegex(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[],System.String)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldRegex(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[],System.String,System.Int32)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldRegex(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[],System.Char[],System.String)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldRegex(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[],System.Char[],System.String,System.Int32)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.WithNullTag(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.WithNullValue(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.NotNullTag(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.NotNullValue(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.WithSubFields(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.WithoutSubFields(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubField(ManagedIrbis.RecordField,System.Char)">
            <summary>
            Перечень подполей с указанным кодом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubField(ManagedIrbis.RecordField,System.Char,System.Int32)">
            <summary>
            Указанное повторение подполя с данным кодом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFirstSubField(ManagedIrbis.RecordField,System.Char)">
            <summary>
            Gets the first subfield.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubFieldValue(ManagedIrbis.RecordField,System.Char,System.Int32)">
            <summary>
            Получение текста указанного подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFirstSubFieldValue(ManagedIrbis.RecordField,System.Char)">
            <summary>
            Получение текста указанного подполя
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.FilterSubFields(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.Char[])">
            <summary>
            Отбор подполей с указанными кодами.
            </summary>
            <param name="subFields"></param>
            <param name="codes"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.FilterSubFields(ManagedIrbis.RecordField,System.Char[])">
            <summary>
            Отбор подполей с указанными кодами.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.AddSubField(ManagedIrbis.RecordField,System.Char,System.String)">
            <summary>
            Добавление подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.AddNonEmptySubField(ManagedIrbis.RecordField,System.Char,System.String)">
            <summary>
            Добавление подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.SetSubField(ManagedIrbis.RecordField,System.Char,System.String)">
            <summary>
            Установка значения подполя.
            </summary>
            <remarks>Устанавливает значение только первого
            подполя с указанным кодом (если в поле их несколько)!
            </remarks>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.ReplaceSubField(ManagedIrbis.RecordField,System.Char,System.String,System.String)">
            <summary>
            Меняем значение подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.RemoveSubField(ManagedIrbis.RecordField,System.Char)">
            <summary>
            Удаляем подполе.
            </summary>
            <remarks>Удаляет все повторения подполей
            с указанным кодом.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.ReplaceSubField(ManagedIrbis.RecordField,System.Char,System.String,System.Boolean)">
            <summary>
            Меняем значение подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.HaveSubField(ManagedIrbis.RecordField,System.Char)">
            <summary>
            Есть хотя бы одно подполе с указанным кодом?
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.HaveSubField(ManagedIrbis.RecordField,System.Char[])">
            <summary>
            Есть хотя бы одно поле с любым из указанных кодов?
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.HaveNotSubField(ManagedIrbis.RecordField,System.Char)">
            <summary>
            Нет ни одного подполя с указанным кодом?
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.HaveNotSubField(ManagedIrbis.RecordField,System.Char[])">
            <summary>
            Нет ни одного подполя с указанными кодами?
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldValue(ManagedIrbis.RecordField)">
            <summary>
            Получение значения поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldValue(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Получение значения поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.AllSubFields(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Все подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Char)">
            <summary>
            Получение подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Char[])">
            <summary>
            Получение подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String,System.Char)">
            <summary>
            Получение подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String,System.Int32,System.Char,System.Int32)">
            <summary>
            Получение подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String,System.Char,System.Int32)">
            <summary>
            Получение подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Func{ManagedIrbis.RecordField,System.Boolean})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Action{ManagedIrbis.RecordField})">
            <summary>
            Выполнение неких действий над полями.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Action{ManagedIrbis.RecordField},System.Action{ManagedIrbis.SubField})">
            <summary>
            Выполнение неких действий над полями и подполями.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Action{ManagedIrbis.SubField})">
            <summary>
            Выполнение неких действий над подполями.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Func{ManagedIrbis.SubField,System.Boolean})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Char[],System.Func{ManagedIrbis.SubField,System.Boolean})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Char[],System.String[])">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Char,System.String)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[],System.Char[],System.String[])">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Func{ManagedIrbis.RecordField,System.Boolean},System.Func{ManagedIrbis.SubField,System.Boolean})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFirstField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String)">
            <summary>
            Первое вхождение поля с указанным тегом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFirstField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[])">
            <summary>
            Первое вхождение поля с любым из перечисленных тегов.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFirstSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String,System.Char)">
            <summary>
            Первое вхождение подполя, соответствующего указанным
            критериям.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFirstFieldValue(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String)">
            <summary>
            Значение первого поля с указанным тегом или <c>null</c>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldValue(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String)">
            <summary>
            Непустые значения полей с указанным тегом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFirstSubFieldValue(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String,System.Char)">
            <summary>
            Значение первого подполя с указанными тегом и кодом
            или <c>null</c>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubFieldValue(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String,System.Char)">
            <summary>
            Непустые значения подполей с указанными тегом и кодом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.ToJObject(ManagedIrbis.RecordField)">
            <summary>
            Convert the field to <see cref="T:Newtonsoft.Json.Linq.JObject"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.ToJson(ManagedIrbis.RecordField)">
            <summary>
            Convert the field to JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.FromJObject(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Restore field from <see cref="T:Newtonsoft.Json.Linq.JObject"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.FromJson(System.String)">
            <summary>
            Restore subfield from JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.Parse(System.String,System.String)">
            <summary>
            Парсинг текстового представления поля
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.Parse(System.String)">
            <summary>
            Парсинг строкового представления поля.
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.ToXml(ManagedIrbis.RecordField)">
            <summary>
            Converts the field to XML.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.FromXml(System.String)">
            <summary>
            Restore the field from XML.
            </summary>
        </member>
        <member name="T:ManagedIrbis.RecordReference">
            <summary>
            Ссылка на запись (например, для сохранения в "кармане").
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordReference.HostName">
            <summary>
            Host of IRBIS-server, e. g. "127.0.0.1".
            <c>null</c> for default host.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordReference.Database">
            <summary>
            Database name, e. g. "IBIS".
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordReference.Mfn">
            <summary>
            MFN of the record.
            <c>0</c> means "use <see cref="P:ManagedIrbis.RecordReference.Index"/> field".
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordReference.Index">
            <summary>
            Index of the record, e. g. "81.432.1-42/P41-012833".
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordReference.Record">
            <summary>
            Record itself. Not written.
            Can be <c>null</c>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordReference.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordReference.#ctor(ManagedIrbis.MarcRecord)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordReference.LoadFromZipFile(System.String)">
            <summary>
            Load references from archive file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordReference.ReadRecord(ManagedIrbis.IrbisConnection)">
            <summary>
            Load record according to the reference.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordReference.ReadRecords(ManagedIrbis.IrbisConnection,System.Collections.Generic.IEnumerable{ManagedIrbis.RecordReference},System.Boolean)">
            <summary>
            Load records according to the references.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordReference.SaveToZipFile(ManagedIrbis.RecordReference[],System.String)">
            <summary>
            Save references to the archive file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordReference.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordReference.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object stat to the stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordReference.Verify(System.Boolean)">
            <summary>
            Verify the object state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordReference.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.RecordStatus">
            <summary>
            MARC record status
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordStatus.LogicallyDeleted">
            <summary>
            Запись логически удалена
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordStatus.PhysicallyDeleted">
            <summary>
            Запись физически удалена
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordStatus.Absent">
            <summary>
            Запись отсутствует
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordStatus.NonActualized">
            <summary>
            Запись не актуализирована
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordStatus.Last">
            <summary>
            Последний экземпляр записи
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordStatus.Locked">
            <summary>
            Запись заблокирована
            </summary>
        </member>
        <member name="T:ManagedIrbis.Requests.BookRequest">
            <summary>
            Информация о читательском заказе.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.Mfn">
            <summary>
            MFN записи с заказом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.BookDescription">
            <summary>
            Краткое описание заказанного издания.
            Поле 201.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.BookCode">
            <summary>
            Шифр заказанного издания.
            Поле 903.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.RequestDate">
            <summary>
            Дата создания заказа.
            Поле 40.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.ReaderID">
            <summary>
            Идентификатор читателя.
            Поле 30.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.ReaderDescription">
            <summary>
            Краткое описание читателя.
            Поле 31.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.Database">
            <summary>
            Имя БД электронного каталога.
            Поле 1.
            Как правило, IBIS.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.RejectInfo">
            <summary>
            Сведения об отказе.
            Поле 44.
            Подполе A: причина отказа.
            Подполе B: дата.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.Department">
            <summary>
            Место выдачи.
            Поле 102.
            Часто равно *.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.ResponsiblePerson">
            <summary>
            Ответственное лицо.
            Поле 50.
            Берется из логина.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.BookRecord">
            <summary>
            Библиографическая запись о книге.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.Reader">
            <summary>
            Сведения о читателе.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.FreeNumbers">
            <summary>
            Свободные инвентарные номера.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.MyNumbers">
            <summary>
            Свободные номера, предназначенные для данного АРМ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.RequestRecord">
            <summary>
            Запись, на осонове которой построен запрос
            </summary>
        </member>
        <member name="M:ManagedIrbis.Requests.BookRequest.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Requests.BookRequest.Encode">
            <summary>
            Кодируем запись.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Requests.BookRequest.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Requests.BookRequest.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Requests.BookRequest.ToString">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Requests.RequestPrefixes">
            <summary>
            Префиксы стандартных запросов к базе данных RDR.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Status">
            <summary>
            Статус заказа.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Unfulfilled">
            <summary>
            Невыполненные заказы.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Fulfilled">
            <summary>
            Выполненные заказы.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Refused">
            <summary>
            Отказы.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.ReaderID">
            <summary>
            Идентификатор читателя.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.DocumentID">
            <summary>
            Идентификкатор издания.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Number">
            <summary>
            Инвентарный номер или штрих-код экземпляра.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.OrderDate">
            <summary>
            Дата заказа.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.LoanID">
            <summary>
            Шифр выданной литературы.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Description">
            <summary>
            Описание выданной литературы.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.LoanDate">
            <summary>
            Дата выдачи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.ReturnDate">
            <summary>
            Дата возврата.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Attendance">
            <summary>
            Посещаемость.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Lost">
            <summary>
            Утерянные экземпляры.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Debtor">
            <summary>
            Читатели с отрицательным балансом.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Requests.RequestRefusals">
            <summary>
            Причины отказов.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.Busy">
            <summary>
            Занято.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.OutOfStock">
            <summary>
            Нет на месте.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.OutOfStockAndTopo">
            <summary>
            Нет на месте и по топокаталогу.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.Bound">
            <summary>
            В переплете.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.WrittenOff">
            <summary>
            Списано.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.Lacuna">
            <summary>
            Лакуна.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.Defect">
            <summary>
            Дефектный.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.Decrepit">
            <summary>
            Ветхий.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.Redirect">
            <summary>
            Перенаправление.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.Other">
            <summary>
            Прочее.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.DictionaryType">
            <summary>
            Тип словаря для соответствующего поиска
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.DictionaryType.Standard">
            <summary>
            Стандартный словарь, содержащий алфавитный
            список терминов с указанием количества ссылок
            для каждого из них.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.DictionaryType.Explanatory">
            <summary>
            Словарь, дополнительно к стандартным данным содержащий
            пояснения (раскодировку) для каждого термина; применяется
            для терминов, которые представляют собой кодированную
            информацию (например, "Страна издания") и для которых
            имеется соответствующий справочник (файл с расширением
            MNU - например, STR.MNU для кодов стран); в этом случае
            соответствующий справочник указывается
            в параметре ItemMenuNN.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.DictionaryType.Rubricator">
            <summary>
            Специальный вид компоненты "Словарь" для
            Тематического рубрикатора.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.FoundItem">
            <summary>
            Found item.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.FoundItem.Delimiter">
            <summary>
            Delimiter.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.FoundItem.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.FoundItem.Mfn">
            <summary>
            MFN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.FoundItem.ConvertToMfn(System.Collections.Generic.List{ManagedIrbis.Search.FoundItem})">
            <summary>
            Convert to MFN array.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.FoundItem.ConvertToText(System.Collections.Generic.List{ManagedIrbis.Search.FoundItem})">
            <summary>
            Convert to string array.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.FoundItem.ParseLine(System.String)">
            <summary>
            Parse text line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.FoundItem.ParseServerResponse(ManagedIrbis.Infrastructure.ServerResponse,System.Int32)">
            <summary>
            Parse server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.FoundItem.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore the object state from the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.FoundItem.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save the object state to the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.FoundItem.Verify(System.Boolean)">
            <summary>
            Verify the object state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.FoundItem.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.FoundLine">
            <summary>
            Line in list of found documents.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.FoundLine.Mfn">
            <summary>
            MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.FoundLine.Icon">
            <summary>
            Icon.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.FoundLine.Selected">
            <summary>
            Selected by user.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.FoundLine.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.FoundLine.Sort">
            <summary>
            For list sorting.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.FoundLine.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.ComplexLevel`1.IsComplex">
            <summary>
            Is complex expression?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.ComplexLevel`1.Separator">
            <summary>
            Item separator.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.ComplexLevel`1.Items">
            <summary>
            Items.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.ComplexLevel`1.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.ComplexLevel`1.AddItem(`0)">
            <summary>
            Add item.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.ComplexLevel`1.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchLevel0">
            <summary>
            Term, reference or parenthesis.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchLevel0.Term">
            <summary>
            Term.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchLevel0.Reference">
            <summary>
            Reference.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchLevel0.Parenthesis">
            <summary>
            Parenthesis.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel0.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchLevel1">
            <summary>
            level0 . level0
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchLevel2">
            <summary>
            level1 (F) level1
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel2.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchLevel3">
            <summary>
            level2 (G) level2
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel3.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchLevel4">
            <summary>
            level3 * level3
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel4.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchLevel5">
            <summary>
            level4 ^ level4
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel5.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchLevel6">
            <summary>
            level5 + level5
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel6.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchLevel7">
            <summary>
            ( level6 )
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel7.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel7.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchProgram">
            <summary>
            Root of the syntax tree.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchProgram.EntryPoint">
            <summary>
            Program entry point - root of syntax tree.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchProgram.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchQueryLexer">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryLexer.Tokenize(System.String)">
            <summary>
            Tokenize the text.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchQueryParser">
            <summary>
            Parse IRBIS query expression.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchQueryParser.Tokens">
            <summary>
            Tokens.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.#ctor(ManagedIrbis.Search.Infrastructure.SearchTokenList)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseTerm">
            <summary>
            Leaf node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseLevel0">
            <summary>
            Term, Reference or Parenthesis
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseLevel``2(System.Func{``1},ManagedIrbis.Search.Infrastructure.SearchTokenKind)">
            <summary>
            item separator item
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseLevel1">
            <summary>
            level0 . level0
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseLevel2">
            <summary>
            level1 (F) level1
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseLevel3">
            <summary>
            level2 (G) level2
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseLevel4">
            <summary>
            level3 * level3
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseLevel5">
            <summary>
            level4 ^ level4
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseLevel6">
            <summary>
            level5 + level5
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseLevel7">
            <summary>
            ( tokens )
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.Parse">
            <summary>
            Parse the token list.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchQueryUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryUtility.RequireSyntax(System.String,System.String)">
            <summary>
            Require syntax element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryUtility.ExtractTerms(ManagedIrbis.Search.Infrastructure.SearchProgram)">
            <summary>
            Extract search terms from the query.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchReference">
            <summary>
            #N
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchReference.Number">
            <summary>
            Number.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchReference.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchTerm">
            <summary>
            Leaf node of AST.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchTerm.Term">
            <summary>
            K=keyword
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchTerm.Tail">
            <summary>
            $ or @
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchTerm.Context">
            <summary>
            /(tag,tag,tag)
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchTerm.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchToken">
            <summary>
            Token.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchToken.Kind">
            <summary>
            Token kind.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchToken.Position">
            <summary>
            Token position.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchToken.Text">
            <summary>
            Token text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchToken.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchToken.#ctor(ManagedIrbis.Search.Infrastructure.SearchTokenKind,System.Int32,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchToken.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchTokenKind">
            <summary>
            Token kind.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.None">
            <summary>
            No tokens.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.Term">
            <summary>
            K=word
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.LeftParenthesis">
            <summary>
            (
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.Comma">
            <summary>
            ,
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.RightParenthesis">
            <summary>
            )
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.Hash">
            <summary>
            #
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.Plus">
            <summary>
            +
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.Star">
            <summary>
            *
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.Hat">
            <summary>
            ^
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.G">
            <summary>
            (G)
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.F">
            <summary>
            (F)
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.Dot">
            <summary>
            .
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.Slash">
            <summary>
            /
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchTokenList">
            <summary>
            List of tokens.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchTokenList.Current">
            <summary>
            Current token.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchTokenList.IsEof">
            <summary>
            EOF reached?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchTokenList.Length">
            <summary>
            How many tokens?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchTokenList.#ctor(System.Collections.Generic.IEnumerable{ManagedIrbis.Search.Infrastructure.SearchToken})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchTokenList.MoveNext">
            <summary>
            Move to next token.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchTokenList.RequireNext">
            <summary>
            Require next token.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchTokenList.RequireNext(ManagedIrbis.Search.Infrastructure.SearchTokenKind)">
            <summary>
            Require next token.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchTokenList.ToString">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Search.PostingParameters">
            <summary>
            Parameters for <see cref="T:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand"/>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.PostingParameters.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.PostingParameters.FirstPosting">
            <summary>
            First posting to return.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.PostingParameters.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.PostingParameters.NumberOfPostings">
            <summary>
            Number of postings to return.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.PostingParameters.Term">
            <summary>
            Term.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.PostingParameters.ListOfTerms">
            <summary>
            List of terms.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.PostingParameters.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.PostingParameters.Clone">
            <summary>
            Clone the parameters.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.PostingParameters.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.SearchException">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.SearchLogicType">
            <summary>
            Какие логические операторы могут использоваться
            для данного вида поиска.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.SearchLogicType.Or">
            <summary>
            только логика ИЛИ
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.SearchLogicType.OrAnd">
            <summary>
            логика ИЛИ и И
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.SearchLogicType.OrAndNot">
            <summary>
            логика ИЛИ, И, НЕТ (по умолчанию)
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.SearchLogicType.OrAndNotField">
            <summary>
            логика ИЛИ, И, НЕТ, И (в поле)
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.SearchLogicType.OrAndNotPhrase">
            <summary>
            логика ИЛИ, И, НЕТ, И (в поле), И (фраза)
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.SearchManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchManager.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchManager.SearchHistory">
            <summary>
            Search history.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchManager.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchManager.LoadSearchScenarios(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Load search scenarios.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchManager.Search(System.String,System.String,System.String)">
            <summary>
            Search.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.SearchParameters">
            <summary>
            Parameters for <see cref="T:ManagedIrbis.Infrastructure.Commands.SearchCommand"/>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.FirstRecord">
            <summary>
            First record offset.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.FormatSpecification">
            <summary>
            Format specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.MaxMfn">
            <summary>
            Maximal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.MinMfn">
            <summary>
            Minimal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.NumberOfRecords">
            <summary>
            Number of records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.SearchExpression">
            <summary>
            Search query expression.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.SequentialSpecification">
            <summary>
            Specification of sequential search.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.UtfFormat">
            <summary>
            Use UTF8 encoding for
            <see cref="P:ManagedIrbis.Search.SearchParameters.FormatSpecification"/>?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchParameters.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchParameters.Clone">
            <summary>
            Clone the parameters.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchParameters.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Search.SearchParameters.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Search.SearchParameters.Verify(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Search.SearchResult">
            <summary>
            Search result.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchResult.FoundCount">
            <summary>
            Count of records found.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchResult.Query">
            <summary>
            Search query text.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.SearchScenario">
            <summary>
            Search scenario
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.Name">
            <summary>
            Название поиска.
            </summary>
            <remarks>Например: ItemName5=Заглавие</remarks>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.Prefix">
            <summary>
            Префикс для соответствующих терминов в словаре.
            </summary>
            <remarks>Например: ItemPref5=Т=</remarks>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.DictionaryType">
            <summary>
            Тип словаря для соответствующего поиска.
            </summary>
            <remarks>Например: ItemDictionType8=1</remarks>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.MenuName">
            <summary>
            Имя файла справочника.
            </summary>
            <remarks>Например: ItemMenu8=str.mnu</remarks>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.OldFormat">
            <summary>
            Имя формата (без расширения).
            </summary>
            <remarks>Параметр  служит для указания имени формата
            (без расширения), который используется при показе
            термина словаря полностью (Приложение 4 п.13).
            Используется только в ИРБИС32, т.е. в ИРБИС64
            не используется.
            Используется для длинных терминов (больше 30 символов).
            Например: ItemF8For5=!F8TIT.
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.Correction">
            <summary>
            Способ Корректировки по словарю.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.Truncation">
            <summary>
            Исходное положение переключателя "Усечение".
            </summary>
            <remarks>Параметр  определяет исходное положение
            переключателя "Усечение" для данного вида поиска
            (0 - нет; 1 - да) - действует только в АРМе "Каталогизатор".
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.Hint">
            <summary>
            Текст подсказки/предупреждения.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.ModByDicAuto">
            <summary>
            Параметр пока не задействован.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.Logic">
            <summary>
            Логические операторы.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.Advance">
            <summary>
            Правила автоматического расширения поиска
            на основе авторитетного файла или тезауруса.
            </summary>
            <remarks>Параметр имеет следующую структуру:
            Dbname,Prefix,Format.
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.Format">
            <summary>
            Имя формата показа документов.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchScenario.Clone">
            <summary>
            Clone the <see cref="T:ManagedIrbis.Search.SearchScenario"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchScenario.ParseIniFile(AM.IO.IniFile)">
            <summary>
            Parse INI file for scenarios.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchScenario.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Search.SearchScenario.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Search.SearchScenario.Verify(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Search.SearchScenario.ToString">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Search.SearchSyntaxException">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchSyntaxException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchSyntaxException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchSyntaxException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.TermInfo">
            <summary>
            Search term info
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermInfo.Count">
            <summary>
            Количество ссылок.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermInfo.Text">
            <summary>
            Поисковый термин.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfo.Clone">
            <summary>
            Clone the <see cref="T:ManagedIrbis.Search.TermInfo"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfo.Parse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Разбор ответа сервера.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfo.TrimPrefix(ManagedIrbis.Search.TermInfo[],System.String)">
            <summary>
            Trim prefix from terms.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfo.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfo.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfo.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Search.TermInfoEx">
            <summary>
            Extended search term info.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermInfoEx.Mfn">
            <summary>
            MFN записи с искомым термом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermInfoEx.Tag">
            <summary>
            Тег поля с искомым термом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermInfoEx.Occurrence">
            <summary>
            Повторение поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermInfoEx.Index">
            <summary>
            Смещение от начала поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermInfoEx.Formatted">
            <summary>
            Расформатированная запись
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfoEx.ParseEx(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Разбор ответа сервера.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfoEx.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfoEx.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfoEx.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.TermLink">
            <summary>
            Term link.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermLink.Mfn">
            <summary>
            MFN записи с искомым термом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermLink.Tag">
            <summary>
            Тег поля с искомым термом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermLink.Occurrence">
            <summary>
            Повторение поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermLink.Index">
            <summary>
            Смещение от начала поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.Clone">
            <summary>
            Clone the <see cref="T:ManagedIrbis.Search.TermLink"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.Read(System.IO.Stream)">
            <summary>
            Чтение ссылки из файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.Equals(ManagedIrbis.Search.TermLink)">
            <summary>
            Compares this term link with another.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.Equals(System.Object)">
            <summary>
            Determines whether the specified
            <see cref="T:System.Object" />
            is equal to this instance.
            </summary>
            <param name="obj">The object to compare
            with the current object.</param>
            <returns><c>true</c> if the specified
            <see cref="T:System.Object" /> is equal to
            this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance,
            suitable for use in hashing algorithms
            and data structures like a hash table.
            </returns>
        </member>
        <member name="T:ManagedIrbis.Search.TermParameters">
            <summary>
            Parameters for <see cref="T:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand"/>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermParameters.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermParameters.NumberOfTerms">
            <summary>
            Number of terms to return.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermParameters.ReverseOrder">
            <summary>
            Reverse order?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermParameters.StartTerm">
            <summary>
            Start term.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermParameters.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermParameters.Clone">
            <summary>
            Clone the <see cref="T:ManagedIrbis.Search.TermParameters"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermParameters.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Search.TermParameters.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Search.TermParameters.Verify(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Search.TermPosting">
            <summary>
            Ссылка на терм.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermPosting.Mfn">
            <summary>
            MFN записи с искомым термом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermPosting.Tag">
            <summary>
            Тег поля с искомым термом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermPosting.Occurrence">
            <summary>
            Повторение поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermPosting.Count">
            <summary>
            Количество повторений.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermPosting.Text">
            <summary>
            Результат форматирования.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermPosting.Clone">
            <summary>
            Clone the <see cref="T:ManagedIrbis.Search.TermPosting"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Search.TermPosting.Parse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Parse server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermPosting.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermPosting.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermPosting.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermPosting.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.ServerStat">
            <summary>
            IRBIS server stat
            </summary>
        </member>
        <member name="P:ManagedIrbis.ServerStat.RunningClients">
            <summary>
            List of running client.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ServerStat.Unknown1">
            <summary>
            Unknown field.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ServerStat.Unknown2">
            <summary>
            Unknown field.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ServerStat.TotalCommandCount">
            <summary>
            Total commands executed since server start.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ServerStat.Parse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Parse server response.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Server.ServerIniFile">
            <summary>
            irbis_server.ini
            </summary>
        </member>
        <member name="F:ManagedIrbis.Server.ServerIniFile.Main">
            <summary>
            Main section name.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Server.ServerIniFile.Redirect">
            <summary>
            REDIRECT section name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.AlphabetTablePath">
            <summary>
            Путь на таблицу isisacw.
            </summary>
            <remarks>
            C:\IRBIS64\isisacw
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.ClientList">
            <summary>
            Имя файла со списком клиентов с паролями для доступа к серверу.
            </summary>
            <remarks>
            client_m.mnu
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.ClientTimeLive">
            <summary>
            Время жизни клиента без подтверждения (в мин.).
            По умочанию 0 – режим отключен.
            </summary>
            <remarks>
            30
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.DataPath">
            <summary>
            Путь к системным меню и параметрическим файлам БД.
            </summary>
            <remarks>
            C:\IRBIS64\DATAI\
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.EncryptPasswords">
            <summary>
            Шифровать профили клиентов.
            </summary>
            <remarks>
            0
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.FormatsCacheable">
            <summary>
            Включение кэширования при форматировании.
            Значение по умолчанию – 1.
            </summary>
            <remarks>
            1
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.Ini">
            <summary>
            INI-file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.IPAddress">
            <summary>
            IP адрес сервера используется только для показа в таблице описателей.
            </summary>
            <remarks>
            127.0.0.1
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.IPPort">
            <summary>
            IP порт сервера.
            </summary>
            <remarks>
            6666
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.KeepProcessAlive">
            <summary>
            Флаг разрешает серверу использовать процесс обработки многократно.
            </summary>
            <remarks>
            1
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.LocalIPPort">
            <summary>
            Cигнал окончания процесса обработки посылается
            через TCP на порт 7778, а не как сообщение Windows.
            В этом случае RegisterWindowMessage игнорируется.
            </summary>
            <remarks>
            7778
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.MaxLogFileSize">
            <summary>
            Размер log-файла, байты.
            </summary>
            <remarks>
            1000000
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.MaxProcessCount">
            <summary>
            Максимально возможное число процессов обработки,
            если превышено - возвращается ошибка SERVER_OVERLOAD.
            По умолчанию = 20.
            </summary>
            <remarks>
            100
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.MaxProcessRequests">
            <summary>
            Максимально возможное число запросов
            к долгоживущему процессу обработки,
            после чего процесс автоматически прерывается.
            По умолчанию = 100.
            </summary>
            <remarks>
            1000
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.MaxServers">
            <summary>
            Максимальное число процессов обработки,
            которые сервер использует многократно
            (только если KEEP_PROCESS_ALIVE = 1).
            </summary>
            <remarks>
            30
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.ProcessThreadsMonitor">
            <summary>
            Время мониторинга в сек. процессов и потоков
            на соответствие друг другу. Если 0 – режим отключен.
            10 сек по умолчанию.
            </summary>
            <remarks>
            60
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.ProcessTimeLive">
            <summary>
            Максимальное время обработки запроса (в мин.)
            По умочанию 0 – режим отключен.
            </summary>
            <remarks>
            15
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.RecognizeClientAddress">
            <summary>
            Разрешать (определять) адрес машины клиента при регистрации.
            </summary>
            <remarks>
            0
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.RegisterWindowsMessage">
            <summary>
            Сигнал обмена сообщениями между сервером и процессами обработки
            регистрируется в системе WINDOWS и получает уникальный идентификатор.
            </summary>
            <remarks>
            1
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.ServiceName">
            <summary>
            (Не используется) Имя запускаемого сервисом WINDOWS
            сервера ИРБИС64. Это либо irbis_server.exe,
            либо server_64_console.exe.
            </summary>
            <remarks>
            irbis_server.exe
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.SuppressExceptions">
            <summary>
            Не выводить windows-сообщения о непредвиденных ошибках
            в процессах обработки server_64.exe. Этот параметр рекомендуется
            использовать, если во время эксплуатации сервера выводятся
            сообщения об ошибках в server_64.exe.
            </summary>
            <remarks>
            1
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.SystemPath">
            <summary>
            Путь к системным INI-файлам.
            </summary>
            <remarks>
            C:\IRBIS64\
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.ThreadsAvailable">
            <summary>
            Сервер может работать в режиме параллельной обработки
            чтения-записи запросов клиентов в многопотоковом режиме.
            Режим включается данным параметром.
            </summary>
            <remarks>
            1
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.ThreadsAvailableRead">
            <summary>
            Читать запрос от клиента в потоке (по умолчанию 0).
            </summary>
            <remarks>
            1
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.ThreadsAvailableWrite">
            <summary>
            Послать ответ клиенту в потоке (по умолчанию 0).
            </summary>
            <remarks>
            1
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.UpperCaseTable">
            <summary>
            Путь и имя таблицы для перевода в верхний регистр.
            Значение по умолчанию – isisucw.
            </summary>
            <remarks>
            C:\IRBIS64\isisucw
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.WorkDir">
            <summary>
            Директория для сохранения временных файлов,
            используемых для межпроцессорного взаимодействия
            сервера и процессов обработки.
            </summary>
            <remarks>
            C:\IRBIS64\workdir
            Если на сервере установить флаг ОТЛАДКА, временные файлы
            не уничтожаются (следите за объемом физической памяти
            на диске и количеством файлов в директории).
            </remarks>
        </member>
        <member name="M:ManagedIrbis.Server.ServerIniFile.#ctor(AM.IO.IniFile)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerIniFile.GetValue(System.String,System.String)">
            <summary>
            Get value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerIniFile.GetValue(System.String)">
            <summary>
            Get value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerIniFile.GetValue``1(System.String,``0)">
            <summary>
            Get value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerIniFile.GetValue``1(System.String)">
            <summary>
            Get value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerIniFile.SetValue(System.String,System.String)">
            <summary>
            Set value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerIniFile.SetValue``1(System.String,``0)">
            <summary>
            Set value.
            </summary>
        </member>
        <member name="T:ManagedIrbis.StandardDatabases">
            <summary>
            Стандартные базы данных, входящие
            в дистрибутив ИРБИС64.
            </summary>
        </member>
        <member name="F:ManagedIrbis.StandardDatabases.ElectronicCatalog">
            <summary>
            Электронный каталог.
            </summary>
        </member>
        <member name="F:ManagedIrbis.StandardDatabases.Acquisition">
            <summary>
            Комплектование.
            </summary>
        </member>
        <member name="F:ManagedIrbis.StandardDatabases.Readers">
            <summary>
            Читатели.
            </summary>
        </member>
        <member name="F:ManagedIrbis.StandardDatabases.Requests">
            <summary>
            Заказы на литературу.
            </summary>
        </member>
        <member name="T:ManagedIrbis.StatDefinition">
            <summary>
            Parameters for Stat command.
            </summary>
        </member>
        <member name="T:ManagedIrbis.StatDefinition.SortMethod">
            <summary>
            Sort method.
            </summary>
        </member>
        <member name="F:ManagedIrbis.StatDefinition.SortMethod.None">
            <summary>
            Don't sort.
            </summary>
        </member>
        <member name="F:ManagedIrbis.StatDefinition.SortMethod.Ascending">
            <summary>
            Ascending sort.
            </summary>
        </member>
        <member name="F:ManagedIrbis.StatDefinition.SortMethod.Descending">
            <summary>
            Descending sort.
            </summary>
        </member>
        <member name="T:ManagedIrbis.StatDefinition.Item">
            <summary>
            Stat item.
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.Item.Field">
            <summary>
            Field (possibly with subfield) specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.Item.Length">
            <summary>
            Maximum length of the value (truncation).
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.Item.Count">
            <summary>
            Count of items to take.
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.Item.Sort">
            <summary>
            How to sort result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.StatDefinition.Item.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.DatabaseName">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.Items">
            <summary>
            Items.
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.SearchQuery">
            <summary>
            Search query specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.MinMfn">
            <summary>
            Minimal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.MaxMfn">
            <summary>
            Maximal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.SequentialQuery">
            <summary>
            Optional query for sequential search.
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.MfnList">
            <summary>
            List of MFN.
            </summary>
        </member>
        <member name="T:ManagedIrbis.SubField">
            <summary>
            MARC record subfield.
            </summary>
        </member>
        <member name="F:ManagedIrbis.SubField.NoCode">
            <summary>
            Нет кода подполя, т. е. код пока не задан.
            </summary>
        </member>
        <member name="F:ManagedIrbis.SubField.NoCodeString">
            <summary>
            Нет кода подполя, т. е. код пока не задан.
            </summary>
        </member>
        <member name="F:ManagedIrbis.SubField.Delimiter">
            <summary>
            Subfield delimiter.
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubField.Code">
            <summary>
            Код подполя.
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubField.CodeString">
            <summary>
            Код подполя.
            </summary>
            <remarks>
            Для XML-сериализации.
            </remarks>
        </member>
        <member name="P:ManagedIrbis.SubField.Value">
            <summary>
            Значение подполя.
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubField.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="F:ManagedIrbis.SubField.Field">
            <summary>
            Ссылка на поле, владеющее
            данным подполем. Настраивается
            перед передачей в скрипты.
            Всё остальное время неактуально.
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubField.Path">
            <summary>
            Subfield path.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.#ctor(System.Char)">
            <summary>
            Конструктор с присвоением кода подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.#ctor(System.Char,System.String)">
            <summary>
            Конструктор с присвоением кода и значения подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.#ctor(System.Char,System.String,System.Boolean,ManagedIrbis.RecordField)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.SubField.Compare(ManagedIrbis.SubField,ManagedIrbis.SubField)">
            <summary>
            Compares the specified subfields.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.SetCode(System.Char)">
            <summary>
            Sets the subfield code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.SetValue(System.String)">
            <summary>
            Sets the subfield value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubField.ReadOnly">
            <summary>
            Whether the object is read-only?
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.AsReadOnly">
            <summary>
            Creates read-only clone of the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.SetReadOnly">
            <summary>
            Mark the subField as read-only.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.ThrowIfReadOnly">
            <summary>
            Throws if read only.
            </summary>
            <exception cref="!:System.Data.ReadOnlyException">
            If the object is marked as read-only.</exception>
        </member>
        <member name="M:ManagedIrbis.SubField.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" />
            that represents this instance.
            </returns>
        </member>
        <member name="T:ManagedIrbis.SubFieldCode">
            <summary>
            Subfield code related routines.
            </summary>
        </member>
        <member name="F:ManagedIrbis.SubFieldCode.DefaultFirstCode">
            <summary>
            Begin of valid codes range.
            </summary>
        </member>
        <member name="F:ManagedIrbis.SubFieldCode.DefaultLastCode">
            <summary>
            End of valid codes range (including!).
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubFieldCode.ThrowOnVerification">
            <summary>
            Throw exception on verification error.
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubFieldCode.ValidCodes">
            <summary>
            <see cref="T:AM.Collections.CharSet"/> of valid codes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCode.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCode.IsValidCode(System.Char)">
            <summary>
            Whether the code valid.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCode.Normalize(System.Char)">
            <summary>
            Code normalization.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCode.Verify(System.Char,System.Boolean)">
            <summary>
            Verify subfield code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCode.Verify(System.Char)">
            <summary>
            Verify subfield code.
            </summary>
        </member>
        <member name="T:ManagedIrbis.SubFieldCollection">
            <summary>
            Коллекция подполей.
            Отличается тем, что принципиально не принимает
            значения <c>null</c>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubFieldCollection.Field">
            <summary>
            Field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.AddRange(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField})">
            <summary>
            Добавление в коллекцию нескольких подполей сразу
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.Clone">
            <summary>
            Создание "глубокой" копии коллекции.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.Find(System.Predicate{ManagedIrbis.SubField})">
            <summary>
            Поиск с помощью предиката.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.FindAll(System.Predicate{ManagedIrbis.SubField})">
            <summary>
            Отбор с помощью предиката.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.ClearItems">
            <summary>
            Removes all elements from the
            <see cref="T:System.Collections.ObjectModel.Collection`1" />.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.InsertItem(System.Int32,ManagedIrbis.SubField)">
            <summary>
            Inserts an element into the
            <see cref="T:System.Collections.ObjectModel.Collection`1" />
            at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert. The value can't
            be <c>null</c>.</param>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:System.Collections.ObjectModel.Collection`1" />.
            </summary>
            <param name="index">The zero-based index of the element
            to remove.</param>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.SetItem(System.Int32,ManagedIrbis.SubField)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            element to replace.</param>
            <param name="item">The new value for the element
            at the specified index. The value can't be <c>null</c>.
            </param>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore the object state from the given stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save the object state to the given stream.
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubFieldCollection.ReadOnly">
            <summary>
            Whether the collection is read-only?
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.AsReadOnly">
            <summary>
            Create read-only clone of the collection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.ThrowIfReadOnly">
            <summary>
            Throws if read only.
            </summary>
            <exception cref="!:System.Data.ReadOnlyException"></exception>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.SetReadOnly">
            <summary>
            Mark the collection as read-only.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.ToJson">
            <summary>
            Convert the collection to JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.FromJson(System.String)">
            <summary>
            Restore the collection from JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.Assign(ManagedIrbis.SubFieldCollection)">
            <summary>
            Assign.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.AssignClone(ManagedIrbis.SubFieldCollection)">
            <summary>
            Assign clone.
            </summary>
        </member>
        <member name="T:ManagedIrbis.SubFieldUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetFirstSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.Char)">
            <summary>
            Первое вхождение подполя с указанным кодом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetFirstSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.Char[])">
            <summary>
            Первое вхождение подполя с одним из указанных кодов.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetFirstSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.Char,System.String)">
            <summary>
            Первое вхождение подполя с указанными кодом
            и значением (с учётом регистра символов).
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.Char)">
            <summary>
            Фильтрация подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.Char[])">
            <summary>
            Фильтрация подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubFieldRegex(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.String)">
            <summary>
            Фильтрация подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubFieldRegex(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.Char[],System.String)">
            <summary>
            Фильтрация подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubFieldRegex(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[],System.Char[],System.String)">
            <summary>
            Фильтрация подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubFieldValue(ManagedIrbis.SubField)">
            <summary>
            Получение значения подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubFieldValue(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField})">
            <summary>
            Получение значения подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.Action{ManagedIrbis.SubField})">
            <summary>
            Выполнение неких действий над подполями.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Func{ManagedIrbis.RecordField,System.Boolean},System.Func{ManagedIrbis.SubField,System.Boolean})">
            <summary>
            Фильтрация подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[],System.Char[])">
            <summary>
            Фильтрация подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.ToJObject(ManagedIrbis.SubField)">
            <summary>
            Convert the subfield to <see cref="T:Newtonsoft.Json.Linq.JObject"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.ToJson(ManagedIrbis.SubField)">
            <summary>
            Convert the subfield to JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.FromJObject(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Restore subfield from <see cref="T:Newtonsoft.Json.Linq.JObject"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.FromJson(System.String)">
            <summary>
            Restore subfield from JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.ToXml(ManagedIrbis.SubField)">
            <summary>
            Convert the subfield to XML.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.FromXml(System.String)">
            <summary>
            Restore the subfield from XML.
            </summary>
        </member>
        <member name="T:ManagedIrbis.SubFieldValue">
            <summary>
            Subfield value related routines.
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubFieldValue.ThrowOnVerify">
            <summary>
            Throw exception on verification error.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldValue.IsValidValue(System.String)">
            <summary>
            Whether the value valid.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldValue.Normalize(System.String)">
            <summary>
            SubField value normalization.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldValue.Verify(System.String)">
            <summary>
            Verify subfield value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldValue.Verify(System.String,System.Boolean)">
            <summary>
            Verify subfield value.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Systematization.BbkException">
            <summary>
            Исключение, возникающее при работе с ББК.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkException.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkException.#ctor(System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Systematization.BbkIndex">
            <summary>
            Классификационный индекс ББК,
            разложенный по элементам.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkIndex.MainIndex">
            <summary>
            Основной индекс.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkIndex.TerritorialIndex">
            <summary>
            Территориальные типовые деления.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkIndex.SpecialIndex">
            <summary>
            Специальные типовые деления.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkIndex.SocialIndex">
            <summary>
            Код социальной системы.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkIndex.CombinedIndex">
            <summary>
            Комбинированный индекс.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkIndex.Qualifiers">
            <summary>
            Определители.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkIndex.Hren">
            <summary>
            Некая хрень.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkIndex.Comma">
            <summary>
            Запятая???
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkIndex.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkIndex.#ctor(System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkIndex.Parse(System.String)">
            <summary>
            Разбор текстовой строки.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkIndex.Dump(System.IO.TextWriter,System.String)">
            <summary>
            Дамп
            </summary>
        </member>
        <member name="T:ManagedIrbis.Systematization.BbkRange">
            <summary>
            Интервал индексов ББК вроде такого:
            84.3/5
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkRange.FirstIndex">
            <summary>
            Начальное значение индекса.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkRange.OriginalIndex">
            <summary>
            Оригинальное значение (со слешем).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkRange.LastIndex">
            <summary>
            Конечное значение индекса.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkRange.#ctor(System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkRange.GetAllIndexes">
            <summary>
            Получение списка всех индексов из диапазона.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkRange.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Systematization.UdkException">
            <summary>
            Исключение, возникающее при работе с УДК.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.UdkException.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.UdkException.#ctor(System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.UdkException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="T:ManagedIrbis.TableDefinition">
            <summary>
            Parameters for Table command.
            </summary>
        </member>
        <member name="P:ManagedIrbis.TableDefinition.DatabaseName">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.TableDefinition.Table">
            <summary>
            Table name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.TableDefinition.Headers">
            <summary>
            Table headers.
            </summary>
        </member>
        <member name="P:ManagedIrbis.TableDefinition.Mod">
            <summary>
            Mode.
            </summary>
        </member>
        <member name="P:ManagedIrbis.TableDefinition.SearchQuery">
            <summary>
            Search query.
            </summary>
        </member>
        <member name="P:ManagedIrbis.TableDefinition.MinMfn">
            <summary>
            Minimal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.TableDefinition.MaxMfn">
            <summary>
            Maximal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.TableDefinition.SequentialQuery">
            <summary>
            Optional sequential query.
            </summary>
        </member>
        <member name="P:ManagedIrbis.TableDefinition.MfnList">
            <summary>
            List of MFN.
            </summary>
        </member>
        <member name="T:ManagedIrbis.UserInfo">
            <summary>
            Информация о зарегистрированном пользователе системы
            (по данным client_m.mnu).
            </summary>
        </member>
        <member name="P:ManagedIrbis.UserInfo.Number">
            <summary>
            Номер по порядку.
            </summary>
        </member>
        <member name="P:ManagedIrbis.UserInfo.Name">
            <summary>
            Логин.
            </summary>
        </member>
        <member name="P:ManagedIrbis.UserInfo.Password">
            <summary>
            Пароль.
            </summary>
        </member>
        <member name="P:ManagedIrbis.UserInfo.Cataloger">
            <summary>
            Доступность АРМ Каталогизатор.
            </summary>
        </member>
        <member name="P:ManagedIrbis.UserInfo.Reader">
            <summary>
            АРМ Читатель.
            </summary>
        </member>
        <member name="P:ManagedIrbis.UserInfo.Circulation">
            <summary>
            АРМ Книговыдача.
            </summary>
        </member>
        <member name="P:ManagedIrbis.UserInfo.Acquisitions">
            <summary>
            АРМ Комплектатор.
            </summary>
        </member>
        <member name="P:ManagedIrbis.UserInfo.Provision">
            <summary>
            АРМ Книгообеспеченность.
            </summary>
        </member>
        <member name="P:ManagedIrbis.UserInfo.Administrator">
            <summary>
            АРМ Администратор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.UserInfo.Parse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Разбор ответа сервера.
            </summary>
        </member>
        <member name="M:ManagedIrbis.UserInfo.Encode">
            <summary>
            Encode.
            </summary>
        </member>
        <member name="M:ManagedIrbis.UserInfo.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.UserInfo.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object stat to the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.UserInfo.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.UserInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String" />
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" />
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedIrbis.Worksheet.InputMode">
            <summary>
            Режимы ввода
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.InputMode.Default">
            <summary>
            Ввод без дополнительной обработки.
            Простая строка ввода
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.InputMode.Menu">
            <summary>
            Ввод через простое (не иерархическое)
            меню (справочник).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.InputMode.Dictionary">
            <summary>
            Ввод через поисковый словарь.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.InputMode.Rubricator">
            <summary>
            Ввод через рубрикатор ГРНТИ.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.InputMode.Multiline">
            <summary>
            Ввод через оконный редактор
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.InputMode.SubSheet">
            <summary>
            Ввод через вложенный рабочий лист.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.InputMode.Tree">
            <summary>
            Ввод через иерархический справочник
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.InputMode.Switch">
            <summary>
            Ввод с использованием переключателей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.InputMode.ExternalProgram">
            <summary>
            Ввод с использованием внешней программы.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.InputMode.Template">
            <summary>
            Ввод на основе маски (шаблона).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.InputMode.AuthorityFile">
            <summary>
            Ввод через авторитетный файл.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.InputMode.Thesaurus">
            <summary>
            Ввод через тезаурус.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.InputMode.ExternalFile">
            <summary>
            Ввод через обращение к внешнему файлу.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.InputMode.Navigator">
            <summary>
            Ввод на основе ИРБИС-Навигатора.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.InputMode.ExternalDll">
            <summary>
            Ввод с помощью режима (функции) пользователя.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Worksheet.WorksheetItem">
            <summary>
            Одна строчка в рабочем листе.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.Tag">
            <summary>
            Числовая метка поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.Title">
            <summary>
            Наименование поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.Repeatable">
            <summary>
            Повторяемость поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.Help">
            <summary>
            Индекс контекстной помощи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.InputMode">
            <summary>
            Режим ввода.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.InputInfo">
            <summary>
            Дополнительная информация для расширенных
            средств ввода.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.FormalVerification">
            <summary>
            ФЛК.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.Hint">
            <summary>
            Подсказка - текст помощи (инструкции),
            сопровождающий ввод в поле.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.DefaultValue">
            <summary>
            Знчение по умолчанию при создании 
            новой записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.Reserved">
            <summary>
            Используется при определенных режимах ввода.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WorksheetItem.ParseStream(System.IO.TextReader)">
            <summary>
            Разбор потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WorksheetItem.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WorksheetItem.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WorksheetItem.ToString">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Worksheet.WsFile">
            <summary>
            Рабочий лист.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WsFile.Name">
            <summary>
            Имя рабочего листа.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Worksheet.WssFile">
            <summary>
            Вложенный рабочий лист.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WssFile.Name">
            <summary>
            Имя рабочего листа.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WssFile.Items">
            <summary>
            Элементы рабочего листа.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WssFile.#ctor">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WssFile.ParseStream(System.IO.TextReader)">
            <summary>
            Разбор потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WssFile.ReadLocalFile(System.String,System.Text.Encoding)">
            <summary>
            Считывание из локального файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WssFile.ReadLocalFile(System.String)">
            <summary>
            Считывание из локального файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WssFile.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WssFile.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
    </members>
</doc>
